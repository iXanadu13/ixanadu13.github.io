const{entries:$}=Object,{fromEntries:et}=Object,st="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,r=o+s,c=new Uint8Array(r*o).fill(s+1);for(let i=0;i<o;++i)c[i]=i;for(let i=1;i<r;++i)c[i*o]=i;return q(e,t,s,n,c,1,o,""),n},q=(e,t,s,n,o,r,c,i)=>{const h=r*c;t:for(const u of e.keys())if(u===_){const l=o[h-1];l<=s&&n.set(i,[e.get(u),l])}else{let l=r;for(let f=0;f<u.length;++f,++l){const m=u[f],g=c*l,y=g-c;let d=o[g];const a=Math.max(0,l-s-1),w=Math.min(c-1,l+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,l,c,i+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const c of o.keys())if(c!==_&&c.startsWith(r)){const i=new Map;return i.set(c.slice(r.length),o.get(c)),new z(i,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new S(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const c=Math.min(s-n,r.length);let i=1;for(;i<c&&t[n+i]===r[i];)++i;const h=e.get(r);if(i===r.length)e=h;else{const u=new Map;u.set(r.slice(i),h),e.set(t.slice(n,n+i),u),e.delete(r),e=u}n+=i;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)R(n);else if(s.size===1){const[o,r]=s.entries().next().value;A(n,o,r)}}},R=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&A(e.slice(0,-1),n,o)}},A=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],rt=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ct="and_not",ut=(e,t)=>{e.includes(t)||e.push(t)},B=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:c}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,c),B(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:c,match:i}=t.get(n);B(o.terms,c),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,i)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:c,b:i,d:h}=r;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(c+1)/(e+c*(1-i+i*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t);r?.get(s)==null?H(e,s,t,n):r.get(s)<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,r.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},Y={minDirtFactor:.1,minDirtCount:20},yt={..._t,...Y},K=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const c=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:c,terms:[],match:{}})}return s},U=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},T=(e,t,s,n,o,r,c,i,h,u=new Map)=>{if(r==null)return u;for(const l of Object.keys(c)){const f=c[l],m=e._fieldIds[l],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,h),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ut(x.terms,t);const v=G(x.match,s);v?v.push(l):x.match[s]=[l]}else u.set(a,{score:k,terms:[t],match:{[s]:[l]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:c,maxFuzzy:i,bm25:h}=n,{fuzzy:u,prefix:l}={...J.weights,...c},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,h);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(i,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=l*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,h,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,h,m)}return m},Q=(e,t,s={})=>{if(t===K)return wt(e,s);if(typeof t!="string"){const l={...s,...t,queries:void 0},f=t.queries.map(m=>Q(e,m,l));return U(f,l.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,c={tokenize:n,processTerm:o,...r,...s},{tokenize:i,processTerm:h}=c,u=i(t).flatMap(l=>h(l)).filter(l=>!!l).map(at(c)).map(l=>xt(e,l,c));return U(u,c.combineWith)},X=(e,t,s={})=>{const n=Q(e,t,s),o=[];for(const[r,{score:c,terms:i,match:h}]of n){const u=i.length||1,l={id:e._documentIds.get(r),score:c*u,terms:Object.keys(h),queryTerms:i,match:h};Object.assign(l,e._storedFields.get(r)),(s.filter==null||s.filter(l))&&o.push(l)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:c}of X(e,t,s)){const i=c.join(" "),h=n.get(i);h!=null?(h.score+=r,h.count+=1):n.set(i,{score:r,terms:c,count:1})}const o=[];for(const[r,{score:c,terms:i,count:h}]of n)o.push({suggestion:r,terms:i,score:c/h});return o.sort(P),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=Y,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,c]of n)o[r]=Object.fromEntries(c);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},c)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const i=vt(c);return i._documentCount=e,i._nextId=t,i._idToShortId=new Map,i._fieldIds=s,i._avgFieldLength=n,i._dirtCount=o??0,i._index=new z,i},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,c=kt(e,t);c._documentIds=M(n),c._fieldLength=M(o),c._storedFields=M(r);for(const[i,h]of c._documentIds)c._idToShortId.set(h,i);for(const[i,h]of s){const u=new Map;for(const l of Object.keys(h))u.set(parseInt(l,10),M(h[l]));c._index.set(i,u)}return c},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,c=0;const i=(u,l=!1)=>{let f;c===0?f=u.length>20?`… ${u.slice(-20)}`:u:l?f=u.length+c>100?`${u.slice(0,100-c)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),c+=f.length,l||(o.push(["mark",t]),c+=t.length,c>=100&&o.push(" …"))};let h=s.indexOf(n,r);if(h===-1)return null;for(;h>=0;){const u=h+n.length;if(i(e.slice(r,h)),r=u,c>100)break;h=s.indexOf(n,r)}return c<100&&i(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return X(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:c,score:i}=o,h=r.includes("@"),u=r.includes("#"),[l,f]=r.split(/[#@]/),m=Number(l),g=c.sort((d,a)=>d.length-a.length).filter((d,a)=>c.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(h)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},i]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},i]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},i])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:c}])=>{if(!r){const i=rt(t,o);i&&(r=i.h)}return{title:r,contents:c.map(([i])=>i)}})},tt=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=et($(JSON.parse("{\"/\":{\"documentCount\":151,\"nextId\":151,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\",\"3\":\"2#第二章-形式文法和形式语言\",\"4\":\"2#句型\",\"5\":\"2#句子\",\"6\":\"2#语言\",\"7\":\"2#等价文法\",\"8\":\"2#_1型文法\",\"9\":\"2#_2型文法\",\"10\":\"2#_3型文法\",\"11\":\"2#短语\",\"12\":\"2#直接短语\",\"13\":\"2#句柄\",\"14\":\"3\",\"15\":\"3#前置\",\"16\":\"3#解决ar启动40错误\",\"17\":\"4\",\"18\":\"4#git-merge-failed\",\"19\":\"5\",\"20\":\"5#bash切换用户\",\"21\":\"6\",\"22\":\"7\",\"23\":\"8\",\"24\":\"8#下载iso镜像文件\",\"25\":\"8#下载vmware\",\"26\":\"8#使用macos-unlocker\",\"27\":\"8#创建虚拟机\",\"28\":\"8#mac虚拟机-启动\",\"29\":\"8#ref\",\"30\":\"9\",\"31\":\"9#相关文档\",\"32\":\"9#安装环境\",\"33\":\"9#wsl2-ubuntu-20-04\",\"34\":\"9#nodejs-npm\",\"35\":\"9#mongodb\",\"36\":\"9#yapi安装\",\"37\":\"9#警告\",\"38\":\"9#ref\",\"39\":\"10\",\"40\":\"10#solution-1-遍历-中心扩展\",\"41\":\"10#solution-2-动态规划\",\"42\":\"10#二维动态规划\",\"43\":\"10#一维动态规划\",\"44\":\"10#solution-3-字符串哈希\",\"45\":\"10#前缀哈希-二分\",\"46\":\"10#前缀哈希-遍历枚举答案\",\"47\":\"10#solution-4-manacher算法\",\"48\":\"10#ref\",\"49\":\"11\",\"50\":\"11#solution-1-埃氏筛\",\"51\":\"11#solution-2-线性筛-欧拉筛\",\"52\":\"11#solution-3-埃氏筛-bitset\",\"53\":\"12\",\"54\":\"12#排序算法总览\",\"55\":\"12#冒泡排序\",\"56\":\"12#选择排序\",\"57\":\"12#插入排序\",\"58\":\"12#希尔排序\",\"59\":\"12#归并排序\",\"60\":\"12#快速排序\",\"61\":\"12#堆排序\",\"62\":\"12#计数排序\",\"63\":\"12#桶排序\",\"64\":\"12#基数排序\",\"65\":\"13\",\"66\":\"13#共用内存\",\"67\":\"13#size计算\",\"68\":\"14\",\"69\":\"14#原始版本\",\"70\":\"14#使用hash替代递归\",\"71\":\"14#随机选择多种加密算法\",\"72\":\"14#ref\",\"73\":\"15\",\"74\":\"15#constexpr初探——阶乘\",\"75\":\"15#模板元编程——斐波那契数列\",\"76\":\"15#自定义后缀\",\"77\":\"15#简易的c-编译时字符串混淆\",\"78\":\"15#ref\",\"79\":\"16\",\"80\":\"16#_1-哈希取模-hash-sharding\",\"81\":\"16#_2-范围分片-range-sharding\",\"82\":\"16#_3-映射表-lookup-table\",\"83\":\"16#对比与选型建议\",\"84\":\"16#ref\",\"85\":\"17\",\"86\":\"17#题目大意\",\"87\":\"17#input\",\"88\":\"17#output\",\"89\":\"17#sample-input\",\"90\":\"17#sample-output\",\"91\":\"17#solution\",\"92\":\"18\",\"93\":\"18#题目大意\",\"94\":\"18#input\",\"95\":\"18#sample-input\",\"96\":\"18#sample-output\",\"97\":\"18#solution\",\"98\":\"19\",\"99\":\"19#题目大意\",\"100\":\"19#solution\",\"101\":\"20\",\"102\":\"20#主要日志系统\",\"103\":\"20#jul\",\"104\":\"20#log4j\",\"105\":\"20#logback\",\"106\":\"20#log4j2\",\"107\":\"20#日志facade-抽象框架\",\"108\":\"20#common-logging\",\"109\":\"20#slf4j\",\"110\":\"20#注意事项\",\"111\":\"21\",\"112\":\"21#使用原生指针和unsafe实现自引用\",\"113\":\"21#将局部变量生命周期变为-static\",\"114\":\"21#problem\",\"115\":\"21#solution\",\"116\":\"21#错误处理相关\",\"117\":\"21#将option类型转换为result类型\",\"118\":\"21#将result类型转换为option类型\",\"119\":\"21#option-transpose\",\"120\":\"21#全局变量\",\"121\":\"21#启动时初始化-后续只读\",\"122\":\"21#运行时需要修改\",\"123\":\"21#ref\",\"124\":\"22\",\"125\":\"22#使用指定的rust版本\",\"126\":\"22#pub关键字\",\"127\":\"22#ref\",\"128\":\"23\",\"129\":\"23#基本配置\",\"130\":\"23#迁移\",\"131\":\"23#常用指令\",\"132\":\"23#连接wsl桌面\",\"133\":\"23#在vscode中连接wsl-写入权限问题\",\"134\":\"23#ref\",\"135\":\"24\",\"136\":\"25\",\"137\":\"25#安装kali-linux\",\"138\":\"25#安装黑科技kex\",\"139\":\"25#运行kex\",\"140\":\"25#最终解决方法\",\"141\":\"26\",\"142\":\"27\",\"143\":\"28\",\"144\":\"29\",\"145\":\"30\",\"146\":\"31\",\"147\":\"32\",\"148\":\"33\",\"149\":\"34\",\"150\":\"35\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[2,2],\"2\":[5],\"3\":[6],\"4\":[1,29],\"5\":[1,12],\"6\":[1,32],\"7\":[2,17],\"8\":[2,8],\"9\":[2,45],\"10\":[2,33],\"11\":[1,16],\"12\":[2,18],\"13\":[1,26],\"14\":[11],\"15\":[1,90],\"16\":[5,160],\"17\":[5],\"18\":[4,51],\"19\":[3],\"20\":[3,19],\"21\":[10,95],\"22\":[26,33],\"23\":[6,19],\"24\":[3,6],\"25\":[2,16],\"26\":[4,43],\"27\":[2,90],\"28\":[5,29],\"29\":[1],\"30\":[3,21],\"31\":[2,116],\"32\":[2,12],\"33\":[4,10],\"34\":[4,7],\"35\":[1,74],\"36\":[2,153],\"37\":[1,28],\"38\":[1,48],\"39\":[3,26],\"40\":[8,28],\"41\":[6,7],\"42\":[3,58],\"43\":[3,83],\"44\":[6],\"45\":[5,185],\"46\":[7,7],\"47\":[6,18],\"48\":[1,47],\"49\":[2,26],\"50\":[6,84],\"51\":[9,87],\"52\":[8,97],\"53\":[5],\"54\":[3,37],\"55\":[1,56],\"56\":[2,1],\"57\":[1,1],\"58\":[2,1],\"59\":[2,67],\"60\":[2,1],\"61\":[1,1],\"62\":[2,1],\"63\":[2,1],\"64\":[1,1],\"65\":[5],\"66\":[2,51],\"67\":[2,63],\"68\":[8,25],\"69\":[2,152],\"70\":[4,165],\"71\":[4,32],\"72\":[1,19],\"73\":[4],\"74\":[4,59],\"75\":[9,67],\"76\":[2,26],\"77\":[7,119],\"78\":[1,30],\"79\":[9,282],\"80\":[1,92],\"81\":[1,82],\"82\":[1,95],\"83\":[0,73],\"84\":[1,13],\"85\":[8,17],\"86\":[2,46],\"87\":[1,65],\"88\":[1,13],\"89\":[3,10],\"90\":[3,3],\"91\":[1,195],\"92\":[9,17],\"93\":[2,26],\"94\":[1,19],\"95\":[3,4],\"96\":[3,4],\"97\":[1,83],\"98\":[7,17],\"99\":[2,21],\"100\":[1,70],\"101\":[5],\"102\":[3],\"103\":[1,12],\"104\":[1,18],\"105\":[1,21],\"106\":[1,68],\"107\":[6],\"108\":[3,60],\"109\":[1,106],\"110\":[1,89],\"111\":[4,72],\"112\":[8,236],\"113\":[6],\"114\":[1],\"115\":[1,8],\"116\":[2],\"117\":[6,46],\"118\":[6,56],\"119\":[5,39],\"120\":[1,55],\"121\":[6,103],\"122\":[4,56],\"123\":[1,30],\"124\":[7],\"125\":[5,93],\"126\":[2,56],\"127\":[1,18],\"128\":[2,31],\"129\":[2,42],\"130\":[1,83],\"131\":[2,21],\"132\":[3,22],\"133\":[9,32],\"134\":[1,10],\"135\":[5,111],\"136\":[10],\"137\":[4,6],\"138\":[4,8],\"139\":[2,138],\"140\":[3,45],\"141\":[7,156],\"142\":[0,4],\"143\":[1],\"144\":[1],\"145\":[1],\"146\":[1],\"147\":[1],\"148\":[1],\"149\":[1],\"150\":[1]},\"averageFieldLength\":[3.3509933774834435,48.49297412211803],\"storedFields\":{\"0\":{\"h\":\"博客主页\"},\"1\":{\"h\":\"介绍页\",\"t\":[\"空空如也！\"]},\"2\":{\"h\":\"编译原理期末复习笔记\"},\"3\":{\"h\":\"第二章：形式文法和形式语言\"},\"4\":{\"h\":\"句型\",\"t\":[\"从文法的开始符号出发进行零步或多于零步的推导得到的文法符号串（S =*=> α）。句型可以既包含终结符号又包含非终结符号。\"]},\"5\":{\"h\":\"句子\",\"t\":[\"只包含终结符号的句型称为句子。句子是一种特殊的句型。\"]},\"6\":{\"h\":\"语言\",\"t\":[\"文法 G 推导出的所有句子组成的集合，称为语言，记为 L(G)，即：\",\"L(G)={x∣S=∗>x且x∈VT​∗}\"]},\"7\":{\"h\":\"等价文法\",\"t\":[\"一个文法对应一个语言，但一个语言可能由若干个文法产生它，这若干个文法是等价的，称为等价文法。\"]},\"8\":{\"h\":\"1型文法\",\"t\":[\"上下文有关文法，Context Sensitive Grammar\"]},\"9\":{\"h\":\"2型文法\",\"t\":[\"上下文无关文法，Context Free Grammar\",\"要求产生式左边只有1个非终结符号，高级程序设计语言大部分语法结构使用2型文法描述。\",\"例如：\",\"S -> aB | bA A -> a | aS | bAA B -> b | bS | aBB\"]},\"10\":{\"h\":\"3型文法\",\"t\":[\"正规文法，Regular Grammar\",\"对于每个产生式，只能是以下两种形式之一：\",\"(1) A -> a 或 A -> aB // 右线性文法 (2) A -> a 或 A -> Ba // 左线性文法\"]},\"11\":{\"h\":\"短语\",\"t\":[\"一棵子树的所有叶子自左至右排列起来形成一个相对于子树根的短语。\"]},\"12\":{\"h\":\"直接短语\",\"t\":[\"仅有父子两代的一棵子树，它的所有叶子自左至右排列起来所形成的符号串\"]},\"13\":{\"h\":\"句柄\",\"t\":[\"一个句型的分析树中最左最下那棵只有父子两代的子树的所有叶子的自左至右排列。\",\"最左直接短语称为句柄。\",\"短语、直接短语、句柄\"]},\"14\":{\"h\":\"解决在windows 11中无法使用eNSP的问题\"},\"15\":{\"h\":\"前置\",\"t\":[\"eNSP 1.3.00.100 Setup.exe\",\"VirtualBox-5.2.44-139111-Win.exe\",\"WinPcap_4_1_3.exe\",\"首先，你必须下载好这些软件，复制这些文件名自行google都不难下载到。（PS：基本上都是百度网盘链接，没会员的话估计要等一会儿）\",\"至于版本，不需要和我这里完全相同，以具体你搜到的教程为准。但是VirtualBox版本必须是5.x开头的，那些新版的7.x的肯定不行，如果你已经通过VirtualBox 7.x安装了虚拟机，那么很遗憾你必须在VirtualBox 7.x和eNSP之间做出取舍了。\",\"安装顺序看搜到的教程即可，不再赘述。\"]},\"16\":{\"h\":\"解决AR启动40错误\",\"t\":[\"当你满心欢喜地安装完eNSP，可能还顺便完成了计算机网络的HTTP、ARP实验，似乎一切正常。但如果你尝试启动一个AR路由器，你就会收到一个编号为40的启动错误。（其实启动FW设备也会这样，笔者也是在做NAT实验时发现，无论如何都绕不开AR路由器...）\",\"首先，请根据跳出的帮助，一步步照着完成，如果确认已经全部完成，但还是无法启动AR设备，而且你电脑还是Win11的话，那请接着看下去：\",\"首先，以管理员身份运行cmd，输入bcdedit：\",\"确认这里的hypervisorlaunchtype项的值为Off，如果不为Off，运行bcdedit /set hypervisorlaunchtype off即可。\",\"注意：执行完这条指令后必须重启计算机才能生效。 （不能关机再开机，必须选择重新启动）\",\"如果你和我一样是Windows 11 家庭版，可能还需要继续看下去：\",\"在cmd中输入regedit打开注册表编辑器，编辑->查找->输入CachedDrtmAuthIndex，不出意外的话能跳到类似于计算机\\\\HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\ControlSet001\\\\Control\\\\DeviceGuard的路径，然后把这里的两个项或者三个项的值均修改为0，再重启电脑。（我的三项初始值分别为0,1,1）\",\"重启完成后，就能愉快地使用AR路由器了~\"]},\"17\":{\"h\":\"记录有关Git的命令\"},\"18\":{\"h\":\"Git Merge Failed\",\"t\":[\"试图合并分支时，有时候会遇到这样的报错： Git Merge Failed fatal: You have not concluded your merge (MERGE_HEAD exists).\",\"有2种选择：\",\"输入git commit -m \\\"commit info\\\"合并分支。\",\"放弃本地分支，直接覆盖：\",\"git reset --hard git pull\"]},\"19\":{\"h\":\"Linux指令备忘录\"},\"20\":{\"h\":\"bash切换用户\",\"t\":[\"首先为其设置password：\",\"sudo passwd 要切换的用户名\",\"然后使用su指令切换即可：\",\"su 要切换的用户名\"]},\"21\":{\"h\":\"Nodejs中报错“Error: spawn EINVAL”\",\"t\":[\"这是由于执行子进程存在安全漏洞，因此在18.x, 20.x, 21.x版本中直接禁止了。\",\"详见：https://nodejs.org/en/blog/vulnerability/april-2024-security-releases-2\",\"需要在报错的包对应的scripts/install.js文件中加上shell: true：\",\"'use strict' const os = require('os'); const path = require('path'); const spawn = require('child_process').spawn; const gypArgs = ['rebuild']; if (process.env.NODE_PTY_DEBUG) { gypArgs.push('--debug'); } const gypProcess = spawn(os.platform() === 'win32' ? 'node-gyp.cmd' : 'node-gyp', gypArgs, { shell: true, cwd: path.join(__dirname, '..'), stdio: 'inherit' }); gypProcess.on('exit', function (code) { process.exit(code); });\"]},\"22\":{\"h\":\"解决vscode报错：找不到“cookie”的类型定义文件。程序包含该文件是因为: 隐式类型库 \\\"cookie\\\" 的入口点ts\",\"t\":[\"第一步：清理yarn缓存\",\"yarn cache clean\",\"第二步：删除node_modules文件夹和yarn.lock\",\"第三步：重新下载依赖\",\"yarn install\",\"然后你就会发现报错已经消失辣~\"]},\"23\":{\"h\":\"在VMware中安装MacOS虚拟机\",\"t\":[\"写在前面：如果宿主机是AMD的cpu，不需要再尝试了，直接放弃就行\"]},\"24\":{\"h\":\"下载iso镜像文件\",\"t\":[\"我下载的是这个：\"]},\"25\":{\"h\":\"下载VMware\",\"t\":[\"这个不多说，网上找个就行，我的是VMware Workstation 17 Pro\"]},\"26\":{\"h\":\"使用macOS Unlocker\",\"t\":[\"直接把仓库git clone或者下载下来即可，接着找到需要的win-install.cmd，右键以管理员身份运行。\",\"注意运行之前先把VMware关了，不然会遇到Permission Denied。\",\"如果忘关了，关闭VMware之后重新运行即可。\"]},\"27\":{\"h\":\"创建虚拟机\",\"t\":[\"打开VMware Workstation，右键新建虚拟机\",\"选择自定义安装\",\"硬件兼容性\",\"这里我使用了默认设置\",\"选择稍后安装映像文件\",\"选择操作系统类型\",\"设置虚拟机存放位置\",\"设置处理器数量\",\"我设置的是1个处理器和4个内核，可视情况调整\",\"虚拟机内存\",\"我使用的是默认值4096MB\",\"网络类型设置\",\"这里选择NAT或者桥接都行\",\"I/O控制器类型\",\"使用默认值\",\"磁盘类型\",\"使用默认值\",\"磁盘容量设置\",\"虚拟磁盘存放位置\",\"至此，虚拟机创建完成\",\"把下载好的iso镜像文件挂载到虚拟机\",\"右键你创建好的虚拟机，点击“设置”：\",\"修改.vmx文件\",\"找到存放vm的路径：\",\"使用记事本打开该文件，在最下面新开一行，加入以下内容：\",\"smc.version = \\\"0\\\"\"]},\"28\":{\"h\":\"mac虚拟机，启动！\",\"t\":[\"打开后会看到一个苹果图案，以及进度条。进度条走完之后就能进入以下页面：\",\"选择“简体中文”。\",\"接下来安装系统：\",\"等待安装完成：\"]},\"29\":{\"h\":\"Ref\"},\"30\":{\"h\":\"Yapi安装教程\",\"t\":[\"作为一个已经停止维护的项目，Yapi 安装过程中比较容易踩坑，这里记录一下安装过程。\"]},\"31\":{\"h\":\"相关文档\",\"t\":[\"https://hellosean1025.github.io/yapi/devops/index.html#%e5%ae%89%e8%a3%85\",\"文档里提到的方式一无法成功，存在两个问题：\",\"淘宝镜像源地址已由https://registry.npm.taobao.org变更为https://registry.npmmirror.com\",\"可视化部署程序中，仍然尝试旧的yapi存档网站/错误淘宝镜像源地址的下载安装包，而这些网站已无法访问。\",\"因此，只能使用方式二：命令行部署。\",\"而Yapi不支持高版本的node，如果采用过高版本会出现一连串类似以下的报错，无法使用：\",\"yapi (node:11836) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency\",\"而我又不希望特地为了yapi频繁使用nvm切换本地node版本，因此直接在WSL2 Ubuntu 20.04上安装yapi。\"]},\"32\":{\"h\":\"安装环境\",\"t\":[\"WSL2 Ubuntu 20.04\",\"nodejs 10.19.0\",\"npm\",\"MongoDB v3.6.8\"]},\"33\":{\"h\":\"WSL2 Ubuntu 20.04\",\"t\":[\"不再赘述，可以参考我的另一篇文章\"]},\"34\":{\"h\":\"nodejs && npm\",\"t\":[\"apt-get install nodejs apt-get install npm\"]},\"35\":{\"h\":\"MongoDB\",\"t\":[\"sudo apt install mongodb\",\"MongoDB 目前是一个 systemd 服务，我们可以使用 systemctl 来检查和修改它的状态：\",\"sudo systemctl status mongodb sudo systemctl stop mongodb sudo systemctl start mongodb\",\"配置MongoDB用户名和密码：\",\"mongo # 进入 MongoDB shell 后，切换到数据库管理员 use admin # 创建 root 用户 db.createUser({user:\\\"admin\\\", pwd:\\\"admin123\\\", roles:[{role:\\\"root\\\", db:\\\"admin\\\"}]}) # 切换到数据库 yapi use yapi # 创建 yapi 管理员用户 db.createUser({user:\\\"yapiAdmin\\\", pwd:\\\"yapi123\\\", roles:[{role:\\\"dbOwner\\\", db:\\\"yapi\\\"}]}) # 退出 exit # 重新启动MongoDB并连接创建的用户 sudo service mongod restart\"]},\"36\":{\"h\":\"Yapi安装\",\"t\":[\"不要把Yapi安装在/usr/bin/目录下，否则会出现权限问题。\",\"cd /usr/local/ mkdir yapi cd yapi git clone https://github.com/YMFE/yapi.git vendors //或者下载 zip 包解压到 vendors 目录（clone 整个仓库大概 140+ M，可以通过 `git clone --depth=1 https://github.com/YMFE/yapi.git vendors` 命令减少，大概 10+ M） cp vendors/config_example.json ./config.json //复制完成后请修改相关配置 vim config.json //修改相关配置\",\"{ \\\"port\\\": \\\"3000\\\", \\\"adminAccount\\\": \\\"admin@admin.com\\\", // 可以改成你的邮箱 \\\"timeout\\\":120000, \\\"db\\\": { \\\"servername\\\": \\\"127.0.0.1\\\", \\\"DATABASE\\\": \\\"yapi\\\", \\\"port\\\": 27017, \\\"user\\\": \\\"yapiAdmin\\\", \\\"pass\\\": \\\"yapi123\\\", \\\"authSource\\\": \\\"\\\" }, \\\"mail\\\": { \\\"enable\\\": true, \\\"host\\\": \\\"smtp.163.com\\\", \\\"port\\\": 465, \\\"from\\\": \\\"***@163.com\\\", \\\"auth\\\": { \\\"user\\\": \\\"***@163.com\\\", \\\"pass\\\": \\\"*****\\\" } } }\",\"保存并退出。\",\"cd vendors sudo npm install --production --registry https://registry.npmmirror.com sudo npm run install-server //安装程序会初始化数据库索引和管理员账号，管理员账号名可在 config.json 配置 sudo node server/app.js //启动服务器后，请访问 127.0.0.1:{config.json配置的端口}，初次运行会有个编译的过程，请耐心等候\",\"然后就可以在主机浏览器直接通过http://localhost:3000访问 Yapi 了。管理员初始账号见config.json文件，密码为ymfe.org。\"]},\"37\":{\"h\":\"警告\",\"t\":[\"笔者直接安装在个人笔记本的WSL2中，没有考虑安全方面的问题。如安装在生产环境中，请务必做好防护措施，否则产生的损失后果自负。\"]},\"38\":{\"h\":\"Ref\",\"t\":[\"https://hellosean1025.github.io/yapi/devops/index.html#%e5%ae%89%e8%a3%85\",\"https://juejin.cn/post/6953555933733584904\",\"https://blog.csdn.net/weixin_47679150/article/details/107918607\",\"https://shawchen08.github.io/2019/04/04/yapi-deploy/\",\"https://longdada.me/ubuntu-20-04-install-yapi/\",\"https://zhuanlan.zhihu.com/p/655022723\"]},\"39\":{\"h\":\"最长回文子串\",\"t\":[\"题目传送门：https://leetcode.cn/problems/longest-palindromic-substring/description/?envType=study-plan-v2&envId=top-100-liked\"]},\"40\":{\"h\":\"Solution 1: 遍历+中心扩展\",\"t\":[\"时间复杂度：O(n2)\",\"顺序遍历，每次通过O(n)时间复杂度找到以当前字符为中心的最长回文子串，所有结果中取最长。\"]},\"41\":{\"h\":\"Solution 2: 动态规划\",\"t\":[\"时间复杂度：O(n2)\"]},\"42\":{\"h\":\"二维动态规划\",\"t\":[\"定义dp[i][j]表示子串s[i..j]是否为回文字符串，显然dp[i][i] = true。\",\"状态转移：如果s[i] == s[j] && dp[i+1][j-1] == true，则dp[i][j] = true。\",\"class Solution { public: string longestPalindrome(string s) { int ansl = 0, len = 1; int n = s.size(); vector<vector<bool>> dp(n, vector<bool>(n, false)); // for (int i = 0; i < n; ++i) // dp[i][i] = true; for (int i = n-1; i >= 0; --i) { for (int j = i; j < n; ++j) { if (s[i] == s[j]){ if (i+1>=j-1){ dp[i][j] = true; } else if (i+1<n && j-1>=0){ dp[i][j] = dp[i+1][j-1]; } } if (dp[i][j] && j-i+1 > len) { len = j-i+1; ansl = i; } } } return s.substr(ansl, len); } };\"]},\"43\":{\"h\":\"一维动态规划\",\"t\":[\"dp[j] = i 表示以下标j结尾的最长回文子串从i开始， 初始状态dp[i] = i。\",\"状态转移：令left = dp[i-1]-1，如果left>=0 && s[left] == s[i]，则dp[i] = left。（每次最多在左右各扩展1个字符）；如果扩展失败，则保持当前右边界i不变，向右收缩左边界j，直至s[i..j]为回文串。\",\"class Solution { public: string longestPalindrome(string s) { int ansl = 0, len = 1; vector<int> dp(s.size()); for (int i = 0; i < dp.size(); ++i){ dp[i] = i; } for (int i = 1; i < s.size(); ++i) { int left = dp[i-1]-1; if (left >= 0 && s[left] == s[i]){ dp[i] = left; } else { while (++left < i){ int j = left, k = i; while (j <= k && s[j] == s[k]) { ++j, --k; } if (j > k) { dp[i] = left; break; } } } if (i-dp[i]+1 > len){ ansl = dp[i]; len = i-dp[i]+1; } } return s.substr(ansl, len); } };\"]},\"44\":{\"h\":\"Solution 3: 字符串哈希\"},\"45\":{\"h\":\"前缀哈希 + 二分\",\"t\":[\"时间复杂度：O(nlogn)\",\"#include <bits/stdc++.h> typedef long long ll; using namespace std; constexpr int N = 1e5 + 5; class Hash { using u64 = unsigned long long; const u64 base = 131; // base 的取值要保证覆盖字符集大小 const u64 mod1 = 998244353, mod2 = 1e9 + 7; private: int n; // h1[i+1] 表示前缀 s[0..i] (前闭后闭) 的哈希值，特殊的：h1[0] = 0 vector<u64> h1, h2; vector<u64> p1, p2; // p[i] 就是 base^i 次方 public: explicit Hash(const string &s): n(s.size()), h1(vector<u64>(n + 1, 0)), h2(vector<u64>(n + 1, 0)), p1(vector<u64>(n + 1, 0)), p2(vector<u64>(n + 1, 0)) { p1[0] = p2[0] = 1; // power(base, 0) is 1 for (size_t i = 1; i <= s.size(); i++) { // ch-'a'+1 的保证大于 0, 避开特殊的哈希零值 h1[i] = (h1[i - 1] * base % mod1 + s[i - 1]) % mod1; h2[i] = (h2[i - 1] * base % mod2 + s[i - 1]) % mod2; p1[i] = p1[i - 1] * base % mod1; p2[i] = p2[i - 1] * base % mod2; } } // 计算字符串区间 s[i..j] 的哈希值, 前闭后闭 // 取前缀 A = h1[j+1] 减去前缀 B = h1[(i-1)+1] // 在 base 进制下，左移 B 和 A 左端对其，然后相减, 定义为 [i..j] 区间的哈希值 // 即 A - B * base ^ (j-i+1) (这里 ^ 符号是幂的意思) // 要保证传入的 j >= i u64 sub1(int i, int j) { // assert(i >= 0 && i<n && i<=j && j < n); return (h1[j + 1] - h1[i] * p1[j - i + 1] % mod1 + mod1) % mod1; } u64 sub2(int i, int j) { // assert(i >= 0 && i<n && i<=j && j < n); return (h2[j + 1] - h2[i] * p2[j - i + 1] % mod2 + mod2) % mod2; } }; class Solution { public: string longestPalindrome(string s) { int n = s.size(); string str; for (int i = 0; i < n; ++i) { str.push_back(s[i]); str.push_back('\\\\1'); } str.pop_back(); n = n * 2 - 1; swap(str, s); int ansl = 0, len = 1; auto hash1 = Hash(s); auto rev = string(s.rbegin(), s.rend()); auto hash2 = Hash(rev); // cout << hash1.sub1(0,4) << '\\\\n'; // cout << hash2.sub1(4,8) << '\\\\n'; // cout << hash1.sub2(0,4) << '\\\\n'; // cout << hash2.sub2(4,8) << '\\\\n'; // for (int i = 0; i < n; ++i) { // for (int j = i; j < n; ++j) { //// printf(\\\"i=%d, j=%d, hash1=%d, hash2=%d\\\\n\\\", i,j,hash1.sub1(i,j), hash2.sub1(i,j)); // printf(\\\"i=%d, j=%d, hash1=%d, hash2=%d\\\\n\\\", i,j,hash1.sub2(i,j), hash2.sub2(i,j)); // } // } auto solve = [&](int i) { int l = 0, r = min({i, n-i, n>>1}); while (l < r) { int mid = (l+r+1) >> 1; int left, right; left = i-mid, right = i+mid; // int h11 = hash1.sub1(left, i); // int h21 = hash2.sub1(n-1-right, n-1-i); // int h12 = hash1.sub2(left, i); // int h22 = hash2.sub2(n-1-right, n-1-i); if ( left >= 0 && right < n && i >= 0 && i < n && hash1.sub1(left, i) == hash2.sub1(n-1-right, n-1-i) && hash1.sub2(left, i) == hash2.sub2(n-1-right, n-1-i) ){ l = mid; } else { r = mid - 1; } } int new_len = l + (s[i-l]!=1); if (new_len > len){ len = new_len; ansl = i - l; } }; for(int i = 0; i < n; ++i){ solve(i); } string res; int valid = 0, i = ansl; while (valid < len) { if (s[i] != 1) { ++valid; res.push_back(s[i]); } ++i; } return res; } }; int main() { #ifndef ONLINE_JUDGE freopen(\\\"data.in\\\", \\\"r\\\", stdin); freopen(\\\"data.out\\\", \\\"w\\\", stdout); #endif string str; cin >> str; auto sol = new Solution; cout << sol -> longestPalindrome(str); return 0; }\"]},\"46\":{\"h\":\"前缀哈希 + 遍历枚举答案\",\"t\":[\"时间复杂度：O(n)\"]},\"47\":{\"h\":\"Solution 4: Manacher算法\",\"t\":[\"时间复杂度：O(n)\",\"https://oi-wiki.org/string/manacher/\"]},\"48\":{\"h\":\"Ref\",\"t\":[\"https://oi-wiki.org/string/hash/#%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2\",\"https://writings.sh/post/algorithm-longest-palindromic-substring#%E5%89%8D%E7%BC%80%E5%93%88%E5%B8%8C%E6%B3%95--%E4%BA%8C%E5%88%86\"]},\"49\":{\"h\":\"素数筛\",\"t\":[\"题目传送门：洛谷3383\",\"题意：给定一个范围 n ，有 q 个询问，每次输出第 k 小的素数。\"]},\"50\":{\"h\":\"Solution 1: 埃氏筛\",\"t\":[\"时间复杂度[1]：O(n⋅loglogn​)\",\"注意，这里的g[x] == 1表示确定x不是素数\",\"#include <iostream> #include <vector> typedef long long ll; using namespace std; const int N = 1e8 + 5; bool g[N]; int main(){ ios::sync_with_stdio(false); cin.tie(0),cout.tie(0); g[0] = 1; g[1] = 1; for(int i = 2; i < 10000; ++i){ if (g[i]) continue; for (int j = i * i; j<N; j+=i) { g[j] = true; } } int n,q,cnt = 0; cin >> n >> q; vector<int> prime(n+2); for (int i = 2; i <= n; ++i) { if (!g[i]) prime[++cnt] = i; } while (q--){ int x; cin>>x; cout << prime[x] << '\\\\n'; } return 0; }\",\"测评用时：1.44s submit 1\"]},\"51\":{\"h\":\"Solution 2: 线性筛（欧拉筛）\",\"t\":[\"线性筛避免了对一个合数重复标记，达到了线性时间复杂度\",\"时间复杂度：O(n)\",\"#include <iostream> #include <vector> typedef long long ll; using namespace std; const int N = 1e8 + 5; int main(){ ios::sync_with_stdio(false); cin.tie(0),cout.tie(0); int n,q; cin >> n >> q; vector<bool> g(N); vector<int> prime; for (int i = 2; i <= n; ++i) { if (!g[i]){ prime.push_back(i); } for (int pri_j : prime) { int mul = i * pri_j; if (mul > n) break; g[mul] = true; if (i % pri_j == 0){ break; } } } while (q--){ int x; cin>>x; cout << prime[x-1] << '\\\\n'; } return 0; }\",\"测评用时：0.75s submit 2\"]},\"52\":{\"h\":\"Solution 3: 埃氏筛+bitset\",\"t\":[\"由于bitset、vector<bool>存在常数优化，埃氏筛+bitset的效率可以接近线性筛\",\"#include <iostream> #include <vector> #include <bitset> typedef long long ll; using namespace std; const int N = 1e8 + 5; int main(){ ios::sync_with_stdio(false); cin.tie(0),cout.tie(0); bitset<N> g; g[0] = 1; g[1] = 1; for(int i = 2; i < 10000; ++i){ if (g[i]) continue; for (int j = i * i; j<N; j+=i) { g[j] = true; } } int n,q,cnt = 0; cin >> n >> q; vector<int> prime(n+2); for (int i = 2; i <= n; ++i) { if (!g[i]) prime[++cnt] = i; } while (q--){ int x; cin>>x; cout << prime[x] << '\\\\n'; } return 0; }\",\"测评用时：0.82s submit 3\",\"只考虑筛的过程，如果要取出素数还需O(n)↩︎\"]},\"53\":{\"h\":\"常见排序算法及其实现\"},\"54\":{\"h\":\"排序算法总览\",\"t\":[\"排序算法\",\"平均时间复杂度\",\"最好\",\"最坏\",\"空间复杂度\",\"稳定性\",\"冒泡排序\",\"O(n^2)\",\"O(n)\",\"O(n^2)\",\"O(1)\",\"稳定\",\"选择排序\",\"O(n^2)\",\"O(n^2)\",\"O(n^2)\",\"O(1)\",\"不稳定\",\"插入排序\",\"O(n^2)\",\"O(n)\",\"O(n^2)\",\"O(1)\",\"稳定\",\"希尔排序\",\"O(nlog²n)\",\"O(nlog²n)\",\"O(nlog²n)\",\"O(1)\",\"不稳定\",\"归并排序\",\"O(nlogn)\",\"O(nlogn)\",\"O(nlogn)\",\"O(n)\",\"稳定\",\"快速排序\",\"O(nlogn)\",\"O(nlogn)\",\"O(n^2)\",\"O(logn)\",\"不稳定\",\"堆排序\",\"O(nlogn)\",\"O(nlogn)\",\"O(nlogn)\",\"O(1)\",\"不稳定\",\"计数排序\",\"O(n+m)\",\"O(n+m)\",\"O(n+m)\",\"O(m)\",\"稳定\",\"桶排序\",\"O(n)\",\"O(n)\",\"O(n^2)\",\"O(n)\",\"稳定\",\"基数排序\",\"O(n·k)\",\"O(n·k)\",\"O(n·k)\",\"O(n+k)\",\"稳定\"]},\"55\":{\"h\":\"冒泡排序\",\"t\":[\"#include <bits/stdc++.h> using namespace std; int main(){ ios::sync_with_stdio(false); cin.tie(0),cout.tie(0); int n; cin >> n; vector<int> arr(n); for (auto &it : arr) cin >> it; for (int i = n-1; i > 0; --i) { bool sorted = true; for (int j = 0; j < i; ++j) { if (arr[j] > arr[j+1]) { swap(arr[j], arr[j+1]); sorted = false; } } if (sorted) break; } for (auto e : arr) cout << e << ' '; return 0; }\"]},\"56\":{\"h\":\"选择排序\",\"t\":[\"TODO\"]},\"57\":{\"h\":\"插入排序\",\"t\":[\"TODO\"]},\"58\":{\"h\":\"希尔排序\",\"t\":[\"TODO\"]},\"59\":{\"h\":\"归并排序\",\"t\":[\"#include <bits/stdc++.h> typedef long long ll; using namespace std; constexpr int N = 1e5 + 5; int a[N], b[N]; void merge(int l, int mid, int r){ if (l==r) return; if (l+1 == r){ if (a[l] > a[r]){ swap(a[l], a[r]); } return; } merge(l, (l+mid)>>1, mid); merge(mid+1, (mid+1+r)>>1, r); int i = l, j = mid+1; for (int k = l; k <= r; ++k) { if (j>r || i<=mid && a[i]<=a[j]) b[k]=a[i++]; else b[k]=a[j++]; } memcpy(a+l, b+l, (r-l+1)* sizeof(int)); // for(int k=l;k<=r;k++) a[k]=b[k]; } int main(){ ios::sync_with_stdio(false); cin.tie(0),cout.tie(0); int n; cin >> n; for (int i = 1; i <= n; ++i) cin >> a[i]; merge(1, (1+n)>>1, n); for (int i = 1; i <= n; ++i) cout << a[i] << ' '; return 0; }\"]},\"60\":{\"h\":\"快速排序\",\"t\":[\"TODO\"]},\"61\":{\"h\":\"堆排序\",\"t\":[\"TODO\"]},\"62\":{\"h\":\"计数排序\",\"t\":[\"TODO\"]},\"63\":{\"h\":\"桶排序\",\"t\":[\"TODO\"]},\"64\":{\"h\":\"基数排序\",\"t\":[\"TODO\"]},\"65\":{\"h\":\"C语言中的union\"},\"66\":{\"h\":\"共用内存\",\"t\":[\"union中的字段是共用内存的，比如可以用下面的代码判断机器是小端序还是大端序：\",\"#include <stdio.h> union U { char c; int i; }u; int main() { u.i = 1; if(u.c == 1) { printf(\\\"little-endian\\\"); } else { printf(\\\"big-endian\\\"); } }\"]},\"67\":{\"h\":\"size计算\",\"t\":[\"union的大小计算遵循以下的规则：\",\"联合的大小至少是最大成员的大小\",\"当最大成员大小不是最大对齐数的整数倍的时候，则对齐到最大对齐数的整数倍\",\"#include<stdio.h> union Un1 { char c[5]; // 1*5B int i; // 4*1B }; union Un2 { short c[7]; // 2*7B int i; // 4*1B }; int main() { printf(\\\"%d\\\\n\\\", sizeof(union Un1)); // 8 printf(\\\"%d\\\\n\\\", sizeof(union Un2)); // 16 }\"]},\"68\":{\"h\":\"C++中原生编译时字符串混淆实现\",\"t\":[\"C++中具有强大的模板元编程，可以不依赖任何外部库，仅使用C++ std实现编译时的字符串混淆。\"]},\"69\":{\"h\":\"原始版本\",\"t\":[\"在我的另一篇文章中提到过一个C++中字符串混淆的简易版本：\",\"但其中0x55是硬编码的，我们需要引入编译时随机数来消除这一硬编码。\",\"一个可行的编译期间随机数实例：\",\"#include <iostream> namespace { constexpr char time[] = __TIME__; constexpr int DigitToInt(char c) { return c - '0'; } const int seed = DigitToInt(time[7]) + DigitToInt(time[6]) * 10 + DigitToInt(time[4]) * 60 + DigitToInt(time[3]) * 600 + DigitToInt(time[1]) * 3600 + DigitToInt(time[0]) * 36000; } // 根据 N，生成随机数 value template<int N> struct MetaRandomGenerator { private: static constexpr unsigned a = 16807; // 7^5 static constexpr unsigned m = 2147483647; // 2^31 - 1 static constexpr unsigned s = MetaRandomGenerator<N - 1>::value; static constexpr unsigned lo = a * (s & 0xFFFF); // 低 16 位乘以 16807 static constexpr unsigned hi = a * (s >> 16); // 高 16 位乘以 16807 static constexpr unsigned result = lo + hi + ((hi & 0x7FFF) << 16); public: static constexpr unsigned max = m; static constexpr unsigned value = result > m ? result - m : result; }; template<> struct MetaRandomGenerator<0> { static constexpr unsigned value = seed; }; template<int N, int M> struct MetaRandom { static const int value = MetaRandomGenerator<N + 1>::value % M; }; int main() { int x = MetaRandom<__COUNTER__, 20>::value; int y = MetaRandom<__COUNTER__, 114514>::value; return 0; }\",\"但由于MetaRandom定义的模板template<int N, int M>中的N基于递归实现，在N较大时会生成大量递归嵌套。在gcc.godbolt.org上实测，若不额外指定参数，N无法超过225（使用编译参数-std=c++20 -O0）。\"]},\"70\":{\"h\":\"使用Hash替代递归\",\"t\":[\"#include <iostream> #include <cstdint> using namespace std; namespace { constexpr __attribute((always_inline)) uint32_t hash(uint32_t in) { constexpr uint32_t r[]{ 0xdf15236c, 0x16d16793, 0x3a697614, 0xe0fe08e4, 0xa3a53275, 0xccc10ff9, 0xb92fae55, 0xecf491de, 0x36e86773, 0x0ed24a6a, 0xd7153d80, 0x84adf386, 0x17110e76, 0x6d411a6a, 0xcbd41fed, 0x4b1d6b30}; uint32_t out{in ^ r[in & 0xF]}; out ^= std::rotl(in, 020) ^ r[(in >> 010) & 0xF]; out ^= std::rotl(in, 010) ^ r[(in >> 020) & 0xF]; out ^= std::rotr(in, 010) ^ r[(in >> 030) & 0xF]; return out; } template <size_t N> constexpr __attribute((always_inline)) uint32_t hash(char const (&str)[N]) { uint32_t h{}; for (uint32_t i{}; i < N; ++i) h ^= uint32_t(str[i]) << (i % 4 * 8); return hash(h); } template <size_t N> constexpr __attribute((always_inline)) uint32_t constexpr_rand_impl(char const (&file)[N], uint32_t line, uint32_t column = 0x8dc97987) { return hash(hash(__TIME__) ^ hash(file) ^ hash(line) ^ hash(column)); } } #define RANDOM(seed_) (constexpr_rand_impl(__FILE__, seed_)) template <int K, size_t... I> struct MetaString { constexpr __attribute((always_inline)) MetaString(const char *str) :seed_(static_cast<char>(constexpr_rand_impl(__FILE__, K))), buffer_{encrypt(str[I])...} {} const char *decrypt() { // ((cout << \\\"I=\\\" << I << \\\"\\\\n\\\"), ...); for (size_t i = 0; i < sizeof...(I); ++i) buffer_[i] = decrypt(buffer_[i]); buffer_[sizeof...(I)] = 0; return const_cast<const char*>(buffer_); } private: constexpr char encrypt(char c) const { return c ^ seed_; } constexpr char decrypt(char c) const { return encrypt(c); } private: char seed_; volatile char buffer_[sizeof...(I) + 1]; // 避免编译器过度优化 }; template <int K, std::size_t... I> constexpr __attribute((always_inline)) auto index_seq_helper(const char *str, std::index_sequence<I...>) { return MetaString<K, I...>(str).decrypt(); } // constexpr __attribute((always_inline)) const char* operator \\\"\\\"_obf(const char *str, size_t) // { // constexpr auto seq = make_index_sequence<sizeof(str)-1>{}; // return index_seq_helper(str, seq); // } // 注意，sizeof(\\\"123\\\") == 4，但是auto str \\\"123\\\"; sizeof(str) == 8 (返回了const char*长度) // 因此在这里只能使用宏，不能使用自定义后缀 #define STR_OBF(str) (index_seq_helper<__COUNTER__>(str, make_index_sequence<sizeof(str) - 1>{})) int main() { cout << STR_OBF(\\\"Hello, world\\\") << '\\\\n'; return 0; }\",\"注意：以上算法的随机数的分布并不均匀，特别是在取 ai​=i<<n 的情况下，尽管在这一应用场景下我们并不关心这些问题。\"]},\"71\":{\"h\":\"随机选择多种加密算法\",\"t\":[\"上述代码可以对每个字符串生成不同的xor种子，但加密方式都是异或一个随机值。我们可以利用模板偏特化来实现随机选择加密算法：\"]},\"72\":{\"h\":\"Ref\",\"t\":[\"https://sunocean.life/blog/blog/2022/01/28/C++-metastr\",\"https://gist.github.com/KoneLinx/d3601597248bed423daf1a7cf7bd9533\"]},\"73\":{\"h\":\"C++高级特性实例\"},\"74\":{\"h\":\"constexpr初探——阶乘\",\"t\":[\"#include <iostream> using namespace std; constexpr int fac(int n) { return n <= 1 ? 1 : (n * fac(n-1)); } int main() { constexpr auto x = fac(5); }\",\"注意这里的x是在编译期间求值的，生成的汇编代码大致如下：\",\"main: push rbp mov rbp, rsp mov DWORD PTR [rbp-4], 120 mov eax, 0 pop rbp ret\"]},\"75\":{\"h\":\"模板元编程——斐波那契数列\",\"t\":[\"模板元编程是一种广泛应用于C++库开发的编程范式。在巧妙的模板的帮助下，程序员可以在编译时执行算法。C++模板元程序被证明是图灵完备的，因此可以在编译时间内执行大规模的算法。\",\"#include <iostream> using namespace std; template <int N> struct Fibonacci { static constexpr int value = Fibonacci<N - 1>::value + Fibonacci<N - 2>::value; }; template <> struct Fibonacci<1> { static constexpr int value = 1; }; template <> struct Fibonacci<0> { static constexpr int value = 0; }; int main() { constexpr auto x = Fibonacci<20>::value; }\"]},\"76\":{\"h\":\"自定义后缀\",\"t\":[\"#include <iostream> using namespace std; long double operator \\\"\\\"_km(long double); int main() { auto dis = 1.2_km; }\"]},\"77\":{\"h\":\"简易的C++编译时字符串混淆\",\"t\":[\"#include <iostream> using namespace std; template <size_t... I> struct MetaString1 { constexpr __attribute((always_inline)) MetaString1(const char *str) : buffer_{encrypt(str[I])...}{} const char *decrypt() { for (size_t i = 0; i < sizeof...(I); ++i) buffer_[i] = decrypt(buffer_[i]); buffer_[sizeof...(I)] = 0; return const_cast<const char*>(buffer_); } private: constexpr char encrypt(char c) const { return c ^ 0x55; } constexpr char decrypt(char c) const { return encrypt(c); } private: volatile char buffer_[sizeof...(I) + 1]; // 避免编译器过度优化 }; template <std::size_t... I> constexpr __attribute((always_inline)) auto index_seq_helper(const char *str, std::index_sequence<I...>) { return MetaString1<I...>(str).decrypt(); } // 注意，sizeof(\\\"123\\\") == 4，但是auto str \\\"123\\\"; sizeof(str) == 8 (返回了const char*长度) // 因此在这里只能使用宏，不能使用自定义后缀 #define OBFUSCATED1(str) (index_seq_helper(str, make_index_sequence<sizeof(str) - 1>{})) int main() { cout << OBFUSCATED1(\\\"Hello, world\\\") << '\\\\n'; return 0; }\",\"使用-O1编译参数即可在编译结果中消除字符串常量\\\"Hello, world\\\"。\",\"此外，这里采用了固定的xor加密算法c ^ 0x55，可以使用随机xor值、随机使用多种加密算法等方式进一步提升加密强度。\"]},\"78\":{\"h\":\"Ref\",\"t\":[\"https://github.com/andrivet/ADVobfuscator\",\"https://www.researchgate.net/publication/259005783_Random_number_generator_for_C_template_metaprograms\",\"https://www.zhihu.com/question/378525362/answer/1072878269\",\"https://gist.github.com/KoneLinx/d3601597248bed423daf1a7cf7bd9533\"]},\"79\":{\"h\":\"MySQL 分表分库中的 Sharding 策略详解\",\"t\":[\"在@pdai的这篇文章中提到，MySQL中Sharding策略主要分为三种：哈希取模、范围分片和映射表。 但作者没有细讲各自的优缺点以及应用场景，在此总结了一下：\",\"deepseek的思考过程：\",\"嗯，我需要详细介绍一下MySQL分表分库中的Sharding策略，特别是哈希取模、范围分片和映射表这三种方法。首先，我得确保自己理解这些策略的基本概念，然后考虑如何向别人解释清楚。让我先回忆一下相关知识，再逐步整理思路。\",\"首先，分表分库的目的是为了应对数据量过大，单库单表性能瓶颈的问题。Sharding策略就是如何将数据分布到不同的数据库或表中的方法。常见的策略有哈希取模、范围分片和映射表三种。我需要分别解释这三种策略，包括它们的原理、应用场景、优缺点以及可能的示例。\",\"对于哈希取模，记得这是通过某个键（比如用户ID）的哈希值对数据库数量取模来决定数据存储的位置。比如，假设有4个数据库，计算hash(key) % 4，结果0到3分别对应不同的库。这样做的好处是数据分布均匀，避免热点问题。但缺点是可扩展性差，增加或减少库数量时需要重新分配数据，迁移成本高。应用场景可能适合需要均匀分布且不常变动的分库情况。\",\"然后是范围分片，这可以基于ID范围或者时间范围。比如，用户ID在1-1000万的放在第一个库，1000万到2000万在第二个库，或者按月份分片。优点在于易于管理，查询范围数据时效率高，因为同一范围的数据在同一库或表中。缺点是可能存在数据分布不均，比如某些时间段数据量大，导致负载不均衡。适用于有明显范围查询需求的场景，比如按时间查询日志。\",\"接下来是映射表，也就是使用一个单独的数据库来存储映射关系。例如，每个用户ID对应的存储位置记录在一个表中，查询时先查映射表找到位置，再访问对应的库。这种方法的优点是灵活，可以根据需要调整映射关系，扩展性好。但缺点是多了一次查询，可能影响性能，而且映射表本身可能成为单点故障或瓶颈。适合需要灵活分片，或者分片键不固定的情况。\",\"在解释这三种策略时，应该分别给出它们的原理、步骤、优缺点、适用场景，以及可能的例子。同时需要注意比较它们之间的不同，帮助读者理解在什么情况下选择哪种策略。\",\"可能需要注意的细节：哈希取模的哈希函数选择，如何处理节点增减时的数据迁移；范围分片如何定义范围边界，避免热点；映射表如何设计高效查询，避免成为性能瓶颈等。\",\"现在需要把这些点组织成结构化的内容，确保逻辑清晰，语言通俗易懂。可能需要分段，每部分一个小标题，用列表或段落详细说明。同时，可能需要用示例来辅助说明，比如哈希取模的计算过程，范围分片的划分例子，映射表的结构等。\",\"最后，总结部分要比较这三种策略的适用场景，帮助用户根据实际需求选择合适的方案。可能还需要提到其他策略，但根据问题要求，重点在哈希、范围和映射表这三种。\",\"在分库分表架构中，Sharding 策略决定了数据如何分布到不同的数据库或表中。常见的策略包括哈希取模、范围分片和映射表，每种策略适用于不同场景，各有优缺点。\"]},\"80\":{\"h\":\"1.\",\"t\":[\"原理： 对分片键（如用户ID）计算哈希值，再对数据库/表的数量取模，确定数据存储位置。公式：分片位置 = hash(key) % NUM_DB示例：\",\"若分片键为 user_id，且 NUM_DB=4，则： \",\"hash(1001) % 4 = 2 → 数据存入第 2 个库。\",\"hash(1002) % 4 = 0 → 数据存入第 0 个库。\",\"优点：\",\"数据分布均匀，避免热点问题。\",\"查询单条数据时效率高（直接定位库/表）。\",\"缺点：\",\"扩展性差：增减节点时（如从 4 库扩容到 5 库），需重新计算所有数据位置，迁移成本高。\",\"范围查询效率低：跨多个库的查询需合并结果。\",\"适用场景：\",\"数据分布均匀且无频繁范围查询的场景（如用户表）。\"]},\"81\":{\"h\":\"2.\",\"t\":[\"原理： 按分片键的范围（如ID区间或时间范围）划分数据。示例：\",\"ID范围： \",\"库1存储 1 ≤ user_id < 1000万\",\"库2存储 1000万 ≤ user_id < 2000万\",\"时间范围： \",\"按月分片：2023-01 数据存入表1，2023-02 存入表2。\",\"优点：\",\"易于管理：数据按自然边界划分，维护简单。\",\"高效范围查询：同一范围的数据集中存储（如查询某月订单）。\",\"缺点：\",\"数据分布不均：可能导致热点（如某时间段数据激增）。\",\"冷热数据分离：旧数据访问频率低，但依然占用资源。\",\"适用场景：\",\"有明显范围特征且需高效范围查询的场景（如日志表、历史订单）。\"]},\"82\":{\"h\":\"3.\",\"t\":[\"原理： 使用独立的数据库存储分片键与存储位置的映射关系，查询时先查映射表定位数据位置。示例：\",\"映射表结构： \",\"user_id\",\"db_id\",\"table_id\",\"1001\",\"db2\",\"table3\",\"1002\",\"db0\",\"table1\",\"优点：\",\"灵活性强：可动态调整分片规则，扩展无需迁移数据。\",\"支持复杂分片：如按业务类型、地理位置等非数值键分片。\",\"缺点：\",\"性能瓶颈：每次查询需先访问映射表，增加一次查询开销，映射表容易成为性能瓶颈。\",\"单点故障风险：映射表若宕机，整个系统不可用。\",\"优化方案：\",\"缓存映射关系（如Redis）减少数据库查询。\",\"对映射表做高可用设计（如主从复制）。\",\"适用场景：\",\"分片规则复杂或需要动态调整的场景（如多租户系统）。\"]},\"83\":{\"h\":\"\",\"t\":[\"策略\",\"均匀分布\",\"扩展性\",\"范围查询\",\"适用场景\",\"哈希取模\",\"✅\",\"❌\",\"❌\",\"高并发单点查询（用户表）\",\"范围分片\",\"❌\",\"✅\",\"✅\",\"按时间或ID区间查询（日志）\",\"映射表\",\"✅\",\"✅\",\"❌\",\"动态分片（多租户系统）\",\"实际应用：\",\"混合策略：如先按时间分库，再按哈希分表，兼顾范围查询与负载均衡。\",\"工具支持：借助ShardingSphere、Vitess等中间件自动化分片逻辑。\",\"通过合理选择Sharding策略，可显著提升系统的扩展性和查询效率，但需权衡数据分布、查询模式及运维成本。\"]},\"84\":{\"h\":\"Ref\",\"t\":[\"https://pdai.tech/md/db/sql-mysql/sql-mysql-devide.html\"]},\"85\":{\"h\":\"HDOJ-1010 Tempter of the Bone\",\"t\":[\"题目传送门：http://acm.hdu.edu.cn/showproblem.php?pid=1010\"]},\"86\":{\"h\":\"题目大意\",\"t\":[\"小狗要逃离一个N×M的长方形迷宫，迷宫出口的门仅在第 T 秒时开一瞬间（不到1秒）。因此，小狗必须恰好在第 T 秒到达门口才能逃离。 每一秒，它可以向上下左右任意移动一格，且所有格子至多走一次。\"]},\"87\":{\"h\":\"Input\",\"t\":[\"输入由多个测试用例组成。 每个测试用例的第一行包含三个整数N、M和T(1<N,M<7,0<T<50)，分别表示迷宫的大小和门打开的时间。接下来的 N 行给出了迷宫布局，每行包含 M 个字符。字符是以下之一：\",\"X：无法通过的一堵墙\",\"S：起点\",\"D：出口的门\",\".：可走的方块\",\"输入以三个 0 结束，该测试用例不被处理。\"]},\"88\":{\"h\":\"Output\",\"t\":[\"对于每组样例，输出YES或NO表示小狗能否逃生。\"]},\"89\":{\"h\":\"Sample Input\",\"t\":[\"4 4 5 S.X. ..X. ..XD .... 3 4 5 S.X. ..X. ...D 0 0 0\"]},\"90\":{\"h\":\"Sample Output\",\"t\":[\"NO YES\"]},\"91\":{\"h\":\"Solution\",\"t\":[\"一道很明显的dfs题，因为题目存在恰好走 T 步的限制，因此定义状态为(x,y,step)即可。进入下一层递归前，标记上一个位置不可访问，并在回溯时恢复，也是比较基本的dfs搜索思想。\",\"一开始交了一发，虽然AC了，但耗时468ms，对这个耗时不是很满意，于是想了想可行的剪枝方式。\",\"因为所有方格至多走一次，因此如果 T>=N∗M−wall ( wall 是墙的数量)，直接输出 NO\",\"奇偶性剪枝：如果起点到终点的曼哈顿距离与 T 的奇偶性不一致，直接输出 NO （因为绕路不改变奇偶性，就算能重复走之前的路也不改变奇偶性）\",\"如果时间太短(t<abs(sx-ex)+abs(sy-ey)-2)，直接输出 NO\",\"有了前两个剪枝之后，可以优化到109ms。第三个剪枝效果不大，推测应该是这样的样例比较少。\",\"#include <bits/stdc++.h> using namespace std; const int N = 8; int n,m,t,sx,sy,ex,ey; char mp[N][N]; bool tag; int nxt[4][2]={1,0,0,1,-1,0,0,-1}; void dfs(int x,int y,int step){ if(tag || step>t) return; if(x==ex&&y==ey&&step==t){ tag= true; return; } for(int i=0;i<4;i++){ int nx=x+nxt[i][0]; int ny=y+nxt[i][1]; if(nx>=1&&nx<=n&&ny>=1&&ny<=m && mp[nx][ny]!='X'){ mp[nx][ny]='X'; dfs(nx,ny,step+1); mp[nx][ny]='.'; } } } int main(){ ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); while (cin>>n>>m>>t,n||m||t){ int wall=0; for(int i=1;i<=n;i++){ for(int j=1;j<=m;j++){ cin>>mp[i][j]; if(mp[i][j]=='X') ++wall; else if(mp[i][j]=='S') sx=i,sy=j; else if(mp[i][j]=='D') ex=i,ey=j; } } if(n*m-wall<=t){ cout<<\\\"NO\\\\n\\\"; continue; } if((abs(sx+sy-ex-ey)&1)!=(t&1)){ cout<<\\\"NO\\\\n\\\"; continue; } if (t<abs(sx-ex)+abs(sy-ey)-2) { cout<<\\\"NO\\\\n\\\"; continue; } tag=false; mp[sx][sy]='X'; dfs(sx,sy,0); cout<<(tag?\\\"YES\\\":\\\"NO\\\")<<'\\\\n'; } }\"]},\"92\":{\"h\":\"HDOJ-1028 Ignatius and the Princess III\",\"t\":[\"题目传送门：http://acm.hdu.edu.cn/showproblem.php?pid=1028\"]},\"93\":{\"h\":\"题目大意\",\"t\":[\"数字拆分模板题，对于每一个N，输出拆分方式数量。例如对于4存在五种拆分方式：\",\"4 = 4; 4 = 3 + 1; 4 = 2 + 2; 4 = 2 + 1 + 1; 4 = 1 + 1 + 1 + 1;\"]},\"94\":{\"h\":\"Input\",\"t\":[\"输入由多个测试用例组成。 每行包含一个整数N，满足 (1≤N≤120)。\"]},\"95\":{\"h\":\"Sample Input\",\"t\":[\"4 10 20\"]},\"96\":{\"h\":\"Sample Output\",\"t\":[\"5 42 627\"]},\"97\":{\"h\":\"Solution\",\"t\":[\"构造母函数：G(x)=(1+x+x2+...)(1+x2+x4+...)(1+x3+x6+...)...\",\"然后让计算机每次相乘前两项，在c2数组中计算，再存储到c1数组，i表示当前正在计算第1个多项式和第i个多项式相乘。\",\"#include <bits/stdc++.h> using namespace std; int c1[125],c2[125]; int main(){ ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); for(int i=0;i<=120;i++){ c1[i]=1; } for(int i=2;i<=120;i++){ for(int j=0;j<=120;j++){ for(int k=0;k+j<=120;k+=i){ c2[k+j]+=c1[j]; } } for(int j=0;j<=120;j++){ c1[j]=c2[j]; c2[j]=0; } } int n; while (cin>>n) cout<<c1[n]<<'\\\\n'; }\"]},\"98\":{\"h\":\"HDOJ-1213 How Many Tables\",\"t\":[\"题目传送门：http://acm.hdu.edu.cn/showproblem.php?pid=1213\"]},\"99\":{\"h\":\"题目大意\",\"t\":[\"N个朋友参加生日派对，相互认识的坐一桌，问最少需要几张桌子。其中认识关系满足传递性。\"]},\"100\":{\"h\":\"Solution\",\"t\":[\"经典的并查集问题，直接上代码：\",\"#include <bits/stdc++.h> using namespace std; typedef long long ll; const int N = 1005; int fa[N]; int find(int x){ if(fa[x]!=x) fa[x]=find(fa[x]); return fa[x]; } int main(){ ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int tt,n,m,x,y; cin>>tt; while (tt--){ cin>>n>>m; for(int i=1;i<=n;i++) fa[i]=i; for(int i=1;i<=m;i++){ cin>>x>>y; fa[find(x)]=find(y); } int cnt=0; for(int i=1;i<=n;i++){ if(fa[i]==i) cnt++; } cout<<cnt<<'\\\\n'; } }\"]},\"101\":{\"h\":\"Java中的日志库\"},\"102\":{\"h\":\"主要日志系统\"},\"103\":{\"h\":\"JUL\",\"t\":[\"Java标准库java.util.logging，但不常用。\"]},\"104\":{\"h\":\"Log4j\",\"t\":[\"Log4j 的短板在于性能，在Logback 和 Log4j2 出来之后，Log4j的使用也减少了。\"]},\"105\":{\"h\":\"Logback\",\"t\":[\"同样由Log4j的作者开发，提供了性能更好的实现，异步 logger，Filter等更多的特性。\"]},\"106\":{\"h\":\"Log4j2\",\"t\":[\"由Log4j维护者开发，诞生晚于logback，因此吸收了slf4j和logback的一些优点（比如日志模板），性能也比较好。在设计上分离Facade和Implementation，即log4j-api和 log4j-core。\",\"log4j2实现了“无垃圾”和“低垃圾”模式。简单地说，log4j2在记录日志时，能够重用对象（如String等），尽可能避免实例化新的临时对象，减少因日志记录产生的垃圾对象，减少垃圾回收带来的性能下降\"]},\"107\":{\"h\":\"日志Facade（抽象框架）\"},\"108\":{\"h\":\"common-logging\",\"t\":[\"common-logging 是 apache 的一个开源项目。也称Jakarta Commons Logging，缩写 JCL，支持多种具体日志实现（如 Log4j、JUL）。 但它在编译时会进行静态绑定，将代码和日志实现绑定在一起。如果需要切换日志框架，就必须重新引入特定的 JAR 包，这样的机制显得麻烦且不够灵活。\"]},\"109\":{\"h\":\"slf4j\",\"t\":[\"全称为 Simple Logging Facade for Java，采用运行时动态绑定，开发者只需依赖 SLF4J 接口，具体的日志实现可以通过运行时选择（如 Logback、Log4j 等），无需修改代码或重新编译，极大提高了灵活性。\",\"同样由Log4j、logback的作者Ceki Gulcu开发。\",\"在 Common-Logging 或其他传统日志框架中，为了避免无意义的字符串拼接开销，通常需要手动检查日志级别是否启用，例如：\",\"if (logger.isDebugEnabled()) { logger.debug(\\\"id: \\\" + id + \\\", name: \\\" + name); }\",\"而slf4j提供了更便捷的方式：\",\"logger.debug(\\\"id: {}, name: {}\\\", id, name);\",\"无需手动检查日志级别，SLF4J 会在底层自动优化，避免不必要的字符串拼接。且代码更简洁，提升开发效率。\"]},\"110\":{\"h\":\"注意事项\",\"t\":[\"以下写法中存在问题，即使日志级别高于debug，不需输出日志，也会执行字符串拼接、调用toJson方法：\",\"// 即使不输出，也会执行字符串拼接 logger.debug(\\\"start process request, url: \\\" + url); // 即使不输出，也会调用toJson方法 logger.debug(\\\"receive request: {}\\\", toJson(request));\",\"正确写法：\",\"// 没有多余计算开销 logger.debug(\\\"start process request, url: {}\\\", url); // slf4j/log4j2 // 采用懒求值 logger.debug(\\\"receive request: {}\\\", () -> toJson(request)); // log4j2 logger.debug(() -> \\\"receive request: \\\" + toJson(request)); // log4j2 // 回归原始，做额外判断 if (logger.isDebugEnabled()) { // slf4j/log4j2 logger.debug(\\\"receive request: \\\" + toJson(request)); }\",\"此外，不应在程序中滥用获取当前caller、行号、函数名等等属性，因为基本上这些实现都基于堆栈信息stacktrace，而获取堆栈信息的代价是昂贵的。\"]},\"111\":{\"h\":\"Rust 学习笔记\",\"t\":[\"Rust具有一些让人眼前一亮的特点：无GC也不需手动管理内存、高性能、安全性强等等。但其诸多优点背后的代价，就是学习曲线相当陡峭。\",\"Rust的困难，不在于语言特性，而在于：\",\"具体实践中如何运用学到的技巧\",\"遇到了坑时（生命周期、借用错误，自引用等）如何迅速、正确的解决\",\"大量的标准库API的熟练使用，这是保证开发效率的关键\"]},\"112\":{\"h\":\"使用原生指针和unsafe实现自引用\",\"t\":[\"algo.course.rs上的实现，在此记录一下\",\"pub struct Tree { count: usize, root: *mut Node, } #[derive(Debug)] struct Node { data: i32, // Null指针这里代表\\\"None`; right.is_null() ==> 没有right child left: *mut Node, right: *mut Node, parent: *mut Node, } impl Tree { pub fn new() -> Self { Self { count: 0, root: std::ptr::null_mut(), } } // 返回tree的节点数量 pub fn node_count(&self) -> usize { assert!(self.count != 0 || self.root.is_null()); self.count } // 在tree中新增一项，插入成功则返回true,若给定的数据在tree上已经存在，则返回false pub fn insert(&mut self, data: i32) -> bool { if self.root.is_null() { self.root = Node::new(data); } else { if !insert_node(self.root, data) { return false; } } self.count += 1; true } // 找到tree上的指定项，若找到，返回true pub fn find(&self, data: i32) -> bool { !find_node(self.root, data).is_null() } // 返回tree的字符串形式，用于Debug pub fn display(&self) -> String { display_node(self.root, 0) } // 使用中序遍历来返回tree中的所有数据 pub fn inorder(&self) -> Vec<i32> { let mut v = vec![]; if !self.root.is_null() { let mut node = leftmost_child(self.root); loop { if node.is_null() { break; } unsafe { v.push((*node).data); } node = successor_of_node(node); } } v } // 从tree上移除指定项, 若该项存在且被成功移除，则返回true，否则都返回false pub fn remove(&mut self, data: i32) -> bool { let node = find_node(self.root, data); if node.is_null() { false } else { self.remove_node(node); self.count -= 1; true } } // 在tree上找到指定项的继任者 pub fn successor(&self, data: i32) -> Option<i32> { unsafe { let node = find_node(self.root, data); if !node.is_null() { let nodesucc = successor_of_node(node); if !nodesucc.is_null() { return Some((*nodesucc).data); } } None } } // 从tree上移除指定的节点 fn remove_node(&mut self, node: *mut Node) { unsafe { let lchild = (*node).left; let rchild = (*node).right; if lchild.is_null() && rchild.is_null() { // 节点没有子节点，所以可以安全移除 self.replace_node(node, std::ptr::null_mut()); } else if !lchild.is_null() && !rchild.is_null() { // 节点的左右子节点都在，我们需要找到该节点的继任者，然后将继任者的数据赋给当前节点，然后再递归删除继任者 let succ = successor_of_node(node); assert!(!succ.is_null()); (*node).data = (*succ).data; self.remove_node(succ); } else if !lchild.is_null() { // 节点只有左子节点，所以使用后者替代前者 self.replace_node(node, lchild); } else if !rchild.is_null() { // 节点只有右子节点，所以使用后者替代前者 self.replace_node(node, rchild); } else { panic!(\\\"unreachable\\\"); } } } // 使用`r`节点来替换目标`node`节点 fn replace_node(&mut self, node: *mut Node, r: *mut Node) { unsafe { let parent = (*node).parent; if parent.is_null() { // Removing the root node. self.root = r; if !r.is_null() { (*r).parent = std::ptr::null_mut(); } } else { if !r.is_null() { (*r).parent = parent; } if (*parent).left == node { (*parent).left = r; } else if (*parent).right == node { (*parent).right = r; } } // 被替换的节点不再被使用，因此可以回收它：通过`Box`拿走它的所有权，然后它会被自动drop Box::from_raw(node); } } } impl Drop for Tree { fn drop(&mut self) { // 也许不是性能最高的实现，但是简单，而且有用 while !self.root.is_null() { self.remove_node(self.root); } } } impl Node { fn new(data: i32) -> *mut Self { Box::into_raw(Box::new(Self { data, left: std::ptr::null_mut(), right: std::ptr::null_mut(), parent: std::ptr::null_mut(), })) } fn new_with_parent(data: i32, parent: *mut Node) -> *mut Self { Box::into_raw(Box::new(Self { data, left: std::ptr::null_mut(), right: std::ptr::null_mut(), parent, })) } } // 在节点子树上创建新的节点 fn insert_node(node: *mut Node, data: i32) -> bool { unsafe { if (*node).data == data { false } else if data < (*node).data { if (*node).left.is_null() { (*node).left = Node::new_with_parent(data, node); true } else { insert_node((*node).left, data) } } else { if (*node).right.is_null() { (*node).right = Node::new_with_parent(data, node); true } else { insert_node((*node).right, data) } } } } // 在`fromnode`的子树上寻找目标数据，如果没找到则返回`null` fn find_node(fromnode: *mut Node, data: i32) -> *mut Node { unsafe { if fromnode.is_null() || (*fromnode).data == data { fromnode } else if data < (*fromnode).data { find_node((*fromnode).left, data) } else { find_node((*fromnode).right, data) } } } // 返回`node`子树的字符串形式，同时指定缩进字符数 fn display_node(node: *const Node, indent: usize) -> String { let indent_str = \\\" \\\".repeat(indent); if node.is_null() { indent_str + \\\".\\\\n\\\" } else { unsafe { let mut s = format!(\\\"{}{}\\\\n\\\", indent_str, (*node).data); s.push_str(&display_node((*node).left, indent + 2)); s.push_str(&display_node((*node).right, indent + 2)); s } } } // 找到`node`最左边的子节点，如果没有，就返回`node`自身, `node`不能为null fn leftmost_child(node: *mut Node) -> *mut Node { unsafe { if (*node).left.is_null() { node } else { leftmost_child((*node).left) } } } // 在tree上找到`node`的继任者 fn successor_of_node(node: *mut Node) -> *mut Node { unsafe { if !(*node).right.is_null() { // 若node有一个右子节点，则继任者是该右子节点的最左子节点，若该右子节点没有子节点，则继任者就是右子节点 leftmost_child((*node).right) } else { // 没有右子节点，则找到一个父节点，当前node是该父节点的左子节点, 若在root之前都没找到，说明node没有继任者 parent_with_left(node) } } } // 在`node`的祖先中找到它的父节点,且`node`必须是该父节点的左子节点 fn parent_with_left(node: *mut Node) -> *mut Node { unsafe { // 若`node`有父节点，且该父节点拥有左子节点，同时`node`就是这个左子节点，那么该父节点就是我们的目标 let parent = (*node).parent; if !parent.is_null() { if std::ptr::eq((*parent).left, node) { return parent; } return parent_with_left(parent); } // `node`没有父节点 std::ptr::null_mut() } } fn main() { }\"]},\"113\":{\"h\":\"将局部变量生命周期变为'static\"},\"114\":{\"h\":\"Problem\"},\"115\":{\"h\":\"Solution\",\"t\":[\"使用leak、Box::leak等方法：\"]},\"116\":{\"h\":\"错误处理相关\"},\"117\":{\"h\":\"将Option类型转换为Result类型\",\"t\":[\"使用ok_or方法：\",\"fn foo(abs_path: &str) -> Result<String, String> { let path = PathBuf::from(abs_path); let relative = path.file_name() .ok_or(format!(\\\"Failed to get relative_name for `{}`\\\", abs_path))?; let res = relative.to_str().unwrap(); Ok(res.to_owned()) }\"]},\"118\":{\"h\":\"将Result类型转换为Option类型\",\"t\":[\"使用ok方法：\",\"fn divide(dividend: f64, divisor: f64) -> Result<f64, String> { if divisor == 0.0 { Err(String::from(\\\"除数不能为零\\\")) } else { Ok(dividend / divisor) } } #[test] fn test_divide() { let result_ok: Result<f64, String> = divide(10.0, 2.0); let option_some: Option<f64> = result_ok.ok(); assert_eq!(option_some, Some(5.0)); let result_err: Result<f64, String> = divide(10.0, 0.0); let option_none: Option<f64> = result_err.ok(); assert_eq!(option_none, None); }\"]},\"119\":{\"h\":\"Option#transpose()\",\"t\":[\"将Option<Result<T, E>>转换为Result<Option<T>, E>：\",\"#[derive(Debug, Eq, PartialEq)] struct SomeErr; let x: Result<Option<i32>, SomeErr> = Ok(Some(5)); let y: Option<Result<i32, SomeErr>> = Some(Ok(5)); assert_eq!(x, y.transpose());\"]},\"120\":{\"h\":\"全局变量\",\"t\":[\"在Rust中，出于安全性的考量，全局变量的使用并不像C++那样简单。这样很容易理解，如果定义一个不受保护的全局变量，在多个线程同时修改、写的同时有线程读等情况下，很容易出现脏数据。\",\"当然也不是完全禁止全局字段，以下记录几种常用的解决方式：\"]},\"121\":{\"h\":\"启动时初始化，后续只读\",\"t\":[\"使用强大的社区库lazy_static：\",\"[dependencies] lazy_static = \\\"1.5.0\\\"\",\"use lazy_static::lazy_static; use std::collections::HashMap; lazy_static! { static ref HASHMAP: HashMap<u32, &'static str> = { let mut m = HashMap::new(); m.insert(0, \\\"foo\\\"); m.insert(1, \\\"bar\\\"); m.insert(2, \\\"baz\\\"); m }; } fn main() { // First access to `HASHMAP` initializes it println!(\\\"The entry for `0` is \\\\\\\"{}\\\\\\\".\\\", HASHMAP.get(&0).unwrap()); // Any further access to `HASHMAP` just returns the computed value println!(\\\"The entry for `1` is \\\\\\\"{}\\\\\\\".\\\", HASHMAP.get(&1).unwrap()); }\",\"在rust 1.70之后，也可以直接使用标准库中的OnceLock：\",\"use std::collections::HashMap; use std::sync::OnceLock; fn hashmap() -> &'static HashMap<u32, &'static str> { static HASHMAP: OnceLock<HashMap<u32, &str>> = OnceLock::new(); HASHMAP.get_or_init(|| { let mut m = HashMap::new(); m.insert(0, \\\"foo\\\"); m.insert(1, \\\"bar\\\"); m.insert(2, \\\"baz\\\"); m }) } fn main() { // First access to `HASHMAP` initializes it println!(\\\"The entry for `0` is \\\\\\\"{}\\\\\\\".\\\", hashmap().get(&0).unwrap()); // Any further access to `HASHMAP` just returns the computed value println!(\\\"The entry for `1` is \\\\\\\"{}\\\\\\\".\\\", hashmap().get(&1).unwrap()); }\",\"使用unsafe裸指针： https://stackoverflow.com/questions/63433547/more-efficient-alternative-to-thread-local-and-lazy-static\"]},\"122\":{\"h\":\"运行时需要修改\",\"t\":[\"use std::sync::Mutex; use lazy_static::lazy_static; lazy_static! { static ref NAMES: Mutex<String> = Mutex::new(String::from(\\\"Sunface, Jack, Allen\\\")); } fn main() { let mut v = NAMES.lock().unwrap(); v.push_str(\\\", Myth\\\"); println!(\\\"{}\\\",v); }\",\"当然，每次访问时会有轻微的性能损失，为了支持多线程这是不可避免的。\"]},\"123\":{\"h\":\"Ref\",\"t\":[\"https://github.com/rustcn-org/rust-algos/blob/fbcdccf3e8178a9039329562c0de0fd01a3372fb/src/unsafe/self-ref.md\",\"https://crates.io/crates/lazy_static\",\"https://course.rs/advance/global-variable.html\"]},\"124\":{\"h\":\"记录一些Rust中的小技巧\"},\"125\":{\"h\":\"使用指定的Rust版本\",\"t\":[\"对于管理多版本，直接使用Rustup即可。在cmd中输入\",\"rustup show\",\"即可查看已安装的工具链版本，以及现在使用的默认版本。使用\",\"rustup default 1.72.0-x86_64-pc-windows-gnu\",\"即可切换到对应版本。\",\"但如果不想切换默认Rust版本，只想为某一项目使用指定版本，可以在项目所在目录新建rust-toolchain文件，在第一行写上版本限制，例如：\",\"1.76.0\",\"1.76.0-x86_64-pc-windows-gnu\",\"如果需要更详细地指定工具链版本，可以新建一个rust-toolchain.toml文件，例如：\",\"[toolchain] channel = \\\"nightly-2024-11-07\\\" components = [ \\\"rustfmt\\\", \\\"rust-analyzer\\\", \\\"miri\\\", \\\"rust-docs\\\", \\\"clippy\\\", \\\"rust-src\\\"] profile = \\\"default\\\"\",\"以上配置将在此项目中启用nightly特性。\"]},\"126\":{\"h\":\"pub关键字\",\"t\":[\"pub关键字能控制字段、方法的可访问性，且能限定到在特定模块。\",\"/// 在本项目内public pub(crate) fn hello() { } /// 仅在mod `ir`内public pub struct Graph { pub(in crate::ir) globals: GlobalValueMapCell, pub(in crate::ir) func_tys: FuncTypeMapCell, values: HashMap<Value, ValueData>, bbs: HashMap<BasicBlock, BasicBlockData>, }\"]},\"127\":{\"h\":\"Ref\",\"t\":[\"https://github.com/pku-minic/koopa/blob/master/src/ir/dfg.rs#L15\"]},\"128\":{\"h\":\"WSL备忘录\",\"t\":[\"在做计网实验时，之前用的一直都是VMware，最近偶然接触到WSL(Windows Subsystem for Linux)，在此记录基本配置过程。\"]},\"129\":{\"h\":\"基本配置\",\"t\":[\"介绍视频（需要武林绝学，或者b站随便找个都行）\",\"支持的GUI应用：https://learn.microsoft.com/zh-cn/windows/wsl/tutorials/gui-apps\",\"取消自动挂载：https://devblogs.microsoft.com/commandline/automatically-configuring-wsl/\"]},\"130\":{\"h\":\"迁移\",\"t\":[\"wsl默认安装在C盘，建议趁刚安装时迁移到容量充足的其他盘\",\"查看当前安装的所有WSL\",\"wsl --list -v\",\"左边的*表示默认项\",\"先导出WSL到指定路径\",\"wsl --export Ubuntu-20.04 E:\\\\wsl\\\\Ubuntu-20.04.tar\",\"删除你要导出的wsl\",\"wsl --unregister Ubuntu-20.04\",\"从第2步中导出的tar文件导入wsl，这里指定了version为2\",\"格式：wsl --import <WSL名称> <导入后wsl工作路径> <wsl压缩包路径>\",\"wsl --import Ubuntu-20.04 E:\\\\wsl\\\\ubuntu-20.04 E:\\\\wsl\\\\Ubuntu-20.04.tar --version 2\",\"配置先前的默认登录用户\",\"格式：<EXE> config --default-user <用户名>\",\"ubuntu2004.exe config --default-user xanadu13\",\"如果是kali-linux：\",\"kali.exe config --default-user xanadu13\"]},\"131\":{\"h\":\"常用指令\",\"t\":[\"软链接挂载文件夹：\",\"ln -s /mnt/e/wsl/share ~/share\",\"运行指定wsl：\",\"wsl -d kali-linux\"]},\"132\":{\"h\":\"连接wsl桌面\",\"t\":[\"目前已知kali-linux wsl可以通过类似远程桌面的方式连接，具体见我的另一篇文章：\"]},\"133\":{\"h\":\"在VSCode中连接WSL，写入权限问题\",\"t\":[\"使用以下指令修改目录的所有权即可，注意把<username>替换为你的用户名：\",\"sudo chown -R <username> /dir\",\"例如，\",\"sudo chown -R xanadu13 /usr/local/os\"]},\"134\":{\"h\":\"Ref\",\"t\":[\"https://www.jianshu.com/p/2a2d16029dc2\"]},\"135\":{\"h\":\"在WSL中使用Docker\",\"t\":[\"今天尝试在WSL中使用Docker，运行\",\"docker run hello-world\",\"获得报错：\",\"Get https://registry-1.docker.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaitin headers)\",\"尝试了很多解决方案，比如更改docker镜像源、修改/etc/docker/daemon.json、配置/etc/resolv.conf中的nameserver为8.8.8.8、在前面加sudo等等，都没有成功。\",\"最终解决方案：\",\"在/etc/systemd/system/docker.service.d/proxy.conf添加\",\"[Service] Environment=\\\"HTTP_PROXY=http://127.0.0.1:7890/\\\" Environment=\\\"HTTPS_PROXY=http://127.0.0.1:7890/\\\" Environment=\\\"NO_PROXY=localhost,127.0.0.1\\\"\",\"其中127.0.0.1和7890分别为你的武林绝学的代理服务器默认地址、默认端口。\",\"然后重启服务：\",\"sudo systemctl daemon-reload sudo systemctl restart docker\",\"再执行docker run hello-world，顺利成功！\"]},\"136\":{\"h\":\"在WSL中使用kali-linux踩坑记录\"},\"137\":{\"h\":\"安装kali-linux\",\"t\":[\"wsl --install kali-linux\"]},\"138\":{\"h\":\"安装黑科技kex\",\"t\":[\"sudo apt install kali-win-kex\"]},\"139\":{\"h\":\"运行kex\",\"t\":[\"按照视频里说的尝试运行kex --esm --ip -sound会提示找不到命令，如果直接运行kex，输完密码，等待大概十秒钟后，提示开启成功：\",\"但是TigerVNC连接不上：\",\"google了好久，找到一个遇到相同问题的： https://www.reddit.com/r/bashonubuntuonwindows/comments/icu9ks/why_winkex_does_not_working_please_help_me/?rdt=50615\",\"但是下面的回答没有帮助。\",\"再次搜索一番，发现了这个帖子：https://access.redhat.com/solutions/5011721\",\"我们知道，linux里各种设备都是文件，输密码也会有一个密码文件。而在非sudo下试图登录时没有读取密码文件的权限，因此才有“Opening password file failed”。\",\"尝试sudo kex之后，发现可以正常进入kali-linux桌面：\",\"kali-linux桌面\",\"但是这里和默认用户下的桌面、各种文件夹是不互通的，而且笔者也不喜欢在root下运行wsl，因为此时你可以随意删除主机系统文件。\"]},\"140\":{\"h\":\"最终解决方法\",\"t\":[\"在主机上安装TigerVNC：https://sourceforge.net/projects/tigervnc\",\"在kali-linux的bash中执行kex，启动win-kex server，然后直接使用TigerVNC连接wsl即可。\",\"这里的端口号(5901)填win-kex server启动后开放给你的端口。\"]},\"141\":{\"h\":\"kali-linux wsl自启动问题\",\"t\":[\"开始使用wsl后，有一次偶然发现kali-linux会自启动，长期处于Running状态。（运行wsl --list -v查看wsl状态）\",\"一开始google搜索“关闭kali-linux自启动”相关内容，粗略浏览后都不符合我的情况，因为正常情况下未特殊配置wsl的话，kali-linux是不会自启动的。\",\"后面偶然找到了这篇文章：\",\"https://superuser.com/questions/1746617/wsl2-kali-wont-stop-and-it-always-starts-on-boot/1746987#1746987\",\"照着做就能发现，是Armoury Crate一直在后台扫盘，意外扫到wsl文件导致kali-linux自启动。\",\"使用G-Helper替代Armoury Crate后，问题成功解决。（卸载还挺麻烦，得先去官网下专用卸载工具，卸载完后重启并进入BIOS，关闭自动开启Armoury Crate的选项，然后再重启）\",\"卸载之后没想到还有意外收获，之前我的笔记本一般用不了一上午，到上午第五节课基本就没电了，现在续航显示来到了恐怖的8小时：\",\"图中我已经用了3个半小时，估计实际续航在6-7小时左右。\",\"最后，放一张当天的浏览记录，不多作评价了。\"]},\"142\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"143\":{\"h\":\"Posts\"},\"144\":{\"h\":\"Algo\"},\"145\":{\"h\":\"Cpp\"},\"146\":{\"h\":\"Db\"},\"147\":{\"h\":\"Hdoj\"},\"148\":{\"h\":\"Java\"},\"149\":{\"h\":\"Rust\"},\"150\":{\"h\":\"Wsl\"}},\"dirtCount\":0,\"index\":[[\"评价\",{\"1\":{\"141\":1}}],[\"半小时\",{\"1\":{\"141\":1}}],[\"恐怖\",{\"1\":{\"141\":1}}],[\"续航\",{\"1\":{\"141\":2}}],[\"课\",{\"1\":{\"141\":1}}],[\"选项\",{\"1\":{\"141\":1}}],[\"选择\",{\"0\":{\"56\":1,\"71\":1},\"1\":{\"16\":1,\"18\":1,\"27\":4,\"28\":1,\"54\":1,\"71\":1,\"79\":3,\"83\":1,\"109\":1}}],[\"专用\",{\"1\":{\"141\":1}}],[\"官网\",{\"1\":{\"141\":1}}],[\"挺\",{\"1\":{\"141\":1}}],[\"卸载\",{\"1\":{\"141\":4}}],[\"扫到\",{\"1\":{\"141\":1}}],[\"扫盘\",{\"1\":{\"141\":1}}],[\"符合\",{\"1\":{\"141\":1}}],[\"符号\",{\"1\":{\"4\":2,\"5\":1,\"9\":1,\"45\":1}}],[\"符号串\",{\"1\":{\"4\":1,\"12\":1}}],[\"浏览\",{\"1\":{\"141\":2}}],[\"浏览器\",{\"1\":{\"36\":1}}],[\"粗略\",{\"1\":{\"141\":1}}],[\"处于\",{\"1\":{\"141\":1}}],[\"处理\",{\"1\":{\"79\":1,\"87\":1}}],[\"处理器\",{\"1\":{\"27\":2}}],[\"填\",{\"1\":{\"140\":1}}],[\"喜欢\",{\"1\":{\"139\":1}}],[\"互通\",{\"1\":{\"139\":1}}],[\"才有\",{\"1\":{\"139\":1}}],[\"才能\",{\"1\":{\"16\":1,\"86\":1}}],[\"知道\",{\"1\":{\"139\":1}}],[\"知识\",{\"1\":{\"79\":1}}],[\"帖子\",{\"1\":{\"139\":1}}],[\"十秒钟\",{\"1\":{\"139\":1}}],[\"科技\",{\"0\":{\"138\":1}}],[\"黑\",{\"0\":{\"138\":1}}],[\"添加\",{\"1\":{\"135\":1}}],[\"源\",{\"1\":{\"135\":1}}],[\"源地址\",{\"1\":{\"31\":2}}],[\"获得\",{\"1\":{\"135\":1}}],[\"获取\",{\"1\":{\"110\":2}}],[\"今天\",{\"1\":{\"135\":1}}],[\"远程桌面\",{\"1\":{\"132\":1}}],[\"桌面\",{\"0\":{\"132\":1},\"1\":{\"139\":3}}],[\"桌子\",{\"1\":{\"99\":1}}],[\"软\",{\"1\":{\"131\":1}}],[\"软件\",{\"1\":{\"15\":1}}],[\"登录\",{\"1\":{\"130\":1,\"139\":1}}],[\"压缩包\",{\"1\":{\"130\":1}}],[\"工作\",{\"1\":{\"130\":1}}],[\"工具\",{\"1\":{\"83\":1,\"125\":2,\"141\":1}}],[\"格式\",{\"1\":{\"130\":2}}],[\"格子\",{\"1\":{\"86\":1}}],[\"导入\",{\"1\":{\"130\":2}}],[\"导出\",{\"1\":{\"130\":2}}],[\"导致\",{\"1\":{\"79\":1,\"81\":1,\"141\":1}}],[\"充足\",{\"1\":{\"130\":1}}],[\"趁刚\",{\"1\":{\"130\":1}}],[\"建议\",{\"1\":{\"130\":1}}],[\"随意\",{\"1\":{\"139\":1}}],[\"随便\",{\"1\":{\"129\":1}}],[\"随机\",{\"0\":{\"71\":1},\"1\":{\"71\":2,\"77\":2}}],[\"随机数\",{\"1\":{\"69\":3,\"70\":1}}],[\"站\",{\"1\":{\"129\":1}}],[\"绝学\",{\"1\":{\"129\":1,\"135\":1}}],[\"武林\",{\"1\":{\"129\":1,\"135\":1}}],[\"视频\",{\"1\":{\"129\":1,\"139\":1}}],[\"偶然\",{\"1\":{\"128\":1,\"141\":2}}],[\"限定\",{\"1\":{\"126\":1}}],[\"限制\",{\"1\":{\"91\":1,\"125\":1}}],[\"性\",{\"1\":{\"126\":1}}],[\"性能\",{\"1\":{\"79\":3,\"82\":2,\"104\":1,\"105\":1,\"106\":2,\"112\":1,\"122\":1}}],[\"控制\",{\"1\":{\"126\":1}}],[\"控制器\",{\"1\":{\"27\":1}}],[\"链\",{\"1\":{\"125\":2}}],[\"链接\",{\"1\":{\"15\":1,\"131\":1}}],[\"轻微\",{\"1\":{\"122\":1}}],[\"裸\",{\"1\":{\"121\":1}}],[\"社区\",{\"1\":{\"121\":1}}],[\"几种\",{\"1\":{\"120\":1}}],[\"几张\",{\"1\":{\"99\":1}}],[\"脏\",{\"1\":{\"120\":1}}],[\"读取\",{\"1\":{\"139\":1}}],[\"读\",{\"1\":{\"120\":1}}],[\"读者\",{\"1\":{\"79\":1}}],[\"线程\",{\"1\":{\"120\":2}}],[\"线性\",{\"0\":{\"51\":1},\"1\":{\"10\":2,\"51\":2,\"52\":1}}],[\"像\",{\"1\":{\"120\":1}}],[\"考量\",{\"1\":{\"120\":1}}],[\"考虑\",{\"1\":{\"37\":1,\"52\":1,\"79\":1}}],[\"转换\",{\"1\":{\"119\":1}}],[\"转移\",{\"1\":{\"42\":1,\"43\":1}}],[\"局部变量\",{\"0\":{\"113\":1}}],[\"拥有\",{\"1\":{\"112\":1}}],[\"祖先\",{\"1\":{\"112\":1}}],[\"父\",{\"1\":{\"112\":3}}],[\"父子\",{\"1\":{\"12\":1,\"13\":1}}],[\"缩进\",{\"1\":{\"112\":1}}],[\"缩写\",{\"1\":{\"108\":1}}],[\"寻找\",{\"1\":{\"112\":1}}],[\"树上\",{\"1\":{\"112\":2}}],[\"树根\",{\"1\":{\"11\":1}}],[\"拿走\",{\"1\":{\"112\":1}}],[\"替换\",{\"1\":{\"112\":2,\"133\":1}}],[\"替代\",{\"0\":{\"70\":1},\"1\":{\"112\":2,\"141\":1}}],[\"赋给\",{\"1\":{\"112\":1}}],[\"继任者\",{\"1\":{\"112\":8}}],[\"继续\",{\"1\":{\"16\":1}}],[\"移除\",{\"1\":{\"112\":2}}],[\"移动\",{\"1\":{\"86\":1}}],[\"除数\",{\"1\":{\"118\":1}}],[\"除\",{\"1\":{\"112\":2}}],[\"历来\",{\"1\":{\"112\":1}}],[\"历史\",{\"1\":{\"81\":1}}],[\"插入\",{\"1\":{\"112\":1}}],[\"插入排序\",{\"0\":{\"57\":1},\"1\":{\"54\":1}}],[\"熟练\",{\"1\":{\"111\":1}}],[\"迅速\",{\"1\":{\"111\":1}}],[\"引用\",{\"0\":{\"112\":1},\"1\":{\"111\":1}}],[\"引入\",{\"1\":{\"69\":1,\"108\":1}}],[\"借用\",{\"1\":{\"111\":1}}],[\"借助\",{\"1\":{\"83\":1}}],[\"技巧\",{\"0\":{\"124\":1},\"1\":{\"111\":1}}],[\"学到\",{\"1\":{\"111\":1}}],[\"学习曲线\",{\"1\":{\"111\":1}}],[\"学习\",{\"0\":{\"111\":1}}],[\"运用\",{\"1\":{\"111\":1}}],[\"运行\",{\"0\":{\"122\":1,\"139\":1},\"1\":{\"16\":2,\"26\":3,\"36\":1,\"109\":2,\"131\":1,\"135\":1,\"139\":3,\"141\":1}}],[\"困难\",{\"1\":{\"111\":1}}],[\"陡峭\",{\"1\":{\"111\":1}}],[\"背后\",{\"1\":{\"111\":1}}],[\"诸多\",{\"1\":{\"111\":1}}],[\"眼前一亮\",{\"1\":{\"111\":1}}],[\"人\",{\"1\":{\"111\":1}}],[\"昂贵\",{\"1\":{\"110\":1}}],[\"代理服务器\",{\"1\":{\"135\":1}}],[\"代表\",{\"1\":{\"112\":1}}],[\"代价\",{\"1\":{\"110\":1,\"111\":1}}],[\"代码\",{\"1\":{\"66\":1,\"71\":1,\"74\":1,\"100\":1,\"108\":1,\"109\":2}}],[\"信息\",{\"1\":{\"110\":2}}],[\"堆栈\",{\"1\":{\"110\":2}}],[\"堆排序\",{\"0\":{\"61\":1},\"1\":{\"54\":1}}],[\"属性\",{\"1\":{\"110\":1}}],[\"滥用\",{\"1\":{\"110\":1}}],[\"懒\",{\"1\":{\"110\":1}}],[\"调用\",{\"1\":{\"110\":2}}],[\"调整\",{\"1\":{\"27\":1,\"79\":1,\"82\":2}}],[\"底层\",{\"1\":{\"109\":1}}],[\"便捷\",{\"1\":{\"109\":1}}],[\"启用\",{\"1\":{\"109\":1,\"125\":1}}],[\"启动\",{\"0\":{\"16\":1,\"28\":1,\"121\":1},\"1\":{\"16\":4,\"36\":1,\"140\":2}}],[\"级别\",{\"1\":{\"109\":2,\"110\":1}}],[\"检查\",{\"1\":{\"109\":2}}],[\"检查和\",{\"1\":{\"35\":1}}],[\"手动\",{\"1\":{\"109\":2,\"111\":1}}],[\"拼接\",{\"1\":{\"109\":2,\"110\":2}}],[\"意外\",{\"1\":{\"141\":2}}],[\"意义\",{\"1\":{\"109\":1}}],[\"意思\",{\"1\":{\"45\":1}}],[\"极大\",{\"1\":{\"109\":1}}],[\"全局\",{\"1\":{\"120\":1}}],[\"全局变量\",{\"0\":{\"120\":1},\"1\":{\"120\":2}}],[\"全\",{\"1\":{\"109\":1}}],[\"全部\",{\"1\":{\"16\":1}}],[\"麻烦\",{\"1\":{\"108\":1,\"141\":1}}],[\"机上安装\",{\"1\":{\"140\":1}}],[\"机制\",{\"1\":{\"108\":1}}],[\"机器\",{\"1\":{\"66\":1}}],[\"绑定\",{\"1\":{\"108\":2,\"109\":1}}],[\"静态\",{\"1\":{\"108\":1}}],[\"称\",{\"1\":{\"108\":1}}],[\"称为\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"13\":1,\"109\":1}}],[\"框架\",{\"0\":{\"107\":1},\"1\":{\"108\":1,\"109\":1}}],[\"抽象\",{\"0\":{\"107\":1}}],[\"带来\",{\"1\":{\"106\":1}}],[\"临时\",{\"1\":{\"106\":1}}],[\"化新\",{\"1\":{\"106\":1}}],[\"尽可能\",{\"1\":{\"106\":1}}],[\"尽管\",{\"1\":{\"70\":1}}],[\"垃圾\",{\"1\":{\"106\":4}}],[\"吸收\",{\"1\":{\"106\":1}}],[\"晚于\",{\"1\":{\"106\":1}}],[\"诞生\",{\"1\":{\"106\":1}}],[\"更改\",{\"1\":{\"135\":1}}],[\"更\",{\"1\":{\"105\":1,\"109\":2,\"125\":1}}],[\"更好\",{\"1\":{\"105\":1}}],[\"异步\",{\"1\":{\"105\":1}}],[\"异或\",{\"1\":{\"71\":1}}],[\"短板\",{\"1\":{\"104\":1}}],[\"短语\",{\"0\":{\"11\":1,\"12\":1},\"1\":{\"11\":1,\"13\":3}}],[\"经典\",{\"1\":{\"100\":1}}],[\"问\",{\"1\":{\"99\":1}}],[\"问题\",{\"0\":{\"14\":1,\"133\":1,\"141\":1},\"1\":{\"31\":1,\"36\":1,\"37\":1,\"70\":1,\"79\":2,\"100\":1,\"110\":1,\"139\":1,\"141\":1}}],[\"坐\",{\"1\":{\"99\":1}}],[\"认识\",{\"1\":{\"99\":2}}],[\"朋友\",{\"1\":{\"99\":1}}],[\"正常\",{\"1\":{\"139\":1,\"141\":1}}],[\"正确\",{\"1\":{\"110\":1,\"111\":1}}],[\"正在\",{\"1\":{\"97\":1}}],[\"正规\",{\"1\":{\"10\":1}}],[\"母\",{\"1\":{\"97\":1}}],[\"构造\",{\"1\":{\"97\":1}}],[\"五种\",{\"1\":{\"93\":1}}],[\"拆分\",{\"1\":{\"93\":3}}],[\"少\",{\"1\":{\"91\":1}}],[\"推测\",{\"1\":{\"91\":1}}],[\"推导\",{\"1\":{\"4\":1,\"6\":1}}],[\"效果\",{\"1\":{\"91\":1}}],[\"效率高\",{\"1\":{\"79\":1,\"80\":1}}],[\"效率\",{\"1\":{\"52\":1,\"80\":1,\"83\":1,\"109\":1,\"111\":1}}],[\"太短\",{\"1\":{\"91\":1}}],[\"改变\",{\"1\":{\"91\":2}}],[\"改成\",{\"1\":{\"36\":1}}],[\"距离\",{\"1\":{\"91\":1}}],[\"曼哈顿\",{\"1\":{\"91\":1}}],[\"终点\",{\"1\":{\"91\":1}}],[\"终结\",{\"1\":{\"4\":2,\"5\":1,\"9\":1}}],[\"奇偶性\",{\"1\":{\"91\":4}}],[\"−\",{\"1\":{\"91\":1}}],[\"剪枝\",{\"1\":{\"91\":4}}],[\"想\",{\"1\":{\"91\":2}}],[\"满足\",{\"1\":{\"94\":1,\"99\":1}}],[\"满意\",{\"1\":{\"91\":1}}],[\"满心欢喜\",{\"1\":{\"16\":1}}],[\"耗时\",{\"1\":{\"91\":2}}],[\"虽然\",{\"1\":{\"91\":1}}],[\"交了\",{\"1\":{\"91\":1}}],[\"搜索\",{\"1\":{\"91\":1,\"139\":1,\"141\":1}}],[\"搜到\",{\"1\":{\"15\":2}}],[\"恢复\",{\"1\":{\"91\":1}}],[\"步中\",{\"1\":{\"130\":1}}],[\"步\",{\"1\":{\"91\":1}}],[\"步骤\",{\"1\":{\"79\":1}}],[\"逃生\",{\"1\":{\"88\":1}}],[\"逃离\",{\"1\":{\"86\":2}}],[\"样例\",{\"1\":{\"88\":1,\"91\":1}}],[\"起点\",{\"1\":{\"87\":1,\"91\":1}}],[\"起来\",{\"1\":{\"11\":1,\"12\":1}}],[\"墙\",{\"1\":{\"87\":1,\"91\":1}}],[\"布局\",{\"1\":{\"87\":1}}],[\"测试用例\",{\"1\":{\"87\":3,\"94\":1}}],[\"测评\",{\"1\":{\"50\":1,\"51\":1,\"52\":1}}],[\"任意\",{\"1\":{\"86\":1}}],[\"任何\",{\"1\":{\"68\":1}}],[\"恰好\",{\"1\":{\"86\":1,\"91\":1}}],[\"秒\",{\"1\":{\"86\":3}}],[\"门口\",{\"1\":{\"86\":1}}],[\"门\",{\"1\":{\"86\":1,\"87\":2}}],[\"迷宫\",{\"1\":{\"86\":2,\"87\":2}}],[\"长期\",{\"1\":{\"141\":1}}],[\"长方形\",{\"1\":{\"86\":1}}],[\"长度\",{\"1\":{\"70\":1,\"77\":1}}],[\"×\",{\"1\":{\"86\":1}}],[\"及运维\",{\"1\":{\"83\":1}}],[\"及其\",{\"0\":{\"53\":1}}],[\"模块\",{\"1\":{\"126\":1}}],[\"模式\",{\"1\":{\"83\":1,\"106\":1}}],[\"模板\",{\"0\":{\"75\":1},\"1\":{\"68\":1,\"69\":1,\"71\":1,\"75\":3,\"93\":1,\"106\":1}}],[\"权衡\",{\"1\":{\"83\":1}}],[\"权限\",{\"0\":{\"133\":1},\"1\":{\"36\":1,\"139\":1}}],[\"显示\",{\"1\":{\"141\":1}}],[\"显得\",{\"1\":{\"108\":1}}],[\"显著\",{\"1\":{\"83\":1}}],[\"显然\",{\"1\":{\"42\":1}}],[\"兼顾\",{\"1\":{\"83\":1}}],[\"兼容性\",{\"1\":{\"27\":1}}],[\"混合策略\",{\"1\":{\"83\":1}}],[\"混淆\",{\"0\":{\"68\":1,\"77\":1},\"1\":{\"68\":1,\"69\":1}}],[\"❌\",{\"1\":{\"83\":4}}],[\"✅\",{\"1\":{\"83\":5}}],[\"租户\",{\"1\":{\"82\":1,\"83\":1}}],[\"宕机\",{\"1\":{\"82\":1}}],[\"风险\",{\"1\":{\"82\":1}}],[\"业务\",{\"1\":{\"82\":1}}],[\"与\",{\"1\":{\"82\":1,\"83\":1,\"91\":1}}],[\"独立\",{\"1\":{\"82\":1}}],[\"资源\",{\"1\":{\"81\":1}}],[\"占用\",{\"1\":{\"81\":1}}],[\"依然\",{\"1\":{\"81\":1}}],[\"依赖\",{\"1\":{\"22\":1,\"68\":1,\"109\":1}}],[\"频率\",{\"1\":{\"81\":1}}],[\"频繁\",{\"1\":{\"31\":1,\"80\":1}}],[\"冷热\",{\"1\":{\"81\":1}}],[\"激增\",{\"1\":{\"81\":1}}],[\"订单\",{\"1\":{\"81\":2}}],[\"集中\",{\"1\":{\"81\":1}}],[\"集合\",{\"1\":{\"6\":1}}],[\"月\",{\"1\":{\"81\":1}}],[\"月份\",{\"1\":{\"79\":1}}],[\"≤\",{\"1\":{\"81\":2,\"94\":2}}],[\"跨\",{\"1\":{\"80\":1}}],[\"扩容\",{\"1\":{\"80\":1}}],[\"扩展性\",{\"1\":{\"79\":1,\"80\":1,\"83\":2}}],[\"扩展\",{\"0\":{\"40\":1},\"1\":{\"43\":2,\"82\":1}}],[\"定位\",{\"1\":{\"80\":1,\"82\":1}}],[\"定义\",{\"1\":{\"42\":1,\"45\":1,\"69\":1,\"79\":1,\"91\":1,\"120\":1}}],[\"→\",{\"1\":{\"80\":2}}],[\"公式\",{\"1\":{\"80\":1}}],[\"架构\",{\"1\":{\"79\":1}}],[\"划分\",{\"1\":{\"79\":1,\"81\":2}}],[\"辅助\",{\"1\":{\"79\":1}}],[\"列表\",{\"1\":{\"79\":1}}],[\"部分\",{\"1\":{\"79\":2}}],[\"部署\",{\"1\":{\"31\":2}}],[\"通常\",{\"1\":{\"109\":1}}],[\"通俗易懂\",{\"1\":{\"79\":1}}],[\"通过\",{\"1\":{\"15\":1,\"36\":2,\"40\":1,\"79\":1,\"83\":1,\"87\":1,\"109\":1,\"112\":1,\"132\":1}}],[\"逻辑\",{\"1\":{\"79\":1,\"83\":1}}],[\"组织\",{\"1\":{\"79\":1}}],[\"组成\",{\"1\":{\"6\":1,\"87\":1,\"94\":1}}],[\"现在\",{\"1\":{\"79\":1,\"125\":1,\"141\":1}}],[\"热点\",{\"1\":{\"79\":1,\"81\":1}}],[\"热点问题\",{\"1\":{\"79\":1,\"80\":1}}],[\"增减\",{\"1\":{\"79\":1,\"80\":1}}],[\"增加\",{\"1\":{\"79\":1,\"82\":1}}],[\"节点\",{\"1\":{\"79\":1,\"80\":1,\"112\":37}}],[\"函数\",{\"1\":{\"79\":1,\"97\":1,\"110\":1}}],[\"细节\",{\"1\":{\"79\":1}}],[\"细讲\",{\"1\":{\"79\":1}}],[\"哪种\",{\"1\":{\"79\":1}}],[\"什么\",{\"1\":{\"79\":1}}],[\"同样\",{\"1\":{\"105\":1,\"109\":1}}],[\"同时\",{\"1\":{\"79\":2,\"112\":2,\"120\":2}}],[\"同一\",{\"1\":{\"79\":2,\"81\":1}}],[\"例子\",{\"1\":{\"79\":2}}],[\"例如\",{\"1\":{\"9\":1,\"79\":1,\"93\":1,\"109\":1,\"125\":2,\"133\":1}}],[\"给\",{\"1\":{\"140\":1}}],[\"给出\",{\"1\":{\"79\":1,\"87\":1}}],[\"给定\",{\"1\":{\"49\":1,\"112\":1}}],[\"本\",{\"1\":{\"126\":1}}],[\"本身\",{\"1\":{\"79\":1}}],[\"本地\",{\"1\":{\"18\":1,\"31\":1}}],[\"影响\",{\"1\":{\"79\":1}}],[\"灵活性\",{\"1\":{\"82\":1,\"109\":1}}],[\"灵活\",{\"1\":{\"79\":2,\"108\":1}}],[\"日志\",{\"0\":{\"101\":1,\"102\":1,\"107\":1},\"1\":{\"79\":1,\"81\":1,\"83\":1,\"106\":3,\"108\":3,\"109\":4,\"110\":2}}],[\"明显\",{\"1\":{\"79\":1,\"81\":1,\"91\":1}}],[\"适用\",{\"1\":{\"79\":4,\"80\":1,\"81\":1,\"82\":1,\"83\":1}}],[\"适合\",{\"1\":{\"79\":2}}],[\"负载\",{\"1\":{\"79\":1,\"83\":1}}],[\"某\",{\"1\":{\"81\":1,\"125\":1}}],[\"某月\",{\"1\":{\"81\":1}}],[\"某些\",{\"1\":{\"79\":1}}],[\"某个\",{\"1\":{\"79\":1}}],[\"因\",{\"1\":{\"106\":1}}],[\"因为\",{\"1\":{\"79\":1,\"91\":3,\"110\":1,\"139\":1,\"141\":1}}],[\"因此\",{\"1\":{\"21\":1,\"31\":2,\"70\":1,\"75\":1,\"77\":1,\"86\":1,\"91\":2,\"106\":1,\"112\":1,\"139\":1}}],[\"查看\",{\"1\":{\"125\":1,\"130\":1,\"141\":1}}],[\"查集\",{\"1\":{\"100\":1}}],[\"查询\",{\"1\":{\"79\":6,\"80\":4,\"81\":3,\"82\":4,\"83\":6}}],[\"查找\",{\"1\":{\"16\":1}}],[\"管理\",{\"1\":{\"79\":1,\"81\":1,\"111\":1,\"125\":1}}],[\"管理员\",{\"1\":{\"16\":1,\"26\":1,\"35\":1,\"36\":3}}],[\"易于\",{\"1\":{\"79\":1,\"81\":1}}],[\"按照\",{\"1\":{\"139\":1}}],[\"按\",{\"1\":{\"79\":2,\"81\":3,\"82\":1,\"83\":3}}],[\"放\",{\"1\":{\"141\":1}}],[\"放在\",{\"1\":{\"79\":1}}],[\"放弃\",{\"1\":{\"18\":1,\"23\":1}}],[\"万到\",{\"1\":{\"79\":1}}],[\"万\",{\"1\":{\"79\":2,\"81\":3}}],[\"变为\",{\"0\":{\"113\":1}}],[\"变动\",{\"1\":{\"79\":1}}],[\"变更\",{\"1\":{\"31\":1}}],[\"迁移\",{\"0\":{\"130\":1},\"1\":{\"79\":2,\"80\":1,\"82\":1,\"130\":1}}],[\"差\",{\"1\":{\"79\":1,\"80\":1}}],[\"缺点\",{\"1\":{\"79\":3,\"80\":1,\"81\":1,\"82\":1}}],[\"假设\",{\"1\":{\"79\":1}}],[\"决定\",{\"1\":{\"79\":2}}],[\"键为\",{\"1\":{\"80\":1}}],[\"键\",{\"1\":{\"79\":2,\"80\":1,\"81\":1,\"82\":2}}],[\"示例\",{\"1\":{\"79\":2,\"80\":1,\"81\":1,\"82\":1}}],[\"将\",{\"0\":{\"113\":1,\"117\":1,\"118\":1},\"1\":{\"79\":1,\"108\":1,\"112\":1,\"119\":1,\"125\":1}}],[\"瓶颈\",{\"1\":{\"79\":3,\"82\":2}}],[\"单点\",{\"1\":{\"83\":1}}],[\"单点故障\",{\"1\":{\"79\":1,\"82\":1}}],[\"单条\",{\"1\":{\"80\":1}}],[\"单独\",{\"1\":{\"79\":1}}],[\"单表\",{\"1\":{\"79\":1}}],[\"单库\",{\"1\":{\"79\":1}}],[\"量过大\",{\"1\":{\"79\":1}}],[\"应该\",{\"1\":{\"79\":1,\"91\":1}}],[\"应对\",{\"1\":{\"79\":1}}],[\"应用\",{\"1\":{\"70\":1,\"79\":3,\"83\":1,\"129\":1}}],[\"思想\",{\"1\":{\"91\":1}}],[\"思路\",{\"1\":{\"79\":1}}],[\"思考\",{\"1\":{\"79\":1}}],[\"逐步\",{\"1\":{\"79\":1}}],[\"回答\",{\"1\":{\"139\":1}}],[\"回归\",{\"1\":{\"110\":1}}],[\"回收\",{\"1\":{\"106\":1,\"112\":1}}],[\"回溯\",{\"1\":{\"91\":1}}],[\"回忆\",{\"1\":{\"79\":1}}],[\"回文\",{\"0\":{\"39\":1},\"1\":{\"40\":1,\"42\":1,\"43\":2}}],[\"让\",{\"1\":{\"79\":1,\"97\":1,\"111\":1}}],[\"清晰\",{\"1\":{\"79\":1}}],[\"清楚\",{\"1\":{\"79\":1}}],[\"清理\",{\"1\":{\"22\":1}}],[\"别人\",{\"1\":{\"79\":1}}],[\"理解\",{\"1\":{\"79\":2,\"120\":1}}],[\"得\",{\"1\":{\"79\":1,\"141\":1}}],[\"得到\",{\"1\":{\"4\":1}}],[\"嗯\",{\"1\":{\"79\":1}}],[\"总结\",{\"1\":{\"79\":2}}],[\"总览\",{\"0\":{\"54\":1}}],[\"此时\",{\"1\":{\"139\":1}}],[\"此\",{\"1\":{\"79\":1,\"112\":1,\"125\":1,\"128\":1}}],[\"此外\",{\"1\":{\"77\":1,\"110\":1}}],[\"优点\",{\"1\":{\"79\":2,\"80\":1,\"81\":1,\"82\":1,\"106\":1,\"111\":1}}],[\"优缺点\",{\"1\":{\"79\":4}}],[\"优化\",{\"1\":{\"52\":1,\"70\":1,\"77\":1,\"82\":1,\"91\":1,\"109\":1}}],[\"作者\",{\"1\":{\"79\":1,\"105\":1,\"109\":1}}],[\"作为\",{\"1\":{\"30\":1}}],[\"表做\",{\"1\":{\"82\":1}}],[\"表若\",{\"1\":{\"82\":1}}],[\"表中\",{\"1\":{\"79\":1}}],[\"表\",{\"1\":{\"79\":10,\"80\":3,\"81\":3,\"82\":4,\"83\":2}}],[\"表示\",{\"1\":{\"42\":1,\"43\":1,\"45\":1,\"50\":1,\"87\":1,\"88\":1,\"97\":1,\"130\":1}}],[\"映射\",{\"1\":{\"79\":12,\"82\":8,\"83\":1}}],[\"映像\",{\"1\":{\"27\":1}}],[\"篇文章\",{\"1\":{\"79\":1,\"141\":1}}],[\"详细\",{\"1\":{\"79\":2,\"125\":1}}],[\"详解\",{\"0\":{\"79\":1}}],[\"详见\",{\"1\":{\"21\":1}}],[\"策略\",{\"0\":{\"79\":1},\"1\":{\"79\":13,\"83\":2}}],[\"强\",{\"1\":{\"82\":1,\"111\":1}}],[\"强度\",{\"1\":{\"77\":1}}],[\"强大\",{\"1\":{\"68\":1,\"121\":1}}],[\"提示\",{\"1\":{\"139\":2}}],[\"提高\",{\"1\":{\"109\":1}}],[\"提供\",{\"1\":{\"105\":1,\"109\":1}}],[\"提升\",{\"1\":{\"77\":1,\"83\":1,\"109\":1}}],[\"提到\",{\"1\":{\"31\":1,\"69\":1,\"79\":2}}],[\"固定\",{\"1\":{\"77\":1,\"79\":1}}],[\"图中\",{\"1\":{\"141\":1}}],[\"图灵\",{\"1\":{\"75\":1}}],[\"图案\",{\"1\":{\"28\":1}}],[\"证明\",{\"1\":{\"75\":1}}],[\"被\",{\"1\":{\"75\":1,\"87\":1,\"112\":4}}],[\"巧妙\",{\"1\":{\"75\":1}}],[\"范式\",{\"1\":{\"75\":1}}],[\"范围\",{\"1\":{\"49\":1,\"79\":14,\"80\":2,\"81\":8,\"83\":3}}],[\"广泛应用\",{\"1\":{\"75\":1}}],[\"契\",{\"0\":{\"75\":1}}],[\"波\",{\"0\":{\"75\":1}}],[\"斐\",{\"0\":{\"75\":1}}],[\"汇编\",{\"1\":{\"74\":1}}],[\"求值\",{\"1\":{\"74\":1,\"110\":1}}],[\"阶乘\",{\"0\":{\"74\":1}}],[\"—\",{\"0\":{\"74\":2,\"75\":2}}],[\"偏\",{\"1\":{\"71\":1}}],[\"利用\",{\"1\":{\"71\":1}}],[\"多线程\",{\"1\":{\"122\":1}}],[\"多余\",{\"1\":{\"110\":1}}],[\"多项式\",{\"1\":{\"97\":2}}],[\"多个\",{\"1\":{\"80\":1,\"87\":1,\"94\":1,\"120\":1}}],[\"多\",{\"1\":{\"79\":1,\"82\":1,\"83\":1,\"105\":1,\"125\":1}}],[\"多种\",{\"0\":{\"71\":1},\"1\":{\"77\":1,\"108\":1}}],[\"多于\",{\"1\":{\"4\":1}}],[\"场景\",{\"1\":{\"70\":1,\"79\":7,\"80\":2,\"81\":2,\"82\":2,\"83\":1}}],[\"宏\",{\"1\":{\"70\":1,\"77\":1}}],[\"返回\",{\"1\":{\"70\":1,\"77\":1,\"112\":11}}],[\"超过\",{\"1\":{\"69\":1}}],[\"参加\",{\"1\":{\"99\":1}}],[\"参数\",{\"1\":{\"69\":2,\"77\":1}}],[\"参考\",{\"1\":{\"33\":1}}],[\"指针\",{\"0\":{\"112\":1},\"1\":{\"112\":1,\"121\":1}}],[\"指定\",{\"0\":{\"125\":1},\"1\":{\"69\":1,\"112\":5,\"125\":2,\"130\":2,\"131\":1}}],[\"指令\",{\"0\":{\"19\":1,\"131\":1},\"1\":{\"16\":1,\"20\":1,\"133\":1}}],[\"额外\",{\"1\":{\"69\":1,\"110\":1}}],[\"若该\",{\"1\":{\"112\":1}}],[\"若\",{\"1\":{\"69\":1,\"80\":1,\"112\":6}}],[\"若干个\",{\"1\":{\"7\":2}}],[\"嵌套\",{\"1\":{\"69\":1}}],[\"较大\",{\"1\":{\"69\":1}}],[\"递归\",{\"0\":{\"70\":1},\"1\":{\"69\":2,\"91\":1,\"112\":1}}],[\"乘以\",{\"1\":{\"69\":2}}],[\"位\",{\"1\":{\"69\":2}}],[\"位置\",{\"1\":{\"27\":2,\"79\":3,\"80\":3,\"82\":2,\"91\":1}}],[\"低\",{\"1\":{\"69\":1,\"80\":1,\"81\":1,\"106\":1}}],[\"期间\",{\"1\":{\"69\":1,\"74\":1}}],[\"期末\",{\"0\":{\"2\":1}}],[\"消除\",{\"1\":{\"69\":1,\"77\":1}}],[\"消失\",{\"1\":{\"22\":1}}],[\"硬\",{\"1\":{\"69\":1}}],[\"硬件\",{\"1\":{\"27\":1}}],[\"简洁\",{\"1\":{\"109\":1}}],[\"简单\",{\"1\":{\"81\":1,\"106\":1,\"112\":1,\"120\":1}}],[\"简易\",{\"0\":{\"77\":1},\"1\":{\"69\":1}}],[\"简体中文\",{\"1\":{\"28\":1}}],[\"原生\",{\"0\":{\"112\":1}}],[\"原始\",{\"0\":{\"69\":1},\"1\":{\"110\":1}}],[\"原理\",{\"0\":{\"2\":1},\"1\":{\"79\":2,\"80\":1,\"81\":1,\"82\":1}}],[\"外部\",{\"1\":{\"68\":1}}],[\"元\",{\"0\":{\"75\":1},\"1\":{\"68\":1,\"75\":2}}],[\"具有\",{\"1\":{\"68\":1,\"111\":1}}],[\"具体\",{\"1\":{\"15\":1,\"108\":1,\"109\":1,\"111\":1,\"132\":1}}],[\"整数\",{\"1\":{\"87\":1,\"94\":1}}],[\"整数倍\",{\"1\":{\"67\":2}}],[\"整理\",{\"1\":{\"79\":1}}],[\"整个\",{\"1\":{\"36\":1,\"82\":1}}],[\"成\",{\"1\":{\"79\":1}}],[\"成为\",{\"1\":{\"79\":2,\"82\":1}}],[\"成本\",{\"1\":{\"79\":1,\"80\":1,\"83\":1}}],[\"成员\",{\"1\":{\"67\":2}}],[\"成功\",{\"1\":{\"31\":1,\"112\":2,\"135\":2,\"139\":1,\"141\":1}}],[\"联合\",{\"1\":{\"67\":1}}],[\"规则\",{\"1\":{\"67\":1,\"82\":2}}],[\"规划\",{\"0\":{\"41\":1,\"42\":1,\"43\":1}}],[\"遵循\",{\"1\":{\"67\":1}}],[\"判断\",{\"1\":{\"66\":1,\"110\":1}}],[\"比如\",{\"1\":{\"66\":1,\"79\":6,\"106\":1,\"135\":1}}],[\"比较\",{\"1\":{\"30\":1,\"79\":2,\"91\":2,\"106\":1}}],[\"段落\",{\"1\":{\"79\":1}}],[\"段\",{\"1\":{\"66\":1}}],[\"字段\",{\"1\":{\"120\":1,\"126\":1}}],[\"字\",{\"1\":{\"66\":1}}],[\"字符集\",{\"1\":{\"45\":1}}],[\"字符串\",{\"0\":{\"44\":1,\"68\":1,\"77\":1},\"1\":{\"42\":1,\"45\":1,\"68\":1,\"69\":1,\"71\":1,\"77\":1,\"109\":2,\"110\":2,\"112\":2}}],[\"字符\",{\"1\":{\"40\":1,\"87\":1,\"112\":1}}],[\"共用\",{\"0\":{\"66\":1},\"1\":{\"66\":1}}],[\"·\",{\"1\":{\"54\":3}}],[\"基本\",{\"0\":{\"129\":1},\"1\":{\"91\":1,\"128\":1,\"141\":1}}],[\"基本概念\",{\"1\":{\"79\":1}}],[\"基本上\",{\"1\":{\"15\":1,\"110\":1}}],[\"基于\",{\"1\":{\"69\":1,\"79\":1,\"110\":1}}],[\"基数排序\",{\"0\":{\"64\":1},\"1\":{\"54\":1}}],[\"桶\",{\"0\":{\"63\":1},\"1\":{\"54\":1}}],[\"计网\",{\"1\":{\"128\":1}}],[\"计数\",{\"0\":{\"62\":1},\"1\":{\"54\":1}}],[\"计算\",{\"0\":{\"67\":1},\"1\":{\"45\":1,\"67\":1,\"79\":2,\"80\":2,\"97\":2,\"110\":1}}],[\"计算机\",{\"1\":{\"16\":2,\"97\":1}}],[\"计算机网络\",{\"1\":{\"16\":1}}],[\"快速\",{\"0\":{\"60\":1},\"1\":{\"54\":1}}],[\"归并\",{\"0\":{\"59\":1},\"1\":{\"54\":1}}],[\"²\",{\"1\":{\"54\":3}}],[\"希尔\",{\"0\":{\"58\":1},\"1\":{\"54\":1}}],[\"希望\",{\"1\":{\"31\":1}}],[\"稳定\",{\"1\":{\"54\":10}}],[\"稳定性\",{\"1\":{\"54\":1}}],[\"冒泡排序\",{\"0\":{\"55\":1},\"1\":{\"54\":1}}],[\"空间\",{\"1\":{\"54\":1}}],[\"空空如也\",{\"1\":{\"1\":1}}],[\"平均\",{\"1\":{\"54\":1}}],[\"实践\",{\"1\":{\"111\":1}}],[\"实际\",{\"1\":{\"79\":1,\"83\":1,\"141\":1}}],[\"实测\",{\"1\":{\"69\":1}}],[\"实例\",{\"0\":{\"73\":1},\"1\":{\"69\":1,\"106\":1}}],[\"实现\",{\"0\":{\"53\":1,\"68\":1,\"112\":1},\"1\":{\"68\":1,\"69\":1,\"71\":1,\"105\":1,\"106\":1,\"108\":2,\"109\":1,\"110\":1,\"112\":2}}],[\"实验\",{\"1\":{\"16\":2,\"128\":1}}],[\"排序\",{\"0\":{\"53\":1,\"54\":1,\"56\":1,\"58\":1,\"59\":1,\"60\":1,\"62\":1,\"63\":1},\"1\":{\"54\":7}}],[\"排列\",{\"1\":{\"11\":1,\"12\":1,\"13\":1}}],[\"常用\",{\"0\":{\"131\":1},\"1\":{\"103\":1,\"120\":1}}],[\"常量\",{\"1\":{\"77\":1}}],[\"常见\",{\"0\":{\"53\":1},\"1\":{\"79\":2}}],[\"常数\",{\"1\":{\"52\":1}}],[\"︎\",{\"1\":{\"52\":1}}],[\"↩\",{\"1\":{\"52\":1}}],[\"需先\",{\"1\":{\"82\":1}}],[\"需求\",{\"1\":{\"79\":2}}],[\"需\",{\"1\":{\"52\":1,\"80\":2,\"81\":1,\"83\":1,\"109\":1,\"111\":1}}],[\"需要\",{\"0\":{\"122\":1},\"1\":{\"15\":1,\"16\":1,\"21\":1,\"23\":1,\"26\":1,\"69\":1,\"79\":12,\"82\":1,\"99\":1,\"108\":1,\"109\":1,\"112\":1,\"125\":1,\"129\":1}}],[\"达到\",{\"1\":{\"51\":1}}],[\"合理\",{\"1\":{\"83\":1}}],[\"合适\",{\"1\":{\"79\":1}}],[\"合数\",{\"1\":{\"51\":1}}],[\"合并\",{\"1\":{\"18\":2,\"80\":1}}],[\"避免\",{\"1\":{\"51\":1,\"70\":1,\"77\":1,\"79\":3,\"80\":1,\"106\":1,\"109\":2}}],[\"避开\",{\"1\":{\"45\":1}}],[\"欧拉\",{\"0\":{\"51\":1}}],[\"用于\",{\"1\":{\"112\":1}}],[\"用\",{\"1\":{\"66\":1,\"79\":2,\"82\":1,\"128\":1,\"141\":2}}],[\"用时\",{\"1\":{\"50\":1,\"51\":1,\"52\":1}}],[\"用户名\",{\"1\":{\"20\":2,\"35\":1,\"130\":1,\"133\":1}}],[\"用户\",{\"0\":{\"20\":1},\"1\":{\"35\":3,\"79\":4,\"80\":2,\"83\":1,\"130\":1,\"139\":1}}],[\"确保\",{\"1\":{\"79\":2}}],[\"确定\",{\"1\":{\"50\":1,\"80\":1}}],[\"确认\",{\"1\":{\"16\":2}}],[\"⋅\",{\"1\":{\"50\":1}}],[\"埃氏\",{\"0\":{\"50\":1,\"52\":1},\"1\":{\"52\":1}}],[\"小时\",{\"1\":{\"141\":2}}],[\"小狗\",{\"1\":{\"86\":2,\"88\":1}}],[\"小标题\",{\"1\":{\"79\":1}}],[\"小端序\",{\"1\":{\"66\":1}}],[\"小\",{\"0\":{\"124\":1},\"1\":{\"49\":1}}],[\"输\",{\"1\":{\"139\":1}}],[\"输完\",{\"1\":{\"139\":1}}],[\"输出\",{\"1\":{\"49\":1,\"88\":1,\"91\":3,\"93\":1,\"110\":3}}],[\"输入\",{\"1\":{\"16\":3,\"18\":1,\"87\":2,\"94\":1,\"125\":1}}],[\"询问\",{\"1\":{\"49\":1}}],[\"questions\",{\"1\":{\"121\":1,\"141\":1}}],[\"question\",{\"1\":{\"78\":1}}],[\"q\",{\"1\":{\"49\":1,\"50\":3,\"51\":3,\"52\":3}}],[\"题\",{\"1\":{\"91\":1,\"93\":1}}],[\"题意\",{\"1\":{\"49\":1}}],[\"题目\",{\"0\":{\"86\":1,\"93\":1,\"99\":1},\"1\":{\"39\":1,\"49\":1,\"85\":1,\"91\":1,\"92\":1,\"98\":1}}],[\"谷\",{\"1\":{\"49\":1}}],[\"洛\",{\"1\":{\"49\":1}}],[\"筛\",{\"0\":{\"49\":1,\"50\":1,\"51\":2,\"52\":1},\"1\":{\"51\":1,\"52\":3}}],[\"素数\",{\"0\":{\"49\":1},\"1\":{\"49\":1,\"50\":1,\"52\":1}}],[\"93\",{\"1\":{\"48\":1}}],[\"90\",{\"1\":{\"48\":1}}],[\"96\",{\"1\":{\"48\":1}}],[\"95\",{\"1\":{\"48\":2}}],[\"9\",{\"1\":{\"48\":3}}],[\"998244353\",{\"1\":{\"45\":1}}],[\"算法\",{\"0\":{\"47\":1,\"53\":1,\"54\":1},\"1\":{\"54\":1,\"70\":1,\"75\":2}}],[\"答案\",{\"0\":{\"46\":1}}],[\"枚举\",{\"0\":{\"46\":1}}],[\"!\",{\"1\":{\"45\":2,\"50\":1,\"51\":1,\"52\":1,\"91\":2,\"100\":1,\"112\":21,\"117\":1,\"118\":2,\"119\":1,\"121\":5,\"122\":2}}],[\"传统\",{\"1\":{\"109\":1}}],[\"传递性\",{\"1\":{\"99\":1}}],[\"传入\",{\"1\":{\"45\":1}}],[\"传送门\",{\"1\":{\"39\":1,\"49\":1,\"85\":1,\"92\":1,\"98\":1}}],[\"幂\",{\"1\":{\"45\":1}}],[\"减去\",{\"1\":{\"45\":1}}],[\"减少\",{\"1\":{\"36\":1,\"79\":1,\"82\":1,\"104\":1,\"106\":2}}],[\"区间\",{\"1\":{\"45\":2,\"81\":1,\"83\":1}}],[\"零\",{\"1\":{\"118\":1}}],[\"零值\",{\"1\":{\"45\":1}}],[\"零步\",{\"1\":{\"4\":2}}],[\"次方\",{\"1\":{\"45\":1}}],[\"^\",{\"1\":{\"45\":3,\"54\":9,\"69\":2,\"70\":12,\"77\":2}}],[\"7890\",{\"1\":{\"135\":3}}],[\"7\",{\"1\":{\"45\":1,\"67\":2,\"69\":2,\"87\":1,\"141\":1}}],[\"7.\",{\"1\":{\"15\":3}}],[\"取消\",{\"1\":{\"129\":1}}],[\"取模\",{\"1\":{\"79\":8,\"80\":1,\"83\":1}}],[\"取出\",{\"1\":{\"52\":1}}],[\"取\",{\"1\":{\"45\":1,\"70\":1}}],[\"取值\",{\"1\":{\"45\":1}}],[\"取舍\",{\"1\":{\"15\":1}}],[\"5901\",{\"1\":{\"140\":1}}],[\"5011721\",{\"1\":{\"139\":1}}],[\"50615\",{\"1\":{\"139\":1}}],[\"50\",{\"1\":{\"87\":1}}],[\"5\",{\"1\":{\"45\":1,\"50\":1,\"51\":1,\"52\":1,\"59\":1,\"67\":2,\"69\":1,\"74\":1,\"80\":1,\"89\":2,\"96\":1,\"119\":2}}],[\"5.0\",{\"1\":{\"118\":1}}],[\"5.\",{\"1\":{\"15\":1}}],[\"5.2.44\",{\"1\":{\"15\":1}}],[\"哈希\",{\"0\":{\"44\":1,\"45\":1,\"46\":1},\"1\":{\"45\":4,\"79\":10,\"80\":1,\"83\":2}}],[\"kex\",{\"0\":{\"138\":1,\"139\":1},\"1\":{\"138\":1,\"139\":3,\"140\":3}}],[\"key\",{\"1\":{\"79\":1,\"80\":1}}],[\"kali\",{\"0\":{\"136\":1,\"137\":1,\"141\":1},\"1\":{\"130\":2,\"131\":1,\"132\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":5}}],[\"koopa\",{\"1\":{\"127\":1}}],[\"konelinx\",{\"1\":{\"72\":1,\"78\":1}}],[\"km\",{\"1\":{\"76\":2}}],[\"k\",{\"1\":{\"43\":5,\"49\":1,\"54\":4,\"59\":10,\"70\":4,\"97\":4}}],[\"串\",{\"1\":{\"43\":1}}],[\"直至\",{\"1\":{\"43\":1}}],[\"直接\",{\"0\":{\"12\":1},\"1\":{\"13\":2,\"18\":1,\"21\":1,\"23\":1,\"26\":1,\"31\":1,\"36\":1,\"37\":1,\"80\":1,\"91\":3,\"100\":1,\"121\":1,\"125\":1,\"139\":1,\"140\":1}}],[\"收获\",{\"1\":{\"141\":1}}],[\"收缩\",{\"1\":{\"43\":1}}],[\"收到\",{\"1\":{\"16\":1}}],[\"向\",{\"1\":{\"43\":1,\"79\":1,\"86\":1}}],[\"边界\",{\"1\":{\"43\":2,\"79\":1,\"81\":1}}],[\"保护\",{\"1\":{\"120\":1}}],[\"保证\",{\"1\":{\"45\":3,\"111\":1}}],[\"保持\",{\"1\":{\"43\":1}}],[\"保存\",{\"1\":{\"36\":1}}],[\"失败\",{\"1\":{\"43\":1}}],[\"；\",{\"1\":{\"43\":1,\"79\":2}}],[\"各种\",{\"1\":{\"139\":2}}],[\"各有\",{\"1\":{\"79\":1}}],[\"各自\",{\"1\":{\"79\":1}}],[\"各\",{\"1\":{\"43\":1}}],[\"令\",{\"1\":{\"43\":1}}],[\"结束\",{\"1\":{\"87\":1}}],[\"结构\",{\"1\":{\"79\":1,\"82\":1}}],[\"结构化\",{\"1\":{\"79\":1}}],[\"结尾\",{\"1\":{\"43\":1}}],[\"结果\",{\"1\":{\"40\":1,\"77\":1,\"79\":1,\"80\":1}}],[\"标准\",{\"1\":{\"103\":1,\"111\":1,\"121\":1}}],[\"标记\",{\"1\":{\"51\":1,\"91\":1}}],[\"标\",{\"1\":{\"43\":1}}],[\"<\",{\"1\":{\"42\":6,\"43\":5,\"45\":40,\"50\":10,\"51\":9,\"52\":13,\"55\":7,\"59\":11,\"66\":1,\"67\":1,\"69\":12,\"70\":29,\"74\":2,\"75\":9,\"76\":1,\"77\":12,\"81\":2,\"87\":4,\"91\":19,\"97\":10,\"100\":8,\"112\":4,\"117\":1,\"118\":5,\"119\":8,\"121\":4,\"122\":1,\"126\":2,\"130\":5,\"133\":2}}],[\"则\",{\"1\":{\"42\":1,\"43\":2,\"67\":1,\"80\":1,\"112\":7}}],[\"动态\",{\"0\":{\"41\":1,\"42\":1,\"43\":1},\"1\":{\"82\":2,\"83\":1,\"109\":1}}],[\"每组\",{\"1\":{\"88\":1}}],[\"每行\",{\"1\":{\"87\":1,\"94\":1}}],[\"每一秒\",{\"1\":{\"86\":1}}],[\"每种\",{\"1\":{\"79\":1}}],[\"每\",{\"1\":{\"79\":1,\"93\":1}}],[\"每次\",{\"1\":{\"40\":1,\"43\":1,\"49\":1,\"82\":1,\"97\":1,\"122\":1}}],[\"每个\",{\"1\":{\"10\":1,\"71\":1,\"79\":1,\"87\":1}}],[\"遍历\",{\"0\":{\"40\":1,\"46\":1},\"1\":{\"40\":1}}],[\"zh\",{\"1\":{\"129\":1}}],[\"zhihu\",{\"1\":{\"38\":1,\"78\":1}}],[\"zhuanlan\",{\"1\":{\"38\":1}}],[\"zip\",{\"1\":{\"36\":1}}],[\"64\",{\"1\":{\"125\":2}}],[\"63433547\",{\"1\":{\"121\":1}}],[\"627\",{\"1\":{\"96\":1}}],[\"600\",{\"1\":{\"69\":1}}],[\"60\",{\"1\":{\"69\":1}}],[\"6\",{\"1\":{\"69\":1,\"141\":1}}],[\"655022723\",{\"1\":{\"38\":1}}],[\"6953555933733584904\",{\"1\":{\"38\":1}}],[\"6.8\",{\"1\":{\"32\":1}}],[\"损失\",{\"1\":{\"37\":1,\"122\":1}}],[\"措施\",{\"1\":{\"37\":1}}],[\"防护\",{\"1\":{\"37\":1}}],[\"务必\",{\"1\":{\"37\":1}}],[\"生命周期\",{\"0\":{\"113\":1},\"1\":{\"111\":1}}],[\"生日派对\",{\"1\":{\"99\":1}}],[\"生成\",{\"1\":{\"69\":2,\"71\":1,\"74\":1}}],[\"生\",{\"0\":{\"68\":1}}],[\"生产\",{\"1\":{\"37\":1}}],[\"生效\",{\"1\":{\"16\":1}}],[\"如何\",{\"1\":{\"79\":6,\"111\":2}}],[\"如下\",{\"1\":{\"74\":1}}],[\"如\",{\"1\":{\"37\":1,\"80\":3,\"81\":4,\"82\":4,\"83\":1,\"106\":1,\"108\":1,\"109\":1}}],[\"如果\",{\"1\":{\"15\":1,\"16\":4,\"23\":1,\"26\":1,\"31\":1,\"42\":1,\"43\":2,\"52\":1,\"91\":3,\"108\":1,\"112\":2,\"120\":1,\"125\":2,\"130\":1,\"139\":1}}],[\"方格\",{\"1\":{\"91\":1}}],[\"方块\",{\"1\":{\"87\":1}}],[\"方案\",{\"1\":{\"79\":1,\"82\":1}}],[\"方法\",{\"0\":{\"140\":1},\"1\":{\"79\":3,\"110\":2,\"115\":1,\"117\":1,\"118\":1,\"126\":1}}],[\"方面\",{\"1\":{\"37\":1}}],[\"方式\",{\"1\":{\"31\":2,\"71\":1,\"77\":1,\"91\":1,\"93\":2,\"109\":1,\"120\":1,\"132\":1}}],[\"警告\",{\"0\":{\"37\":1}}],[\"见\",{\"1\":{\"36\":1,\"132\":1}}],[\"主\",{\"1\":{\"140\":1}}],[\"主从复制\",{\"1\":{\"82\":1}}],[\"主要\",{\"0\":{\"102\":1},\"1\":{\"79\":1}}],[\"主机\",{\"1\":{\"36\":1,\"139\":1}}],[\"主页\",{\"0\":{\"0\":1}}],[\"耐心\",{\"1\":{\"36\":1}}],[\"初探\",{\"0\":{\"74\":1}}],[\"初次\",{\"1\":{\"36\":1}}],[\"初始状态\",{\"1\":{\"43\":1}}],[\"初始\",{\"1\":{\"36\":1}}],[\"初始化\",{\"0\":{\"121\":1},\"1\":{\"36\":1}}],[\"初始值\",{\"1\":{\"16\":1}}],[\"端口号\",{\"1\":{\"140\":1}}],[\"端口\",{\"1\":{\"36\":1,\"135\":1,\"140\":1}}],[\"访问\",{\"1\":{\"36\":2,\"79\":1,\"81\":1,\"82\":1,\"91\":1,\"122\":1,\"126\":1}}],[\"名称\",{\"1\":{\"130\":1}}],[\"名\",{\"1\":{\"36\":1,\"110\":1}}],[\"账号\",{\"1\":{\"36\":3}}],[\"索引\",{\"1\":{\"36\":1}}],[\"邮箱\",{\"1\":{\"36\":1}}],[\"@\",{\"1\":{\"36\":3,\"79\":1}}],[\"`\",{\"1\":{\"36\":2,\"112\":31,\"117\":2,\"121\":16,\"126\":2}}],[\"+\",{\"0\":{\"40\":1,\"45\":1,\"46\":1,\"52\":1},\"1\":{\"36\":2,\"42\":10,\"43\":10,\"45\":37,\"50\":9,\"51\":3,\"52\":10,\"54\":4,\"55\":4,\"59\":23,\"69\":8,\"70\":5,\"75\":1,\"77\":3,\"91\":14,\"93\":7,\"97\":21,\"100\":8,\"109\":3,\"110\":3,\"112\":4}}],[\"大意\",{\"0\":{\"86\":1,\"93\":1,\"99\":1}}],[\"大\",{\"1\":{\"79\":1}}],[\"大规模\",{\"1\":{\"75\":1}}],[\"大致\",{\"1\":{\"74\":1}}],[\"大量\",{\"1\":{\"69\":1,\"111\":1}}],[\"大端序\",{\"1\":{\"66\":1}}],[\"大于\",{\"1\":{\"45\":1}}],[\"大小\",{\"1\":{\"45\":1,\"67\":4,\"87\":1}}],[\"大概\",{\"1\":{\"36\":2,\"139\":1}}],[\"大部分\",{\"1\":{\"9\":1}}],[\"解释\",{\"1\":{\"79\":3}}],[\"解压\",{\"1\":{\"36\":1}}],[\"解决方案\",{\"1\":{\"135\":2}}],[\"解决\",{\"0\":{\"14\":1,\"16\":1,\"22\":1,\"140\":1},\"1\":{\"111\":1,\"120\":1,\"141\":1}}],[\"否则\",{\"1\":{\"36\":1,\"37\":1,\"112\":1}}],[\"目标\",{\"1\":{\"112\":3}}],[\"目的\",{\"1\":{\"79\":1}}],[\"目录\",{\"1\":{\"36\":2,\"125\":1,\"133\":1}}],[\"目前\",{\"1\":{\"35\":1,\"132\":1}}],[\"连接\",{\"0\":{\"132\":1,\"133\":1},\"1\":{\"35\":1,\"132\":1,\"139\":1,\"140\":1}}],[\"并发\",{\"1\":{\"83\":1}}],[\"并\",{\"1\":{\"35\":1,\"36\":1,\"70\":2,\"91\":1,\"100\":1,\"120\":1,\"141\":1}}],[\"退出\",{\"1\":{\"35\":1,\"36\":1}}],[\"rdt\",{\"1\":{\"139\":1}}],[\"raw\",{\"1\":{\"112\":3}}],[\"random\",{\"1\":{\"70\":1,\"78\":1}}],[\"rand\",{\"1\":{\"70\":3}}],[\"rchild\",{\"1\":{\"112\":5}}],[\"rs\",{\"1\":{\"112\":1,\"123\":1,\"127\":1}}],[\"rsp\",{\"1\":{\"74\":1}}],[\"rustfmt\",{\"1\":{\"125\":1}}],[\"rustup\",{\"1\":{\"125\":3}}],[\"rustcn\",{\"1\":{\"123\":1}}],[\"rust\",{\"0\":{\"111\":1,\"124\":1,\"125\":1,\"149\":1},\"1\":{\"111\":2,\"120\":1,\"121\":1,\"123\":1,\"125\":6}}],[\"running\",{\"1\":{\"141\":1}}],[\"run\",{\"1\":{\"36\":1,\"135\":2}}],[\"rbp\",{\"1\":{\"74\":4}}],[\"rbegin\",{\"1\":{\"45\":1}}],[\"right\",{\"1\":{\"45\":7,\"112\":15}}],[\"r\",{\"1\":{\"45\":5,\"59\":11,\"70\":5,\"112\":9,\"133\":2,\"139\":1}}],[\"rotr\",{\"1\":{\"70\":1}}],[\"rotl\",{\"1\":{\"70\":2}}],[\"role\",{\"1\":{\"35\":2}}],[\"roles\",{\"1\":{\"35\":2}}],[\"root\",{\"1\":{\"35\":2,\"112\":17,\"139\":1}}],[\"redhat\",{\"1\":{\"139\":1}}],[\"reddit\",{\"1\":{\"139\":1}}],[\"redis\",{\"1\":{\"82\":1}}],[\"reload\",{\"1\":{\"135\":1}}],[\"relative\",{\"1\":{\"117\":3}}],[\"releases\",{\"1\":{\"21\":1}}],[\"repeat\",{\"1\":{\"112\":1}}],[\"replace\",{\"1\":{\"112\":4}}],[\"removing\",{\"1\":{\"112\":1}}],[\"remove\",{\"1\":{\"112\":5}}],[\"receive\",{\"1\":{\"110\":4}}],[\"request\",{\"1\":{\"110\":10,\"135\":1}}],[\"require\",{\"1\":{\"21\":3}}],[\"ret\",{\"1\":{\"74\":1}}],[\"returns\",{\"1\":{\"121\":2}}],[\"return\",{\"1\":{\"42\":1,\"43\":1,\"45\":4,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"59\":3,\"69\":2,\"70\":9,\"74\":1,\"77\":5,\"91\":2,\"100\":1,\"112\":4}}],[\"rend\",{\"1\":{\"45\":1}}],[\"rev\",{\"1\":{\"45\":2}}],[\"resolv\",{\"1\":{\"135\":1}}],[\"researchgate\",{\"1\":{\"78\":1}}],[\"reset\",{\"1\":{\"18\":1}}],[\"result\",{\"0\":{\"117\":1,\"118\":1},\"1\":{\"69\":4,\"117\":1,\"118\":7,\"119\":4}}],[\"res\",{\"1\":{\"45\":3,\"117\":2}}],[\"restart\",{\"1\":{\"35\":1,\"135\":1}}],[\"ref\",{\"0\":{\"29\":1,\"38\":1,\"48\":1,\"72\":1,\"78\":1,\"84\":1,\"123\":1,\"127\":1,\"134\":1},\"1\":{\"121\":1,\"122\":1,\"123\":1}}],[\"rebuild\",{\"1\":{\"21\":1}}],[\"registry\",{\"1\":{\"31\":2,\"36\":2,\"135\":1}}],[\"regedit\",{\"1\":{\"16\":1}}],[\"regular\",{\"1\":{\"10\":1}}],[\"数组\",{\"1\":{\"97\":2}}],[\"数字\",{\"1\":{\"93\":1}}],[\"数值\",{\"1\":{\"82\":1}}],[\"数据量\",{\"1\":{\"79\":1}}],[\"数据分布\",{\"1\":{\"79\":3,\"80\":2,\"81\":1,\"83\":1}}],[\"数据\",{\"1\":{\"79\":7,\"80\":5,\"81\":7,\"82\":2,\"112\":4,\"120\":1}}],[\"数据库\",{\"1\":{\"35\":1,\"36\":1,\"79\":5,\"80\":1,\"82\":2}}],[\"数据库管理员\",{\"1\":{\"35\":1}}],[\"数列\",{\"0\":{\"75\":1}}],[\"数\",{\"1\":{\"67\":2,\"112\":1}}],[\"数量\",{\"1\":{\"27\":1,\"79\":2,\"80\":1,\"91\":1,\"93\":1,\"112\":1}}],[\"密码文件\",{\"1\":{\"139\":2}}],[\"密码\",{\"1\":{\"35\":1,\"36\":1,\"139\":2}}],[\"配置\",{\"0\":{\"129\":1},\"1\":{\"35\":1,\"36\":4,\"125\":1,\"128\":1,\"130\":1,\"135\":1,\"141\":1}}],[\"状态\",{\"1\":{\"35\":1,\"42\":1,\"43\":1,\"91\":1,\"141\":2}}],[\"来到\",{\"1\":{\"141\":1}}],[\"来\",{\"1\":{\"35\":1,\"69\":1,\"71\":1,\"79\":3,\"112\":1}}],[\"服务器\",{\"1\":{\"36\":1}}],[\"服务\",{\"1\":{\"35\":1,\"135\":1}}],[\"&\",{\"0\":{\"34\":2},\"1\":{\"39\":1,\"42\":6,\"43\":6,\"45\":24,\"55\":1,\"59\":2,\"69\":2,\"70\":6,\"91\":14,\"112\":16,\"117\":1,\"121\":8}}],[\"另\",{\"1\":{\"33\":1,\"69\":1,\"132\":1}}],[\"环境\",{\"0\":{\"32\":1},\"1\":{\"37\":1}}],[\"上午\",{\"1\":{\"141\":1}}],[\"上移\",{\"1\":{\"112\":2}}],[\"上下左右\",{\"1\":{\"86\":1}}],[\"上下文\",{\"1\":{\"8\":1,\"9\":1}}],[\"上述\",{\"1\":{\"71\":1}}],[\"上\",{\"1\":{\"31\":1,\"69\":1,\"91\":1,\"100\":1,\"106\":1,\"112\":5,\"125\":1}}],[\"特点\",{\"1\":{\"111\":1}}],[\"特定\",{\"1\":{\"108\":1,\"126\":1}}],[\"特征\",{\"1\":{\"81\":1}}],[\"特性\",{\"0\":{\"73\":1},\"1\":{\"105\":1,\"111\":1,\"125\":1}}],[\"特化\",{\"1\":{\"71\":1}}],[\"特别\",{\"1\":{\"70\":1,\"79\":1}}],[\"特地\",{\"1\":{\"31\":1}}],[\"特殊\",{\"1\":{\"5\":1,\"45\":2,\"141\":1}}],[\"过度\",{\"1\":{\"70\":1,\"77\":1}}],[\"过\",{\"1\":{\"69\":1}}],[\"过高\",{\"1\":{\"31\":1}}],[\"过程\",{\"1\":{\"30\":2,\"36\":1,\"52\":1,\"79\":2,\"128\":1}}],[\"采用\",{\"1\":{\"31\":1,\"77\":1,\"109\":1,\"110\":1}}],[\"高性能\",{\"1\":{\"111\":1}}],[\"高于\",{\"1\":{\"110\":1}}],[\"高效\",{\"1\":{\"79\":1,\"81\":2}}],[\"高\",{\"1\":{\"31\":1,\"69\":1,\"79\":1,\"80\":1,\"82\":1,\"83\":1}}],[\"高级\",{\"0\":{\"73\":1},\"1\":{\"9\":1}}],[\"支持\",{\"1\":{\"31\":1,\"82\":1,\"83\":1,\"108\":1,\"122\":1,\"129\":1}}],[\"二分\",{\"0\":{\"45\":1}}],[\"二维\",{\"0\":{\"42\":1}}],[\"二\",{\"1\":{\"31\":1}}],[\"而\",{\"1\":{\"31\":3,\"109\":1,\"110\":1,\"111\":1,\"139\":1}}],[\"而且\",{\"1\":{\"16\":1,\"79\":1,\"112\":1,\"139\":1}}],[\"旧\",{\"1\":{\"31\":1,\"81\":1}}],[\"仍然\",{\"1\":{\"31\":1}}],[\"已知\",{\"1\":{\"132\":1}}],[\"已\",{\"1\":{\"31\":2,\"125\":1}}],[\"已经\",{\"1\":{\"15\":1,\"16\":1,\"22\":1,\"30\":1,\"112\":1,\"141\":1}}],[\"镜像\",{\"1\":{\"31\":2,\"135\":1}}],[\"镜像文件\",{\"0\":{\"24\":1},\"1\":{\"27\":1}}],[\"淘宝\",{\"1\":{\"31\":2}}],[\"里\",{\"1\":{\"31\":1,\"139\":2}}],[\"8.8.8.8\",{\"1\":{\"135\":1}}],[\"86\",{\"1\":{\"48\":1}}],[\"88\",{\"1\":{\"48\":2}}],[\"87\",{\"1\":{\"48\":1}}],[\"80\",{\"1\":{\"48\":2}}],[\"8\",{\"1\":{\"45\":2,\"48\":3,\"67\":1,\"70\":2,\"77\":1,\"91\":1,\"141\":1}}],[\"85\",{\"1\":{\"31\":1,\"38\":1}}],[\"89\",{\"1\":{\"31\":1,\"38\":1,\"48\":1}}],[\"%\",{\"1\":{\"31\":6,\"38\":6,\"45\":18,\"48\":39,\"51\":1,\"67\":2,\"69\":1,\"70\":1,\"79\":1,\"80\":3}}],[\"#\",{\"0\":{\"119\":1},\"1\":{\"31\":1,\"35\":6,\"38\":1,\"45\":3,\"48\":2,\"50\":2,\"51\":2,\"52\":3,\"55\":1,\"59\":1,\"66\":1,\"67\":1,\"69\":1,\"70\":4,\"74\":1,\"75\":1,\"76\":1,\"77\":2,\"91\":1,\"97\":1,\"100\":1,\"112\":1,\"118\":1,\"119\":1,\"127\":1,\"141\":1}}],[\"相同\",{\"1\":{\"139\":1}}],[\"相当\",{\"1\":{\"111\":1}}],[\"相互\",{\"1\":{\"99\":1}}],[\"相乘\",{\"1\":{\"97\":2}}],[\"相减\",{\"1\":{\"45\":1}}],[\"相关\",{\"0\":{\"31\":1,\"116\":1},\"1\":{\"36\":2,\"79\":1,\"141\":1}}],[\"相对\",{\"1\":{\"11\":1}}],[\"坑时\",{\"1\":{\"111\":1}}],[\"坑\",{\"0\":{\"136\":1},\"1\":{\"30\":1}}],[\"踩\",{\"0\":{\"136\":1},\"1\":{\"30\":1}}],[\"容易\",{\"1\":{\"30\":1,\"82\":1,\"120\":2}}],[\"容量\",{\"1\":{\"27\":1,\"130\":1}}],[\"维护者\",{\"1\":{\"106\":1}}],[\"维护\",{\"1\":{\"30\":1,\"81\":1}}],[\"停止\",{\"1\":{\"30\":1}}],[\"系统文件\",{\"1\":{\"139\":1}}],[\"系统\",{\"0\":{\"102\":1},\"1\":{\"28\":1,\"82\":2,\"83\":2}}],[\"接触\",{\"1\":{\"128\":1}}],[\"接口\",{\"1\":{\"109\":1}}],[\"接近\",{\"1\":{\"52\":1}}],[\"接下来\",{\"1\":{\"28\":1,\"79\":1,\"87\":1}}],[\"接着\",{\"1\":{\"16\":1,\"26\":1}}],[\"走\",{\"1\":{\"28\":1,\"86\":1,\"87\":1,\"91\":3}}],[\"苹果\",{\"1\":{\"28\":1}}],[\"加\",{\"1\":{\"135\":1}}],[\"加密\",{\"1\":{\"71\":1,\"77\":1}}],[\"加密算法\",{\"0\":{\"71\":1},\"1\":{\"71\":1,\"77\":2}}],[\"加入\",{\"1\":{\"27\":1}}],[\"加上\",{\"1\":{\"21\":1}}],[\"挂载\",{\"1\":{\"27\":1,\"129\":1,\"131\":1}}],[\"虚拟\",{\"1\":{\"27\":1}}],[\"虚拟机\",{\"0\":{\"23\":1,\"27\":1,\"28\":1},\"1\":{\"15\":1,\"27\":6}}],[\"磁盘\",{\"1\":{\"27\":3}}],[\"桥接\",{\"1\":{\"27\":1}}],[\"网站\",{\"1\":{\"31\":2}}],[\"网络\",{\"1\":{\"27\":1}}],[\"网上\",{\"1\":{\"25\":1}}],[\"默认\",{\"1\":{\"125\":2,\"130\":3,\"135\":2,\"139\":1}}],[\"默认值\",{\"1\":{\"27\":3}}],[\"默认设置\",{\"1\":{\"27\":1}}],[\"内容\",{\"1\":{\"79\":1,\"141\":1}}],[\"内\",{\"1\":{\"75\":1,\"126\":2}}],[\"内存\",{\"0\":{\"66\":1},\"1\":{\"27\":1,\"66\":1,\"111\":1}}],[\"内核\",{\"1\":{\"27\":1}}],[\"情况\",{\"1\":{\"27\":1,\"70\":1,\"79\":3,\"120\":1,\"141\":2}}],[\"存入\",{\"1\":{\"80\":2,\"81\":2}}],[\"存储\",{\"1\":{\"79\":3,\"80\":1,\"81\":3,\"82\":2,\"97\":1}}],[\"存档\",{\"1\":{\"31\":1}}],[\"存放\",{\"1\":{\"27\":3}}],[\"存在\",{\"1\":{\"21\":1,\"31\":1,\"52\":1,\"79\":1,\"91\":1,\"93\":1,\"110\":1,\"112\":2}}],[\"操作系统\",{\"1\":{\"27\":1}}],[\"稍后\",{\"1\":{\"27\":1}}],[\"新\",{\"1\":{\"112\":1}}],[\"新增\",{\"1\":{\"112\":1}}],[\"新开\",{\"1\":{\"27\":1}}],[\"新建\",{\"1\":{\"27\":1,\"125\":2}}],[\"新版\",{\"1\":{\"15\":1}}],[\"创建\",{\"0\":{\"27\":1},\"1\":{\"27\":2,\"35\":3,\"112\":1}}],[\"忘关\",{\"1\":{\"26\":1}}],[\"关键字\",{\"0\":{\"126\":1},\"1\":{\"126\":1}}],[\"关键\",{\"1\":{\"111\":1}}],[\"关系\",{\"1\":{\"79\":2,\"82\":2,\"99\":1}}],[\"关心\",{\"1\":{\"70\":1}}],[\"关闭\",{\"1\":{\"26\":1,\"141\":2}}],[\"关了\",{\"1\":{\"26\":1}}],[\"关机\",{\"1\":{\"16\":1}}],[\"先去\",{\"1\":{\"141\":1}}],[\"先前\",{\"1\":{\"130\":1}}],[\"先导\",{\"1\":{\"130\":1}}],[\"先查\",{\"1\":{\"79\":1,\"82\":1}}],[\"先\",{\"1\":{\"26\":1,\"79\":1,\"83\":1}}],[\"仓库\",{\"1\":{\"26\":1,\"36\":1}}],[\"u32\",{\"1\":{\"121\":3}}],[\"url\",{\"1\":{\"110\":4}}],[\"util\",{\"1\":{\"103\":1}}],[\"uint32\",{\"1\":{\"70\":11}}],[\"u\",{\"1\":{\"66\":4}}],[\"unregister\",{\"1\":{\"130\":1}}],[\"unreachable\",{\"1\":{\"112\":1}}],[\"unwrap\",{\"1\":{\"117\":1,\"121\":4,\"122\":1}}],[\"unsafe\",{\"0\":{\"112\":1},\"1\":{\"112\":10,\"121\":1,\"123\":1}}],[\"unsigned\",{\"1\":{\"45\":1,\"69\":9}}],[\"un2\",{\"1\":{\"67\":2}}],[\"un1\",{\"1\":{\"67\":2}}],[\"union\",{\"0\":{\"65\":1},\"1\":{\"66\":2,\"67\":5}}],[\"unlocker\",{\"0\":{\"26\":1}}],[\"u64\",{\"1\":{\"45\":11}}],[\"usize\",{\"1\":{\"112\":3}}],[\"using\",{\"1\":{\"45\":2,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"59\":1,\"70\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"91\":1,\"97\":1,\"100\":1}}],[\"usr\",{\"1\":{\"36\":2,\"133\":1}}],[\"username\",{\"1\":{\"133\":2}}],[\"user\",{\"1\":{\"35\":2,\"36\":2,\"80\":1,\"81\":2,\"82\":1,\"130\":3}}],[\"use\",{\"1\":{\"21\":1,\"35\":2,\"121\":4,\"122\":2}}],[\"ubuntu2004\",{\"1\":{\"130\":1}}],[\"ubuntu\",{\"0\":{\"33\":1},\"1\":{\"31\":1,\"32\":1,\"38\":1,\"130\":6}}],[\"wont\",{\"1\":{\"141\":1}}],[\"working\",{\"1\":{\"139\":1}}],[\"workstation\",{\"1\":{\"25\":1,\"27\":1}}],[\"world\",{\"1\":{\"70\":1,\"77\":2,\"135\":2}}],[\"why\",{\"1\":{\"139\":1}}],[\"while\",{\"1\":{\"43\":2,\"45\":2,\"50\":1,\"51\":1,\"52\":1,\"91\":1,\"97\":1,\"100\":1,\"112\":1,\"135\":2}}],[\"wsl\",{\"0\":{\"128\":1,\"132\":1,\"133\":1,\"135\":1,\"136\":1,\"141\":1,\"150\":1},\"1\":{\"128\":1,\"129\":2,\"130\":16,\"131\":3,\"132\":1,\"135\":1,\"137\":1,\"139\":1,\"140\":1,\"141\":5}}],[\"wsl2\",{\"0\":{\"33\":1},\"1\":{\"31\":1,\"32\":1,\"37\":1,\"141\":1}}],[\"waiting\",{\"1\":{\"135\":1}}],[\"wall\",{\"1\":{\"91\":5}}],[\"warning\",{\"1\":{\"31\":1}}],[\"www\",{\"1\":{\"78\":2,\"134\":1,\"139\":1}}],[\"writings\",{\"1\":{\"48\":1}}],[\"with\",{\"1\":{\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"59\":1,\"91\":1,\"97\":1,\"100\":1,\"112\":6}}],[\"wiki\",{\"1\":{\"47\":1,\"48\":1}}],[\"winkex\",{\"1\":{\"139\":1}}],[\"win32\",{\"1\":{\"21\":1}}],[\"win11\",{\"1\":{\"16\":1}}],[\"winpcap\",{\"1\":{\"15\":1}}],[\"win\",{\"1\":{\"15\":1,\"26\":1,\"138\":1,\"140\":2}}],[\"windows\",{\"0\":{\"14\":1},\"1\":{\"16\":1,\"125\":2,\"128\":1,\"129\":1}}],[\"w\",{\"1\":{\"45\":1}}],[\"weixin\",{\"1\":{\"38\":1}}],[\"行号\",{\"1\":{\"110\":1}}],[\"行\",{\"1\":{\"25\":1,\"87\":1}}],[\"说明\",{\"1\":{\"79\":2,\"112\":1}}],[\"说\",{\"1\":{\"25\":1,\"139\":1}}],[\"宿主机\",{\"1\":{\"23\":1}}],[\"前者\",{\"1\":{\"112\":2}}],[\"前\",{\"1\":{\"91\":2,\"97\":1}}],[\"前闭\",{\"1\":{\"45\":2}}],[\"前缀\",{\"0\":{\"45\":1,\"46\":1},\"1\":{\"45\":3}}],[\"前面\",{\"1\":{\"23\":1,\"135\":1}}],[\"前置\",{\"0\":{\"15\":1}}],[\"写入\",{\"0\":{\"133\":1}}],[\"写法\",{\"1\":{\"110\":2}}],[\"写\",{\"1\":{\"23\":1,\"120\":1,\"125\":1}}],[\"辣\",{\"1\":{\"22\":1}}],[\"删除\",{\"1\":{\"22\":1,\"112\":1,\"130\":1,\"139\":1}}],[\"缓存\",{\"1\":{\"22\":1,\"82\":1}}],[\"yes\",{\"1\":{\"88\":1,\"90\":1,\"91\":1}}],[\"y\",{\"1\":{\"69\":1,\"91\":4,\"100\":3,\"119\":2}}],[\"ymfe\",{\"1\":{\"36\":3}}],[\"yapi123\",{\"1\":{\"35\":1,\"36\":1}}],[\"yapiadmin\",{\"1\":{\"35\":1,\"36\":1}}],[\"yapi\",{\"0\":{\"30\":1,\"36\":1},\"1\":{\"30\":1,\"31\":6,\"35\":4,\"36\":7,\"38\":3}}],[\"yarn\",{\"1\":{\"22\":4}}],[\"your\",{\"1\":{\"18\":1}}],[\"you\",{\"1\":{\"18\":1}}],[\"第五节\",{\"1\":{\"141\":1}}],[\"第三个\",{\"1\":{\"91\":1}}],[\"第三步\",{\"1\":{\"22\":1}}],[\"第一行\",{\"1\":{\"87\":1,\"125\":1}}],[\"第一个\",{\"1\":{\"79\":1}}],[\"第一步\",{\"1\":{\"22\":1}}],[\"第\",{\"1\":{\"49\":1,\"80\":2,\"86\":2,\"97\":2,\"130\":1}}],[\"第二个\",{\"1\":{\"79\":1}}],[\"第二步\",{\"1\":{\"22\":1}}],[\"第二章\",{\"0\":{\"3\":1}}],[\"tutorials\",{\"1\":{\"129\":1}}],[\"tys\",{\"1\":{\"126\":1}}],[\"typedef\",{\"1\":{\"45\":1,\"50\":1,\"51\":1,\"52\":1,\"59\":1,\"100\":1}}],[\"thread\",{\"1\":{\"121\":1}}],[\"the\",{\"0\":{\"85\":1,\"92\":1},\"1\":{\"112\":1,\"121\":6}}],[\"transpose\",{\"0\":{\"119\":1},\"1\":{\"119\":1}}],[\"tree\",{\"1\":{\"112\":13}}],[\"true\",{\"1\":{\"21\":2,\"36\":1,\"42\":5,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"91\":1,\"112\":7}}],[\"tt\",{\"1\":{\"100\":3}}],[\"test\",{\"1\":{\"118\":2}}],[\"tempter\",{\"0\":{\"85\":1}}],[\"template\",{\"1\":{\"69\":4,\"70\":4,\"75\":3,\"77\":2,\"78\":1}}],[\"tech\",{\"1\":{\"84\":1}}],[\"tar\",{\"1\":{\"130\":3}}],[\"tag\",{\"1\":{\"91\":5}}],[\"tables\",{\"0\":{\"98\":1}}],[\"table1\",{\"1\":{\"82\":1}}],[\"table3\",{\"1\":{\"82\":1}}],[\"table\",{\"1\":{\"82\":1}}],[\"taobao\",{\"1\":{\"31\":1}}],[\"toml\",{\"1\":{\"125\":1}}],[\"toolchain\",{\"1\":{\"125\":3}}],[\"to\",{\"1\":{\"117\":3,\"121\":5}}],[\"tojson\",{\"1\":{\"110\":6}}],[\"todo\",{\"1\":{\"56\":1,\"57\":1,\"58\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1}}],[\"top\",{\"1\":{\"39\":1}}],[\"tigervnc\",{\"1\":{\"139\":1,\"140\":3}}],[\"time\",{\"1\":{\"69\":8,\"70\":1}}],[\"timeout\",{\"1\":{\"36\":1,\"135\":1}}],[\"tie\",{\"1\":{\"50\":2,\"51\":2,\"52\":2,\"55\":2,\"59\":2,\"91\":2,\"97\":2,\"100\":2}}],[\"t\",{\"1\":{\"45\":1,\"70\":17,\"77\":3,\"86\":2,\"87\":2,\"91\":12,\"119\":2}}],[\"ts\",{\"0\":{\"22\":1}}],[\"点击\",{\"1\":{\"27\":1}}],[\"点\",{\"0\":{\"22\":1},\"1\":{\"79\":1}}],[\"入口\",{\"0\":{\"22\":1}}],[\"库中\",{\"1\":{\"121\":1}}],[\"库\",{\"0\":{\"22\":1,\"101\":1},\"1\":{\"68\":1,\"75\":1,\"79\":6,\"80\":4,\"81\":2,\"103\":1,\"111\":1,\"121\":1}}],[\"隐式\",{\"0\":{\"22\":1}}],[\"该父\",{\"1\":{\"112\":4}}],[\"该项\",{\"1\":{\"112\":1}}],[\"该\",{\"0\":{\"22\":1},\"1\":{\"27\":1,\"87\":1,\"112\":2}}],[\"程序员\",{\"1\":{\"75\":1}}],[\"程序\",{\"0\":{\"22\":1},\"1\":{\"31\":1,\"75\":1,\"110\":1}}],[\"程序设计\",{\"1\":{\"9\":1}}],[\"类型转换\",{\"0\":{\"117\":1,\"118\":1}}],[\"类型\",{\"0\":{\"22\":1,\"117\":1,\"118\":1},\"1\":{\"27\":4,\"82\":1}}],[\"类型定义\",{\"0\":{\"22\":1}}],[\"类似\",{\"1\":{\"16\":1,\"31\":1,\"132\":1}}],[\"找到\",{\"1\":{\"26\":1,\"27\":1,\"40\":1,\"79\":1,\"112\":10,\"139\":1,\"141\":1}}],[\"找个\",{\"1\":{\"25\":1,\"129\":1}}],[\"找\",{\"0\":{\"22\":1},\"1\":{\"139\":1}}],[\"daemon\",{\"1\":{\"135\":2}}],[\"data\",{\"1\":{\"45\":2,\"112\":35}}],[\"database\",{\"1\":{\"36\":1}}],[\"dfg\",{\"1\":{\"127\":1}}],[\"dfs\",{\"1\":{\"91\":5}}],[\"does\",{\"1\":{\"139\":1}}],[\"docker\",{\"0\":{\"135\":1},\"1\":{\"135\":8}}],[\"docs\",{\"1\":{\"125\":1}}],[\"double\",{\"1\":{\"76\":2}}],[\"drop\",{\"1\":{\"112\":3}}],[\"dword\",{\"1\":{\"74\":1}}],[\"d3601597248bed423daf1a7cf7bd9533\",{\"1\":{\"72\":1,\"78\":1}}],[\"dir\",{\"1\":{\"133\":1}}],[\"dirname\",{\"1\":{\"21\":1}}],[\"divisor\",{\"1\":{\"118\":3}}],[\"dividend\",{\"1\":{\"118\":2}}],[\"divide\",{\"1\":{\"118\":4}}],[\"display\",{\"1\":{\"112\":5}}],[\"dis\",{\"1\":{\"76\":1}}],[\"digittoint\",{\"1\":{\"69\":7}}],[\"d\",{\"1\":{\"45\":8,\"48\":1,\"67\":2,\"87\":1,\"89\":1,\"91\":1,\"131\":1,\"135\":1}}],[\"dp\",{\"1\":{\"42\":10,\"43\":13}}],[\"db0\",{\"1\":{\"82\":1}}],[\"db2\",{\"1\":{\"82\":1}}],[\"dbowner\",{\"1\":{\"35\":1}}],[\"db\",{\"0\":{\"146\":1},\"1\":{\"35\":4,\"36\":1,\"80\":2,\"82\":1,\"84\":1}}],[\"default\",{\"1\":{\"125\":2,\"130\":3}}],[\"define\",{\"1\":{\"70\":2,\"77\":1}}],[\"derive\",{\"1\":{\"112\":1,\"119\":1}}],[\"deepseek\",{\"1\":{\"79\":1}}],[\"decrypt\",{\"1\":{\"70\":4,\"77\":4}}],[\"description\",{\"1\":{\"39\":1}}],[\"details\",{\"1\":{\"38\":1}}],[\"dependencies\",{\"1\":{\"121\":1}}],[\"dependency\",{\"1\":{\"31\":1}}],[\"deploy\",{\"1\":{\"38\":1}}],[\"depth\",{\"1\":{\"36\":1}}],[\"devblogs\",{\"1\":{\"129\":1}}],[\"devide\",{\"1\":{\"84\":1}}],[\"deviceguard\",{\"1\":{\"16\":1}}],[\"devops\",{\"1\":{\"31\":1,\"38\":1}}],[\"denied\",{\"1\":{\"26\":1}}],[\"debug\",{\"1\":{\"21\":2,\"109\":2,\"110\":7,\"112\":2,\"119\":1}}],[\"jianshu\",{\"1\":{\"134\":1}}],[\"jcl\",{\"1\":{\"108\":1}}],[\"jack\",{\"1\":{\"122\":1}}],[\"jar\",{\"1\":{\"108\":1}}],[\"jakarta\",{\"1\":{\"108\":1}}],[\"java\",{\"0\":{\"101\":1,\"148\":1},\"1\":{\"103\":2,\"109\":1}}],[\"just\",{\"1\":{\"121\":2}}],[\"jul\",{\"0\":{\"103\":1},\"1\":{\"108\":1}}],[\"judge\",{\"1\":{\"45\":1}}],[\"juejin\",{\"1\":{\"38\":1}}],[\"j\",{\"1\":{\"42\":17,\"43\":9,\"45\":26,\"50\":4,\"51\":3,\"52\":4,\"55\":7,\"59\":4,\"91\":9,\"97\":12}}],[\"join\",{\"1\":{\"21\":1}}],[\"json\",{\"1\":{\"36\":6,\"135\":1}}],[\"js\",{\"1\":{\"21\":1,\"36\":1}}],[\"?\",{\"1\":{\"21\":1,\"39\":1,\"69\":1,\"74\":1,\"85\":1,\"91\":1,\"92\":1,\"98\":1,\"117\":1,\"139\":1}}],[\"icu9ks\",{\"1\":{\"139\":1}}],[\"ip\",{\"1\":{\"139\":1}}],[\"import\",{\"1\":{\"130\":2}}],[\"implementation\",{\"1\":{\"106\":1}}],[\"impl\",{\"1\":{\"70\":3,\"112\":3}}],[\"ir\",{\"1\":{\"126\":3,\"127\":1}}],[\"i32\",{\"1\":{\"112\":11,\"119\":2}}],[\"iii\",{\"0\":{\"92\":1}}],[\"ignatius\",{\"0\":{\"92\":1}}],[\"id\",{\"1\":{\"79\":4,\"80\":2,\"81\":4,\"82\":3,\"83\":1,\"109\":4}}],[\"it\",{\"1\":{\"55\":2,\"121\":2,\"141\":1}}],[\"isdebugenabled\",{\"1\":{\"109\":1,\"110\":1}}],[\"is\",{\"1\":{\"45\":1,\"112\":27,\"121\":4}}],[\"iso\",{\"0\":{\"24\":1},\"1\":{\"27\":1}}],[\"ios\",{\"1\":{\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"59\":1,\"91\":1,\"97\":1,\"100\":1}}],[\"iostream\",{\"1\":{\"50\":1,\"51\":1,\"52\":1,\"69\":1,\"70\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1}}],[\"io\",{\"1\":{\"31\":1,\"38\":2,\"123\":1,\"135\":1}}],[\"i\",{\"1\":{\"27\":1,\"42\":26,\"43\":28,\"45\":75,\"50\":12,\"51\":7,\"52\":12,\"55\":4,\"59\":12,\"66\":2,\"67\":2,\"70\":21,\"77\":13,\"91\":14,\"97\":10,\"100\":13}}],[\"ifndef\",{\"1\":{\"45\":1}}],[\"if\",{\"1\":{\"21\":1,\"42\":4,\"43\":3,\"45\":3,\"50\":2,\"51\":3,\"52\":2,\"55\":2,\"59\":4,\"66\":1,\"91\":9,\"100\":2,\"109\":1,\"110\":1,\"112\":27,\"118\":1}}],[\"init\",{\"1\":{\"121\":1}}],[\"initializes\",{\"1\":{\"121\":2}}],[\"indent\",{\"1\":{\"112\":7}}],[\"index\",{\"1\":{\"31\":1,\"38\":1,\"70\":6,\"77\":4}}],[\"inorder\",{\"1\":{\"112\":1}}],[\"input\",{\"0\":{\"87\":1,\"89\":1,\"94\":1,\"95\":1}}],[\"inline\",{\"1\":{\"70\":6,\"77\":2}}],[\"in\",{\"1\":{\"45\":1,\"70\":9,\"126\":2}}],[\"include\",{\"1\":{\"45\":1,\"50\":2,\"51\":2,\"52\":3,\"55\":1,\"59\":1,\"66\":1,\"67\":1,\"69\":1,\"70\":2,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"91\":1,\"97\":1,\"100\":1}}],[\"into\",{\"1\":{\"112\":2}}],[\"int\",{\"1\":{\"42\":5,\"43\":6,\"45\":23,\"50\":8,\"51\":8,\"52\":8,\"55\":5,\"59\":13,\"66\":2,\"67\":3,\"69\":11,\"70\":3,\"74\":3,\"75\":5,\"76\":1,\"77\":1,\"91\":13,\"97\":8,\"100\":10}}],[\"insert\",{\"1\":{\"112\":5,\"121\":6}}],[\"inside\",{\"1\":{\"31\":1}}],[\"install\",{\"1\":{\"21\":1,\"22\":1,\"26\":1,\"34\":2,\"35\":1,\"36\":2,\"38\":1,\"137\":1,\"138\":1}}],[\"inherit\",{\"1\":{\"21\":1}}],[\"info\",{\"1\":{\"18\":1}}],[\"]\",{\"1\":{\"21\":1,\"35\":2,\"42\":23,\"43\":18,\"45\":31,\"50\":10,\"51\":3,\"52\":7,\"55\":4,\"59\":16,\"67\":2,\"69\":7,\"70\":13,\"74\":1,\"77\":5,\"91\":24,\"97\":9,\"100\":8,\"112\":2,\"118\":1,\"119\":1,\"121\":1,\"125\":2,\"135\":1}}],[\"[\",{\"1\":{\"21\":1,\"35\":2,\"42\":23,\"43\":18,\"45\":31,\"50\":10,\"51\":3,\"52\":7,\"55\":4,\"59\":16,\"67\":2,\"69\":7,\"70\":13,\"74\":1,\"77\":5,\"91\":24,\"97\":9,\"100\":8,\"112\":2,\"118\":1,\"119\":1,\"121\":1,\"125\":2,\"135\":1}}],[\";\",{\"1\":{\"21\":8,\"42\":16,\"43\":17,\"45\":75,\"50\":24,\"51\":20,\"52\":24,\"55\":17,\"59\":30,\"66\":6,\"67\":8,\"69\":19,\"70\":30,\"74\":3,\"75\":8,\"76\":3,\"77\":14,\"91\":38,\"93\":5,\"97\":21,\"100\":24,\"109\":2,\"110\":6,\"112\":43,\"117\":3,\"118\":6,\"119\":4,\"121\":18,\"122\":6}}],[\"'\",{\"0\":{\"113\":1},\"1\":{\"21\":24,\"31\":2,\"45\":12,\"50\":2,\"51\":2,\"52\":2,\"55\":2,\"59\":2,\"69\":2,\"70\":2,\"77\":2,\"91\":16,\"97\":2,\"100\":2,\"121\":3}}],[\"包括\",{\"1\":{\"79\":2}}],[\"包\",{\"1\":{\"21\":1,\"31\":1,\"36\":1,\"108\":1}}],[\"包含\",{\"0\":{\"22\":1},\"1\":{\"4\":2,\"5\":1,\"87\":2,\"94\":1}}],[\"owned\",{\"1\":{\"117\":1}}],[\"or\",{\"1\":{\"117\":2,\"121\":1}}],[\"org\",{\"1\":{\"21\":1,\"31\":1,\"36\":1,\"47\":1,\"48\":1,\"69\":1,\"123\":1}}],[\"ok\",{\"1\":{\"117\":3,\"118\":6,\"119\":2}}],[\"opening\",{\"1\":{\"139\":1}}],[\"operator\",{\"1\":{\"70\":1,\"76\":1}}],[\"option\",{\"0\":{\"117\":1,\"118\":1,\"119\":1},\"1\":{\"112\":1,\"118\":6,\"119\":4}}],[\"o1\",{\"1\":{\"77\":1}}],[\"obfuscated1\",{\"1\":{\"77\":2}}],[\"obf\",{\"1\":{\"70\":3}}],[\"o0\",{\"1\":{\"69\":1}}],[\"oi\",{\"1\":{\"47\":1,\"48\":1}}],[\"output\",{\"0\":{\"88\":1,\"90\":1,\"96\":1}}],[\"out\",{\"1\":{\"45\":1,\"70\":5}}],[\"of\",{\"0\":{\"85\":1},\"1\":{\"31\":1,\"112\":4}}],[\"off\",{\"1\":{\"16\":3}}],[\"o\",{\"1\":{\"27\":1,\"40\":2,\"41\":1,\"45\":1,\"46\":1,\"47\":1,\"50\":1,\"51\":1,\"52\":1,\"54\":40}}],[\"oncelock\",{\"1\":{\"121\":4}}],[\"online\",{\"1\":{\"45\":1}}],[\"on\",{\"1\":{\"21\":1,\"141\":1}}],[\"os\",{\"1\":{\"21\":3,\"133\":1}}],[\"禁止\",{\"1\":{\"21\":1,\"120\":1}}],[\"安全性\",{\"1\":{\"111\":1,\"120\":1}}],[\"安全\",{\"1\":{\"37\":1,\"112\":1}}],[\"安全漏洞\",{\"1\":{\"21\":1}}],[\"安装程序\",{\"1\":{\"36\":1}}],[\"安装\",{\"0\":{\"23\":1,\"30\":1,\"32\":1,\"36\":1,\"137\":1,\"138\":1},\"1\":{\"15\":2,\"16\":1,\"27\":2,\"28\":2,\"30\":2,\"31\":1,\"36\":1,\"37\":2,\"125\":1,\"130\":3}}],[\"进一步\",{\"1\":{\"77\":1}}],[\"进制\",{\"1\":{\"45\":1}}],[\"进入\",{\"1\":{\"28\":1,\"35\":1,\"91\":1,\"139\":1,\"141\":1}}],[\"进度条\",{\"1\":{\"28\":2}}],[\"进程\",{\"1\":{\"21\":1}}],[\"进行\",{\"1\":{\"4\":1,\"108\":1}}],[\"子串\",{\"0\":{\"39\":1},\"1\":{\"40\":1,\"42\":1,\"43\":1}}],[\"子\",{\"1\":{\"21\":1,\"112\":6}}],[\"子树\",{\"1\":{\"11\":1,\"12\":1,\"13\":1,\"112\":1}}],[\"”\",{\"0\":{\"21\":1,\"22\":1},\"1\":{\"27\":1,\"28\":1,\"106\":2,\"139\":1,\"141\":1}}],[\"“\",{\"0\":{\"21\":1,\"22\":1},\"1\":{\"27\":1,\"28\":1,\"106\":2,\"139\":1,\"141\":1}}],[\"设计\",{\"1\":{\"79\":1,\"82\":1,\"106\":1}}],[\"设置\",{\"1\":{\"20\":1,\"27\":6}}],[\"设备\",{\"1\":{\"16\":2,\"139\":1}}],[\"其他\",{\"1\":{\"79\":1,\"109\":1,\"130\":1}}],[\"其中\",{\"1\":{\"69\":1,\"99\":1,\"135\":1}}],[\"其\",{\"1\":{\"20\":1,\"45\":1,\"111\":1}}],[\"其实\",{\"1\":{\"16\":1}}],[\"切换\",{\"0\":{\"20\":1},\"1\":{\"20\":3,\"31\":1,\"35\":2,\"108\":1,\"125\":2}}],[\"备忘录\",{\"0\":{\"19\":1,\"128\":1}}],[\"please\",{\"1\":{\"139\":1}}],[\"plan\",{\"1\":{\"39\":1}}],[\"platform\",{\"1\":{\"21\":1}}],[\"pku\",{\"1\":{\"127\":1}}],[\"pc\",{\"1\":{\"125\":2}}],[\"pid\",{\"1\":{\"85\":1,\"92\":1,\"98\":1}}],[\"php\",{\"1\":{\"85\":1,\"92\":1,\"98\":1}}],[\"pdai\",{\"1\":{\"79\":1,\"84\":1}}],[\"ptr\",{\"1\":{\"74\":1,\"112\":10}}],[\"pty\",{\"1\":{\"21\":1}}],[\"p2\",{\"1\":{\"45\":6}}],[\"p1\",{\"1\":{\"45\":6}}],[\"println\",{\"1\":{\"121\":4,\"122\":1}}],[\"printf\",{\"1\":{\"45\":2,\"66\":2,\"67\":2}}],[\"princess\",{\"0\":{\"92\":1}}],[\"pri\",{\"1\":{\"51\":3}}],[\"prime\",{\"1\":{\"50\":3,\"51\":4,\"52\":3}}],[\"private\",{\"1\":{\"45\":1,\"69\":1,\"70\":2,\"77\":2}}],[\"projects\",{\"1\":{\"140\":1}}],[\"proxy\",{\"1\":{\"135\":4}}],[\"profile\",{\"1\":{\"125\":1}}],[\"problem\",{\"0\":{\"114\":1}}],[\"problems\",{\"1\":{\"39\":1}}],[\"production\",{\"1\":{\"36\":1}}],[\"property\",{\"1\":{\"31\":1}}],[\"pro\",{\"1\":{\"25\":1}}],[\"process\",{\"1\":{\"21\":3,\"110\":2}}],[\"p\",{\"1\":{\"38\":1,\"45\":1,\"134\":1}}],[\"pop\",{\"1\":{\"45\":1,\"74\":1}}],[\"power\",{\"1\":{\"45\":1}}],[\"posts\",{\"0\":{\"143\":1}}],[\"post\",{\"1\":{\"38\":1,\"48\":1}}],[\"port\",{\"1\":{\"36\":3}}],[\"pwd\",{\"1\":{\"35\":2}}],[\"permission\",{\"1\":{\"26\":1}}],[\"pub\",{\"0\":{\"126\":1},\"1\":{\"112\":9,\"126\":5}}],[\"publication\",{\"1\":{\"78\":1}}],[\"public\",{\"1\":{\"42\":1,\"43\":1,\"45\":2,\"69\":1,\"126\":2}}],[\"push\",{\"1\":{\"21\":1,\"45\":3,\"51\":1,\"74\":1,\"112\":3,\"122\":1}}],[\"pull\",{\"1\":{\"18\":1}}],[\"partialeq\",{\"1\":{\"119\":1}}],[\"parent\",{\"1\":{\"112\":26}}],[\"panic\",{\"1\":{\"112\":1}}],[\"palindromic\",{\"1\":{\"39\":1,\"48\":1}}],[\"pass\",{\"1\":{\"36\":2}}],[\"passwd\",{\"1\":{\"20\":1}}],[\"password\",{\"1\":{\"20\":1,\"139\":1}}],[\"pathbuf\",{\"1\":{\"117\":1}}],[\"path\",{\"1\":{\"21\":3,\"117\":5}}],[\"ps\",{\"1\":{\"15\":1}}],[\"覆盖\",{\"1\":{\"18\":1,\"45\":1}}],[\"\\\"\",{\"0\":{\"22\":2},\"1\":{\"18\":2,\"27\":2,\"35\":16,\"36\":58,\"45\":12,\"66\":4,\"67\":4,\"70\":12,\"76\":2,\"77\":8,\"91\":10,\"109\":6,\"110\":12,\"112\":9,\"117\":2,\"118\":2,\"121\":30,\"122\":6,\"125\":16,\"135\":6}}],[\"种子\",{\"1\":{\"71\":1}}],[\"种\",{\"1\":{\"18\":1}}],[\"nightly\",{\"1\":{\"125\":2}}],[\"null\",{\"1\":{\"112\":39}}],[\"num\",{\"1\":{\"80\":2}}],[\"number\",{\"1\":{\"78\":1}}],[\"ny\",{\"1\":{\"91\":7}}],[\"nx\",{\"1\":{\"91\":7}}],[\"nxt\",{\"1\":{\"91\":3}}],[\"nlog\",{\"1\":{\"54\":3}}],[\"nlogn\",{\"1\":{\"45\":1,\"54\":8}}],[\"new\",{\"1\":{\"45\":4,\"112\":8,\"121\":3,\"122\":1}}],[\"net\",{\"1\":{\"38\":1,\"78\":1,\"135\":1,\"140\":1}}],[\"nameserver\",{\"1\":{\"135\":1}}],[\"names\",{\"1\":{\"122\":2}}],[\"namespace\",{\"1\":{\"45\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"59\":1,\"69\":1,\"70\":2,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"91\":1,\"97\":1,\"100\":1}}],[\"name\",{\"1\":{\"109\":4,\"117\":2}}],[\"nat\",{\"1\":{\"16\":1,\"27\":1}}],[\"n\",{\"1\":{\"40\":1,\"42\":7,\"45\":36,\"46\":1,\"47\":1,\"49\":1,\"50\":9,\"51\":8,\"52\":9,\"54\":25,\"55\":4,\"59\":9,\"67\":2,\"69\":9,\"70\":8,\"74\":4,\"75\":3,\"77\":1,\"86\":1,\"87\":3,\"91\":14,\"93\":1,\"94\":2,\"97\":4,\"99\":1,\"100\":7,\"112\":2}}],[\"n2\",{\"1\":{\"40\":1,\"41\":1}}],[\"nvm\",{\"1\":{\"31\":1}}],[\"npmmirror\",{\"1\":{\"31\":1,\"36\":1}}],[\"npm\",{\"0\":{\"34\":1},\"1\":{\"31\":1,\"32\":1,\"34\":1,\"36\":2}}],[\"no\",{\"1\":{\"88\":1,\"90\":1,\"91\":7,\"135\":1}}],[\"none\",{\"1\":{\"112\":2,\"118\":3}}],[\"non\",{\"1\":{\"31\":1}}],[\"nodesucc\",{\"1\":{\"112\":3}}],[\"node\",{\"1\":{\"21\":3,\"22\":1,\"31\":3,\"36\":1,\"112\":116}}],[\"nodejs\",{\"0\":{\"21\":1,\"34\":1},\"1\":{\"21\":1,\"32\":1,\"34\":1}}],[\"not\",{\"1\":{\"18\":1,\"139\":1,\"142\":1}}],[\":\",{\"0\":{\"21\":1,\"22\":1,\"40\":1,\"41\":1,\"44\":1,\"47\":1,\"50\":1,\"51\":1,\"52\":1},\"1\":{\"18\":1,\"21\":6,\"31\":5,\"35\":10,\"36\":24,\"38\":6,\"39\":1,\"42\":1,\"43\":1,\"45\":4,\"47\":1,\"48\":2,\"50\":2,\"51\":3,\"52\":2,\"55\":4,\"59\":2,\"69\":11,\"70\":13,\"72\":2,\"74\":2,\"75\":6,\"77\":7,\"78\":4,\"84\":1,\"85\":1,\"91\":3,\"92\":1,\"97\":2,\"98\":1,\"100\":2,\"109\":4,\"110\":6,\"112\":88,\"115\":2,\"117\":3,\"118\":8,\"119\":2,\"121\":23,\"122\":11,\"123\":3,\"126\":8,\"127\":1,\"129\":2,\"130\":3,\"134\":1,\"135\":7,\"139\":2,\"140\":1,\"141\":1}}],[\"报错\",{\"0\":{\"21\":1,\"22\":1},\"1\":{\"18\":1,\"21\":1,\"22\":1,\"31\":1,\"135\":1}}],[\"遇到\",{\"1\":{\"18\":1,\"26\":1,\"111\":1,\"139\":1}}],[\"试图\",{\"1\":{\"18\":1,\"139\":1}}],[\"mnt\",{\"1\":{\"131\":1}}],[\"myth\",{\"1\":{\"122\":1}}],[\"mysql\",{\"0\":{\"79\":1},\"1\":{\"79\":2,\"84\":2}}],[\"mutex\",{\"1\":{\"122\":3}}],[\"mut\",{\"1\":{\"112\":36,\"121\":2,\"122\":1}}],[\"mul\",{\"1\":{\"51\":3}}],[\"mp\",{\"1\":{\"91\":9}}],[\"ms\",{\"1\":{\"91\":2}}],[\"md\",{\"1\":{\"84\":1,\"123\":1}}],[\"microsoft\",{\"1\":{\"129\":2}}],[\"miri\",{\"1\":{\"125\":1}}],[\"mid\",{\"1\":{\"45\":5,\"59\":7}}],[\"minic\",{\"1\":{\"127\":1}}],[\"min\",{\"1\":{\"45\":1}}],[\"metaprograms\",{\"1\":{\"78\":1}}],[\"metastr\",{\"1\":{\"72\":1}}],[\"metastring1\",{\"1\":{\"77\":3}}],[\"metastring\",{\"1\":{\"70\":3}}],[\"metarandom\",{\"1\":{\"69\":4}}],[\"metarandomgenerator\",{\"1\":{\"69\":4}}],[\"memcpy\",{\"1\":{\"59\":1}}],[\"me\",{\"1\":{\"38\":1,\"139\":1}}],[\"merge\",{\"0\":{\"18\":1},\"1\":{\"18\":3,\"59\":4}}],[\"master\",{\"1\":{\"127\":1}}],[\"many\",{\"0\":{\"98\":1}}],[\"manacher\",{\"0\":{\"47\":1},\"1\":{\"47\":1}}],[\"make\",{\"1\":{\"70\":2,\"77\":1}}],[\"max\",{\"1\":{\"69\":1}}],[\"main\",{\"1\":{\"45\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"59\":1,\"66\":1,\"67\":1,\"69\":1,\"70\":1,\"74\":2,\"75\":1,\"76\":1,\"77\":1,\"91\":1,\"97\":1,\"100\":1,\"112\":1,\"121\":2,\"122\":1}}],[\"mail\",{\"1\":{\"36\":1}}],[\"mac\",{\"0\":{\"28\":1}}],[\"macos\",{\"0\":{\"23\":1,\"26\":1}}],[\"machine\",{\"1\":{\"16\":1}}],[\"mkdir\",{\"1\":{\"36\":1}}],[\"more\",{\"1\":{\"121\":1}}],[\"mov\",{\"1\":{\"74\":3}}],[\"mod\",{\"1\":{\"126\":1}}],[\"mod2\",{\"1\":{\"45\":7}}],[\"mod1\",{\"1\":{\"45\":7}}],[\"module\",{\"1\":{\"31\":1}}],[\"modules\",{\"1\":{\"22\":1}}],[\"mongod\",{\"1\":{\"35\":1}}],[\"mongodb\",{\"0\":{\"35\":1},\"1\":{\"32\":1,\"35\":8}}],[\"mongo\",{\"1\":{\"35\":1}}],[\"mb\",{\"1\":{\"27\":1}}],[\"m\",{\"1\":{\"18\":1,\"36\":2,\"54\":4,\"69\":7,\"86\":1,\"87\":3,\"91\":7,\"100\":3,\"121\":10}}],[\"命令行\",{\"1\":{\"31\":1}}],[\"命令\",{\"0\":{\"17\":1},\"1\":{\"36\":1,\"139\":1}}],[\"记得\",{\"1\":{\"79\":1}}],[\"记事本\",{\"1\":{\"27\":1}}],[\"记录\",{\"0\":{\"17\":1,\"124\":1,\"136\":1},\"1\":{\"30\":1,\"79\":1,\"106\":2,\"112\":1,\"120\":1,\"128\":1,\"141\":1}}],[\"记为\",{\"1\":{\"6\":1}}],[\"~\",{\"1\":{\"16\":1,\"22\":1,\"131\":1}}],[\"愉快\",{\"1\":{\"16\":1}}],[\"分离\",{\"1\":{\"81\":1,\"106\":1}}],[\"分段\",{\"1\":{\"79\":1}}],[\"分片\",{\"1\":{\"79\":10,\"80\":3,\"81\":2,\"82\":5,\"83\":3}}],[\"分为\",{\"1\":{\"79\":1}}],[\"分库\",{\"0\":{\"79\":1},\"1\":{\"79\":4,\"83\":1}}],[\"分表\",{\"0\":{\"79\":1},\"1\":{\"79\":3,\"83\":1}}],[\"分布\",{\"1\":{\"70\":1,\"79\":1}}],[\"分支\",{\"1\":{\"18\":3}}],[\"分别\",{\"1\":{\"16\":1,\"79\":3,\"87\":1,\"135\":1}}],[\"分析树\",{\"1\":{\"13\":1}}],[\"三种\",{\"1\":{\"79\":7}}],[\"三项\",{\"1\":{\"16\":1}}],[\"三个\",{\"1\":{\"16\":1,\"87\":2}}],[\"07\",{\"1\":{\"125\":1}}],[\"02\",{\"1\":{\"81\":1}}],[\"020\",{\"1\":{\"70\":2}}],[\"01\",{\"1\":{\"72\":1,\"81\":1}}],[\"010\",{\"1\":{\"70\":3}}],[\"030\",{\"1\":{\"70\":1}}],[\"0.0\",{\"1\":{\"118\":2}}],[\"0.82\",{\"1\":{\"52\":1}}],[\"0.75\",{\"1\":{\"51\":1}}],[\"0..\",{\"1\":{\"45\":1}}],[\"04\",{\"1\":{\"38\":3}}],[\"0\",{\"1\":{\"16\":2,\"27\":1,\"42\":4,\"43\":4,\"45\":23,\"50\":5,\"51\":4,\"52\":5,\"55\":5,\"59\":3,\"69\":7,\"70\":24,\"74\":1,\"75\":2,\"77\":5,\"79\":1,\"80\":2,\"87\":2,\"89\":3,\"91\":10,\"97\":7,\"100\":3,\"112\":3,\"121\":6}}],[\"修改\",{\"0\":{\"122\":1},\"1\":{\"16\":1,\"27\":1,\"35\":1,\"36\":2,\"109\":1,\"120\":1,\"133\":1,\"135\":1}}],[\"均衡\",{\"1\":{\"79\":1,\"83\":1}}],[\"均匀分布\",{\"1\":{\"79\":1,\"83\":1}}],[\"均匀\",{\"1\":{\"70\":1,\"79\":1,\"80\":2}}],[\"均\",{\"1\":{\"16\":1}}],[\"把\",{\"1\":{\"16\":1,\"26\":2,\"27\":1,\"36\":1,\"79\":1,\"133\":1}}],[\"然后\",{\"1\":{\"16\":1,\"20\":1,\"22\":1,\"36\":1,\"45\":1,\"79\":2,\"97\":1,\"112\":3,\"135\":1,\"140\":1,\"141\":1}}],[\"路\",{\"1\":{\"91\":1}}],[\"路径\",{\"1\":{\"16\":1,\"27\":1,\"130\":3}}],[\"路由器\",{\"1\":{\"16\":3}}],[\"\\\\\",{\"1\":{\"16\":5,\"45\":7,\"50\":1,\"51\":1,\"52\":1,\"67\":2,\"70\":2,\"77\":1,\"91\":4,\"97\":1,\"100\":1,\"112\":2,\"121\":8,\"130\":6}}],[\"于是\",{\"1\":{\"91\":1}}],[\"于\",{\"1\":{\"16\":1,\"75\":1,\"79\":2}}],[\"于子\",{\"1\":{\"11\":1}}],[\"跳\",{\"1\":{\"16\":1}}],[\"跳出\",{\"1\":{\"16\":1}}],[\"能够\",{\"1\":{\"106\":1}}],[\"能否\",{\"1\":{\"88\":1}}],[\"能\",{\"1\":{\"16\":2,\"28\":1,\"91\":1,\"126\":2,\"141\":1}}],[\"注册表\",{\"1\":{\"16\":1}}],[\"注意事项\",{\"0\":{\"110\":1}}],[\"注意\",{\"1\":{\"16\":1,\"26\":1,\"50\":1,\"70\":2,\"74\":1,\"77\":1,\"79\":2,\"133\":1}}],[\"打开\",{\"1\":{\"16\":1,\"27\":2,\"28\":1,\"87\":1}}],[\"家庭版\",{\"1\":{\"16\":1}}],[\"重用\",{\"1\":{\"106\":1}}],[\"重点\",{\"1\":{\"79\":1}}],[\"重复\",{\"1\":{\"51\":1,\"91\":1}}],[\"重新分配\",{\"1\":{\"79\":1}}],[\"重新\",{\"1\":{\"22\":1,\"26\":1,\"80\":1,\"108\":1,\"109\":1}}],[\"重新启动\",{\"1\":{\"16\":1,\"35\":1}}],[\"重启\",{\"1\":{\"16\":3,\"135\":1,\"141\":2}}],[\"再次\",{\"1\":{\"139\":1}}],[\"再\",{\"1\":{\"16\":2,\"23\":1,\"79\":2,\"80\":1,\"83\":1,\"97\":1,\"112\":1,\"135\":1,\"141\":1}}],[\"后台\",{\"1\":{\"141\":1}}],[\"后面\",{\"1\":{\"141\":1}}],[\"后续\",{\"0\":{\"121\":1}}],[\"后者\",{\"1\":{\"112\":2}}],[\"后缀\",{\"0\":{\"76\":1},\"1\":{\"70\":1,\"77\":1}}],[\"后闭\",{\"1\":{\"45\":2}}],[\"后果自负\",{\"1\":{\"37\":1}}],[\"后会\",{\"1\":{\"28\":1}}],[\"后\",{\"1\":{\"16\":2,\"35\":1,\"36\":2,\"130\":1,\"139\":1,\"140\":1,\"141\":3}}],[\"执行\",{\"1\":{\"16\":1,\"21\":1,\"75\":2,\"110\":2,\"135\":1,\"140\":1}}],[\"值\",{\"1\":{\"16\":2,\"45\":3,\"71\":1,\"77\":1,\"79\":1,\"80\":1}}],[\"项目\",{\"1\":{\"30\":1,\"108\":1,\"125\":3,\"126\":1}}],[\"项\",{\"1\":{\"16\":3,\"112\":3,\"130\":1}}],[\"how\",{\"0\":{\"98\":1}}],[\"host\",{\"1\":{\"36\":1}}],[\"hdu\",{\"1\":{\"85\":1,\"92\":1,\"98\":1}}],[\"hdoj\",{\"0\":{\"85\":1,\"92\":1,\"98\":1,\"147\":1}}],[\"hi\",{\"1\":{\"69\":3}}],[\"h22\",{\"1\":{\"45\":1}}],[\"h21\",{\"1\":{\"45\":1}}],[\"h2\",{\"1\":{\"45\":6}}],[\"h12\",{\"1\":{\"45\":1}}],[\"h11\",{\"1\":{\"45\":1}}],[\"h1\",{\"1\":{\"45\":10}}],[\"h\",{\"1\":{\"45\":1,\"55\":1,\"59\":1,\"66\":1,\"67\":1,\"70\":3,\"91\":1,\"97\":1,\"100\":1}}],[\"html\",{\"1\":{\"31\":1,\"38\":1,\"84\":1,\"123\":1}}],[\"https\",{\"1\":{\"21\":1,\"31\":3,\"36\":3,\"38\":6,\"39\":1,\"47\":1,\"48\":2,\"72\":2,\"78\":4,\"84\":1,\"121\":1,\"123\":3,\"127\":1,\"129\":2,\"134\":1,\"135\":2,\"139\":2,\"140\":1,\"141\":1}}],[\"http\",{\"1\":{\"16\":1,\"36\":1,\"85\":1,\"92\":1,\"98\":1,\"135\":4}}],[\"help\",{\"1\":{\"139\":1}}],[\"helper\",{\"1\":{\"70\":3,\"77\":2,\"141\":1}}],[\"hello\",{\"1\":{\"70\":1,\"77\":2,\"126\":1,\"135\":2}}],[\"hellosean1025\",{\"1\":{\"31\":1,\"38\":1}}],[\"headers\",{\"1\":{\"135\":1}}],[\"head\",{\"1\":{\"18\":1}}],[\"hashmap\",{\"1\":{\"121\":19,\"126\":2}}],[\"hash2\",{\"1\":{\"45\":11}}],[\"hash1\",{\"1\":{\"45\":11}}],[\"hash\",{\"0\":{\"70\":1},\"1\":{\"45\":4,\"48\":1,\"70\":8,\"79\":1,\"80\":3}}],[\"hard\",{\"1\":{\"18\":1}}],[\"have\",{\"1\":{\"18\":1}}],[\"hkey\",{\"1\":{\"16\":1}}],[\"hypervisorlaunchtype\",{\"1\":{\"16\":2}}],[\"crate\",{\"1\":{\"126\":3,\"141\":3}}],[\"crates\",{\"1\":{\"123\":2}}],[\"createuser\",{\"1\":{\"35\":2}}],[\"ceki\",{\"1\":{\"109\":1}}],[\"c1\",{\"1\":{\"97\":6}}],[\"c2\",{\"1\":{\"97\":5}}],[\"cstdint\",{\"1\":{\"70\":1}}],[\"csdn\",{\"1\":{\"38\":1}}],[\"c\",{\"0\":{\"65\":1},\"1\":{\"48\":3,\"66\":2,\"67\":2,\"69\":2,\"70\":4,\"77\":5,\"78\":1,\"130\":1}}],[\"cin\",{\"1\":{\"45\":1,\"50\":3,\"51\":3,\"52\":3,\"55\":3,\"59\":3,\"91\":3,\"97\":2,\"100\":4}}],[\"circular\",{\"1\":{\"31\":1}}],[\"chown\",{\"1\":{\"133\":2}}],[\"channel\",{\"1\":{\"125\":1}}],[\"char\",{\"1\":{\"66\":1,\"67\":1,\"69\":2,\"70\":16,\"77\":10,\"91\":1}}],[\"ch\",{\"1\":{\"45\":1}}],[\"child\",{\"1\":{\"21\":1,\"112\":5}}],[\"c++\",{\"0\":{\"68\":1,\"73\":1,\"77\":1},\"1\":{\"45\":1,\"55\":1,\"59\":1,\"68\":2,\"69\":2,\"72\":1,\"75\":2,\"91\":1,\"97\":1,\"100\":1,\"120\":1}}],[\"cnt\",{\"1\":{\"50\":2,\"52\":2,\"100\":3}}],[\"cn\",{\"1\":{\"38\":1,\"39\":1,\"85\":1,\"92\":1,\"98\":1,\"129\":1}}],[\"cpp\",{\"0\":{\"145\":1}}],[\"cp\",{\"1\":{\"36\":1}}],[\"cpu\",{\"1\":{\"23\":1}}],[\"cd\",{\"1\":{\"36\":3}}],[\"canceled\",{\"1\":{\"135\":1}}],[\"caller\",{\"1\":{\"110\":1}}],[\"cast\",{\"1\":{\"70\":2,\"77\":1}}],[\"cat\",{\"1\":{\"31\":1}}],[\"cache\",{\"1\":{\"22\":1}}],[\"cacheddrtmauthindex\",{\"1\":{\"16\":1}}],[\"client\",{\"1\":{\"135\":1}}],[\"clippy\",{\"1\":{\"125\":1}}],[\"class\",{\"1\":{\"42\":1,\"43\":1,\"45\":2}}],[\"clone\",{\"1\":{\"26\":1,\"36\":3}}],[\"clean\",{\"1\":{\"22\":1}}],[\"cwd\",{\"1\":{\"21\":1}}],[\"collections\",{\"1\":{\"121\":2}}],[\"column\",{\"1\":{\"70\":2}}],[\"core\",{\"1\":{\"106\":1}}],[\"count\",{\"1\":{\"112\":7}}],[\"counter\",{\"1\":{\"69\":2,\"70\":1}}],[\"course\",{\"1\":{\"112\":1,\"123\":1}}],[\"cout\",{\"1\":{\"45\":5,\"50\":2,\"51\":2,\"52\":2,\"55\":2,\"59\":2,\"70\":2,\"77\":1,\"91\":5,\"97\":2,\"100\":2}}],[\"components\",{\"1\":{\"125\":1}}],[\"computed\",{\"1\":{\"121\":2}}],[\"comments\",{\"1\":{\"139\":1}}],[\"commandline\",{\"1\":{\"129\":1}}],[\"commons\",{\"1\":{\"108\":1}}],[\"common\",{\"0\":{\"108\":1},\"1\":{\"108\":1,\"109\":1}}],[\"commit\",{\"1\":{\"18\":2}}],[\"com\",{\"1\":{\"31\":1,\"36\":7,\"38\":1,\"72\":1,\"78\":3,\"121\":1,\"123\":1,\"127\":1,\"129\":2,\"134\":1,\"139\":2,\"141\":1}}],[\"cookie\",{\"0\":{\"22\":2}}],[\"code\",{\"1\":{\"21\":2}}],[\"conf\",{\"1\":{\"135\":2}}],[\"configuring\",{\"1\":{\"129\":1}}],[\"config\",{\"1\":{\"36\":6,\"130\":3}}],[\"connection\",{\"1\":{\"135\":1}}],[\"constexpr\",{\"0\":{\"74\":1},\"1\":{\"45\":1,\"59\":1,\"69\":11,\"70\":13,\"74\":2,\"75\":4,\"77\":4}}],[\"const\",{\"1\":{\"21\":5,\"45\":3,\"50\":1,\"51\":1,\"52\":1,\"69\":2,\"70\":12,\"77\":8,\"91\":1,\"100\":1,\"112\":1}}],[\"concluded\",{\"1\":{\"18\":1}}],[\"continue\",{\"1\":{\"50\":1,\"52\":1,\"91\":3}}],[\"control\",{\"1\":{\"16\":1}}],[\"controlset001\",{\"1\":{\"16\":1}}],[\"context\",{\"1\":{\"8\":1,\"9\":1}}],[\"cmd\",{\"1\":{\"16\":2,\"21\":1,\"26\":1,\"125\":1}}],[\"身份\",{\"1\":{\"16\":1,\"26\":1}}],[\"下未\",{\"1\":{\"141\":1}}],[\"下降\",{\"1\":{\"106\":1}}],[\"下\",{\"1\":{\"36\":1,\"45\":1,\"70\":2,\"75\":1,\"79\":1,\"91\":1,\"120\":1,\"139\":3,\"141\":1}}],[\"下面\",{\"1\":{\"27\":1,\"66\":1,\"139\":1}}],[\"下来\",{\"1\":{\"26\":1}}],[\"下去\",{\"1\":{\"16\":2}}],[\"下载安装\",{\"1\":{\"31\":1}}],[\"下载\",{\"0\":{\"24\":1,\"25\":1},\"1\":{\"15\":2,\"22\":1,\"24\":1,\"26\":1,\"27\":1,\"36\":1}}],[\"电脑\",{\"1\":{\"16\":2}}],[\"照着\",{\"1\":{\"16\":1,\"141\":1}}],[\"帮助\",{\"1\":{\"16\":1,\"75\":1,\"79\":2,\"139\":1}}],[\"根据\",{\"1\":{\"16\":1,\"69\":1,\"79\":3}}],[\"请\",{\"1\":{\"16\":1,\"36\":3,\"37\":1}}],[\"绕路\",{\"1\":{\"91\":1}}],[\"绕\",{\"1\":{\"16\":1}}],[\"发现\",{\"1\":{\"16\":1,\"22\":1,\"139\":2,\"141\":2}}],[\"时开\",{\"1\":{\"86\":1}}],[\"时会\",{\"1\":{\"69\":1,\"108\":1,\"122\":1}}],[\"时候\",{\"1\":{\"67\":1}}],[\"时间段\",{\"1\":{\"79\":1,\"81\":1}}],[\"时间\",{\"1\":{\"40\":2,\"41\":1,\"45\":1,\"46\":1,\"47\":1,\"50\":1,\"51\":2,\"54\":1,\"75\":1,\"79\":2,\"81\":2,\"83\":2,\"87\":1,\"91\":1}}],[\"时\",{\"0\":{\"68\":1,\"77\":1,\"121\":1,\"122\":1},\"1\":{\"16\":1,\"18\":1,\"68\":1,\"69\":1,\"75\":1,\"79\":5,\"80\":2,\"82\":1,\"91\":1,\"106\":1,\"109\":2,\"128\":1,\"130\":1,\"139\":1}}],[\"做好\",{\"1\":{\"37\":1}}],[\"做\",{\"1\":{\"16\":1,\"79\":1,\"110\":1,\"128\":1,\"141\":1}}],[\"做出\",{\"1\":{\"15\":1}}],[\"笔者\",{\"1\":{\"16\":1,\"37\":1,\"139\":1}}],[\"笔记本\",{\"1\":{\"37\":1,\"141\":1}}],[\"笔记\",{\"0\":{\"2\":1,\"111\":1}}],[\"也许\",{\"1\":{\"112\":1}}],[\"也\",{\"1\":{\"16\":2,\"79\":1,\"91\":2,\"104\":1,\"106\":1,\"108\":1,\"110\":3,\"111\":1,\"120\":1,\"121\":1,\"139\":2}}],[\"fbcdccf3e8178a9039329562c0de0fd01a3372fb\",{\"1\":{\"123\":1}}],[\"functypemapcell\",{\"1\":{\"126\":1}}],[\"function\",{\"1\":{\"21\":1}}],[\"func\",{\"1\":{\"126\":1}}],[\"further\",{\"1\":{\"121\":2}}],[\"f64\",{\"1\":{\"118\":7}}],[\"found\",{\"1\":{\"142\":1}}],[\"foo\",{\"1\":{\"117\":1,\"121\":2}}],[\"format\",{\"1\":{\"112\":1,\"117\":1}}],[\"for\",{\"1\":{\"42\":3,\"43\":2,\"45\":5,\"50\":3,\"51\":2,\"52\":3,\"55\":4,\"59\":4,\"70\":2,\"77\":1,\"78\":1,\"91\":3,\"97\":5,\"100\":3,\"109\":1,\"112\":1,\"117\":1,\"121\":4,\"128\":1,\"135\":1}}],[\"fn\",{\"1\":{\"112\":20,\"117\":1,\"118\":2,\"121\":3,\"122\":1,\"126\":1}}],[\"first\",{\"1\":{\"121\":2}}],[\"filter\",{\"1\":{\"105\":1}}],[\"file\",{\"1\":{\"70\":4,\"117\":1,\"139\":1}}],[\"find\",{\"1\":{\"100\":4,\"112\":7}}],[\"fibonacci\",{\"1\":{\"75\":6}}],[\"freopen\",{\"1\":{\"45\":2}}],[\"free\",{\"1\":{\"9\":1}}],[\"fromnode\",{\"1\":{\"112\":8}}],[\"from\",{\"1\":{\"36\":1,\"112\":1,\"117\":1,\"118\":1,\"122\":1}}],[\"fa\",{\"1\":{\"100\":8}}],[\"facade\",{\"0\":{\"107\":1},\"1\":{\"106\":1,\"109\":1}}],[\"fac\",{\"1\":{\"74\":3}}],[\"false\",{\"1\":{\"42\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":2,\"59\":1,\"91\":2,\"97\":1,\"100\":1,\"112\":5}}],[\"fatal\",{\"1\":{\"18\":1}}],[\"failed\",{\"0\":{\"18\":1},\"1\":{\"18\":1,\"117\":1,\"139\":1}}],[\"fw\",{\"1\":{\"16\":1}}],[\"为了\",{\"1\":{\"31\":1,\"79\":1,\"109\":1,\"122\":1}}],[\"为\",{\"0\":{\"117\":1,\"118\":1},\"1\":{\"16\":4,\"20\":1,\"31\":1,\"36\":1,\"40\":1,\"42\":1,\"43\":1,\"45\":1,\"91\":1,\"112\":1,\"118\":1,\"119\":1,\"125\":1,\"130\":1,\"133\":1,\"135\":2}}],[\"为准\",{\"1\":{\"15\":1}}],[\"编码\",{\"1\":{\"69\":2}}],[\"编程\",{\"0\":{\"75\":1},\"1\":{\"68\":1,\"75\":2}}],[\"编辑\",{\"1\":{\"16\":1}}],[\"编辑器\",{\"1\":{\"16\":1}}],[\"编号\",{\"1\":{\"16\":1}}],[\"编译器\",{\"1\":{\"70\":1,\"77\":1}}],[\"编译\",{\"0\":{\"2\":1,\"68\":1,\"77\":1},\"1\":{\"36\":1,\"68\":1,\"69\":3,\"74\":1,\"75\":2,\"77\":2,\"108\":1,\"109\":1}}],[\"会\",{\"1\":{\"16\":2,\"18\":1,\"22\":1,\"26\":1,\"31\":1,\"36\":3,\"109\":1,\"110\":3,\"139\":2,\"141\":1}}],[\"会员\",{\"1\":{\"15\":1}}],[\"就算\",{\"1\":{\"91\":1}}],[\"就是\",{\"1\":{\"45\":1,\"79\":2,\"111\":1,\"112\":3}}],[\"就行\",{\"1\":{\"23\":1}}],[\"就\",{\"1\":{\"16\":2,\"22\":1,\"25\":1,\"28\":1,\"36\":1,\"108\":1,\"112\":1,\"141\":2}}],[\"尝试\",{\"1\":{\"16\":1,\"23\":1,\"31\":1,\"135\":2,\"139\":2}}],[\"似乎\",{\"1\":{\"16\":1}}],[\"顺利\",{\"1\":{\"135\":1}}],[\"顺便\",{\"1\":{\"16\":1}}],[\"顺序\",{\"1\":{\"15\":1,\"40\":1}}],[\"还有\",{\"1\":{\"141\":1}}],[\"还是\",{\"1\":{\"16\":2,\"66\":1}}],[\"还\",{\"1\":{\"16\":2,\"52\":1,\"79\":1,\"141\":1}}],[\"完后\",{\"1\":{\"141\":1}}],[\"完全\",{\"1\":{\"120\":1}}],[\"完全相同\",{\"1\":{\"15\":1}}],[\"完备\",{\"1\":{\"75\":1}}],[\"完成\",{\"1\":{\"16\":4,\"27\":1,\"28\":1,\"36\":1}}],[\"完\",{\"1\":{\"16\":2,\"28\":1}}],[\"地址\",{\"1\":{\"135\":1}}],[\"地说\",{\"1\":{\"106\":1}}],[\"地理位置\",{\"1\":{\"82\":1}}],[\"地\",{\"1\":{\"16\":2,\"125\":1}}],[\"当天\",{\"1\":{\"141\":1}}],[\"当然\",{\"1\":{\"120\":1,\"122\":1}}],[\"当前\",{\"1\":{\"40\":1,\"43\":1,\"97\":1,\"110\":1,\"112\":2,\"130\":1}}],[\"当\",{\"1\":{\"16\":1,\"67\":1}}],[\"错误处理\",{\"0\":{\"116\":1}}],[\"错误\",{\"0\":{\"16\":1},\"1\":{\"16\":1,\"31\":1,\"111\":1}}],[\"赘述\",{\"1\":{\"15\":1,\"33\":1}}],[\"看到\",{\"1\":{\"28\":1}}],[\"看\",{\"1\":{\"15\":1,\"16\":2}}],[\"之后\",{\"1\":{\"26\":1,\"28\":1,\"91\":1,\"104\":1,\"121\":1,\"139\":1,\"141\":1}}],[\"之前\",{\"1\":{\"26\":1,\"91\":1,\"112\":1,\"128\":1,\"141\":1}}],[\"之间\",{\"1\":{\"15\":1,\"79\":1}}],[\"之一\",{\"1\":{\"10\":1,\"87\":1}}],[\"遗憾\",{\"1\":{\"15\":1}}],[\"很多\",{\"1\":{\"135\":1}}],[\"很\",{\"1\":{\"15\":1,\"91\":2,\"120\":2}}],[\"了\",{\"1\":{\"15\":2,\"16\":2,\"21\":1,\"23\":1,\"26\":1,\"27\":1,\"36\":1,\"51\":2,\"70\":1,\"77\":2,\"79\":3,\"87\":1,\"91\":3,\"104\":1,\"105\":1,\"106\":2,\"109\":2,\"111\":1,\"130\":1,\"135\":1,\"139\":2,\"141\":5}}],[\"肯定\",{\"1\":{\"15\":1}}],[\"那样\",{\"1\":{\"120\":1}}],[\"那\",{\"0\":{\"75\":1}}],[\"那请\",{\"1\":{\"16\":1}}],[\"那么\",{\"1\":{\"15\":1,\"112\":1}}],[\"那些\",{\"1\":{\"15\":1}}],[\"那棵\",{\"1\":{\"13\":1}}],[\"开放\",{\"1\":{\"140\":1}}],[\"开启\",{\"1\":{\"139\":1,\"141\":1}}],[\"开源\",{\"1\":{\"108\":1}}],[\"开销\",{\"1\":{\"82\":1,\"109\":1,\"110\":1}}],[\"开发者\",{\"1\":{\"109\":1}}],[\"开发\",{\"1\":{\"75\":1,\"105\":1,\"106\":1,\"109\":2,\"111\":1}}],[\"开始\",{\"1\":{\"43\":1,\"91\":1,\"141\":2}}],[\"开始符号\",{\"1\":{\"4\":1}}],[\"开机\",{\"1\":{\"16\":1}}],[\"开头\",{\"1\":{\"15\":1}}],[\"教程\",{\"0\":{\"30\":1},\"1\":{\"15\":2}}],[\"以上\",{\"1\":{\"70\":1,\"125\":1}}],[\"以及\",{\"1\":{\"28\":1,\"79\":3,\"125\":1}}],[\"以\",{\"1\":{\"15\":1,\"16\":1,\"26\":1,\"40\":1,\"87\":1}}],[\"以下内容\",{\"1\":{\"27\":1}}],[\"以下\",{\"1\":{\"10\":1,\"28\":1,\"31\":1,\"43\":1,\"67\":1,\"87\":1,\"110\":1,\"120\":1,\"133\":1}}],[\"我们\",{\"1\":{\"35\":1,\"69\":1,\"70\":1,\"71\":1,\"112\":2,\"139\":1}}],[\"我\",{\"1\":{\"15\":1,\"16\":2,\"24\":1,\"25\":1,\"27\":3,\"31\":1,\"33\":1,\"69\":1,\"79\":4,\"132\":1,\"141\":3}}],[\"不了\",{\"1\":{\"141\":1}}],[\"不会\",{\"1\":{\"141\":1}}],[\"不上\",{\"1\":{\"139\":1}}],[\"不想\",{\"1\":{\"125\":1}}],[\"不受\",{\"1\":{\"120\":1}}],[\"不应\",{\"1\":{\"110\":1}}],[\"不需\",{\"1\":{\"110\":1}}],[\"不必要\",{\"1\":{\"109\":1}}],[\"不够\",{\"1\":{\"108\":1}}],[\"不大\",{\"1\":{\"91\":1}}],[\"不可避免\",{\"1\":{\"122\":1}}],[\"不可\",{\"1\":{\"82\":1,\"91\":1}}],[\"不均\",{\"1\":{\"79\":1,\"81\":1}}],[\"不常\",{\"1\":{\"79\":1}}],[\"不同\",{\"1\":{\"71\":1,\"79\":5}}],[\"不是\",{\"1\":{\"50\":1,\"67\":1,\"91\":1,\"112\":1,\"120\":1}}],[\"不变\",{\"1\":{\"43\":1}}],[\"不要\",{\"1\":{\"36\":1}}],[\"不然\",{\"1\":{\"26\":1}}],[\"不多作\",{\"1\":{\"141\":1}}],[\"不多\",{\"1\":{\"25\":1}}],[\"不到\",{\"0\":{\"22\":1},\"1\":{\"86\":1,\"139\":1}}],[\"不出意外\",{\"1\":{\"16\":1}}],[\"不能\",{\"1\":{\"16\":1,\"70\":1,\"77\":1,\"112\":1,\"118\":1}}],[\"不为\",{\"1\":{\"16\":1}}],[\"不开\",{\"1\":{\"16\":1}}],[\"不再\",{\"1\":{\"15\":1,\"33\":1,\"112\":1}}],[\"不行\",{\"1\":{\"15\":1}}],[\"不\",{\"1\":{\"15\":1,\"23\":1,\"31\":2,\"54\":4,\"68\":1,\"69\":1,\"70\":2,\"79\":2,\"87\":1,\"91\":3,\"103\":1,\"110\":2,\"111\":2,\"120\":1,\"139\":2,\"141\":1}}],[\"不难\",{\"1\":{\"15\":1}}],[\"版本\",{\"0\":{\"69\":1,\"125\":1},\"1\":{\"15\":2,\"21\":1,\"31\":3,\"69\":1,\"125\":8}}],[\"等等\",{\"1\":{\"110\":1,\"111\":1,\"135\":1}}],[\"等候\",{\"1\":{\"36\":1}}],[\"等待\",{\"1\":{\"28\":1,\"139\":1}}],[\"等\",{\"1\":{\"15\":1,\"77\":1,\"79\":2,\"82\":1,\"83\":1,\"105\":1,\"106\":1,\"109\":1,\"111\":1,\"115\":1,\"120\":1}}],[\"等价\",{\"0\":{\"7\":1},\"1\":{\"7\":2}}],[\"要\",{\"1\":{\"15\":1,\"20\":2,\"45\":2,\"52\":1,\"79\":1,\"86\":1,\"130\":1}}],[\"要求\",{\"1\":{\"9\":1,\"79\":1}}],[\"估计\",{\"1\":{\"15\":1,\"141\":1}}],[\"没电\",{\"1\":{\"141\":1}}],[\"没想到\",{\"1\":{\"141\":1}}],[\"没有\",{\"1\":{\"37\":1,\"79\":1,\"110\":1,\"112\":7,\"135\":1,\"139\":2}}],[\"没\",{\"1\":{\"15\":1,\"112\":2}}],[\"盘\",{\"1\":{\"15\":1,\"130\":2}}],[\"百度网\",{\"1\":{\"15\":1}}],[\"到达\",{\"1\":{\"86\":1}}],[\"到\",{\"1\":{\"15\":1,\"16\":1,\"27\":1,\"35\":2,\"36\":1,\"67\":1,\"79\":3,\"80\":1,\"91\":2,\"97\":1,\"125\":1,\"126\":1,\"128\":1,\"130\":2,\"141\":1}}],[\"都行\",{\"1\":{\"27\":1,\"129\":1}}],[\"都\",{\"1\":{\"15\":2,\"16\":1,\"71\":1,\"110\":1,\"112\":3,\"128\":1,\"135\":1,\"139\":1,\"141\":1}}],[\"文章\",{\"1\":{\"33\":1,\"69\":1,\"132\":1}}],[\"文档\",{\"0\":{\"31\":1},\"1\":{\"31\":1}}],[\"文件夹\",{\"1\":{\"22\":1,\"131\":1,\"139\":1}}],[\"文件\",{\"0\":{\"22\":2},\"1\":{\"21\":1,\"27\":3,\"36\":1,\"125\":2,\"130\":1,\"139\":1,\"141\":1}}],[\"文件名\",{\"1\":{\"15\":1}}],[\"文法\",{\"0\":{\"3\":1,\"7\":1},\"1\":{\"4\":2,\"6\":1,\"7\":4,\"8\":1,\"9\":1,\"10\":3}}],[\"复杂\",{\"1\":{\"82\":2}}],[\"复杂度\",{\"1\":{\"40\":2,\"41\":1,\"45\":1,\"46\":1,\"47\":1,\"50\":1,\"51\":2,\"54\":2}}],[\"复制\",{\"1\":{\"15\":1,\"36\":1}}],[\"复习\",{\"0\":{\"2\":1}}],[\"好久\",{\"1\":{\"139\":1}}],[\"好处\",{\"1\":{\"79\":1}}],[\"好\",{\"1\":{\"15\":1,\"27\":2,\"79\":1,\"106\":1}}],[\"必须\",{\"1\":{\"15\":3,\"16\":2,\"86\":1,\"108\":1,\"112\":1}}],[\"你\",{\"1\":{\"15\":4,\"16\":5,\"22\":1,\"27\":1,\"36\":1,\"130\":1,\"133\":1,\"135\":1,\"139\":1,\"140\":1}}],[\"首先\",{\"1\":{\"15\":1,\"16\":2,\"20\":1,\"79\":2}}],[\"42\",{\"1\":{\"96\":1}}],[\"468\",{\"1\":{\"91\":1}}],[\"465\",{\"1\":{\"36\":1}}],[\"47679150\",{\"1\":{\"38\":1}}],[\"404\",{\"1\":{\"142\":1}}],[\"4096\",{\"1\":{\"27\":1}}],[\"40\",{\"0\":{\"16\":1},\"1\":{\"16\":1}}],[\"4\",{\"0\":{\"47\":1},\"1\":{\"15\":1,\"27\":1,\"45\":4,\"67\":2,\"69\":1,\"70\":2,\"74\":1,\"77\":1,\"79\":2,\"80\":4,\"89\":3,\"91\":2,\"93\":7,\"95\":1}}],[\"_\",{\"1\":{\"15\":3,\"16\":2,\"18\":1,\"21\":5,\"22\":1,\"36\":1,\"38\":1,\"45\":9,\"50\":2,\"51\":6,\"52\":2,\"55\":2,\"59\":2,\"69\":12,\"70\":84,\"76\":2,\"77\":23,\"78\":7,\"80\":3,\"81\":2,\"82\":3,\"91\":2,\"97\":2,\"100\":2,\"112\":91,\"117\":9,\"118\":11,\"119\":1,\"121\":7,\"122\":4,\"123\":1,\"125\":2,\"126\":1,\"135\":3,\"139\":7}}],[\"variable\",{\"1\":{\"123\":1}}],[\"valuedata\",{\"1\":{\"126\":1}}],[\"values\",{\"1\":{\"126\":1}}],[\"value\",{\"1\":{\"69\":8,\"75\":6,\"121\":2,\"126\":1}}],[\"valid\",{\"1\":{\"45\":3}}],[\"v\",{\"1\":{\"112\":3,\"122\":3,\"130\":1,\"141\":1}}],[\"volatile\",{\"1\":{\"70\":1,\"77\":1}}],[\"void\",{\"1\":{\"59\":1,\"91\":1}}],[\"v2\",{\"1\":{\"39\":1,\"135\":1}}],[\"vitess\",{\"1\":{\"83\":1}}],[\"vim\",{\"1\":{\"36\":1}}],[\"virtualbox\",{\"1\":{\"15\":4}}],[\"vec\",{\"1\":{\"112\":2}}],[\"vector\",{\"1\":{\"42\":3,\"43\":1,\"45\":6,\"50\":2,\"51\":3,\"52\":3,\"55\":1}}],[\"vendors\",{\"1\":{\"36\":5}}],[\"version\",{\"1\":{\"27\":1,\"130\":2}}],[\"v3\",{\"1\":{\"32\":1}}],[\"vm\",{\"1\":{\"27\":1}}],[\"vmx\",{\"1\":{\"27\":1}}],[\"vmware\",{\"0\":{\"23\":1,\"25\":1},\"1\":{\"25\":1,\"26\":2,\"27\":1,\"128\":1}}],[\"vscode\",{\"0\":{\"22\":1,\"133\":1}}],[\"vulnerability\",{\"1\":{\"21\":1}}],[\"vt\",{\"1\":{\"6\":1}}],[\"esm\",{\"1\":{\"139\":1}}],[\"etc\",{\"1\":{\"135\":3}}],[\"efficient\",{\"1\":{\"121\":1}}],[\"err\",{\"1\":{\"118\":3}}],[\"error\",{\"0\":{\"21\":1}}],[\"eq\",{\"1\":{\"112\":1,\"118\":2,\"119\":2}}],[\"ey\",{\"1\":{\"91\":6}}],[\"edu\",{\"1\":{\"85\":1,\"92\":1,\"98\":1}}],[\"eax\",{\"1\":{\"74\":1}}],[\"e7\",{\"1\":{\"48\":1}}],[\"e4\",{\"1\":{\"48\":2}}],[\"e\",{\"1\":{\"48\":1,\"55\":2,\"119\":2,\"130\":3,\"131\":1}}],[\"e6\",{\"1\":{\"48\":3}}],[\"e9\",{\"1\":{\"45\":1,\"48\":1}}],[\"else\",{\"1\":{\"42\":1,\"43\":1,\"45\":1,\"59\":1,\"66\":1,\"91\":2,\"112\":17,\"118\":1}}],[\"e8\",{\"1\":{\"31\":1,\"38\":1,\"50\":1,\"51\":1,\"52\":1}}],[\"e5\",{\"1\":{\"31\":1,\"38\":1,\"45\":1,\"48\":6,\"59\":1}}],[\"entry\",{\"1\":{\"121\":4}}],[\"encrypt\",{\"1\":{\"70\":3,\"77\":3}}],[\"endian\",{\"1\":{\"66\":2}}],[\"endif\",{\"1\":{\"45\":1}}],[\"enable\",{\"1\":{\"36\":1}}],[\"environment\",{\"1\":{\"135\":3}}],[\"envid\",{\"1\":{\"39\":1}}],[\"envtype\",{\"1\":{\"39\":1}}],[\"env\",{\"1\":{\"21\":1}}],[\"en\",{\"1\":{\"21\":1}}],[\"ensp\",{\"0\":{\"14\":1},\"1\":{\"15\":2,\"16\":1}}],[\"einval\",{\"0\":{\"21\":1}}],[\"exceeded\",{\"1\":{\"135\":1}}],[\"ex\",{\"1\":{\"91\":6}}],[\"export\",{\"1\":{\"130\":1}}],[\"exports\",{\"1\":{\"31\":1}}],[\"explicit\",{\"1\":{\"45\":1}}],[\"example\",{\"1\":{\"36\":1}}],[\"existent\",{\"1\":{\"31\":1}}],[\"exists\",{\"1\":{\"18\":1}}],[\"exit\",{\"1\":{\"21\":2,\"35\":1}}],[\"exe\",{\"1\":{\"15\":3,\"130\":3}}],[\".\",{\"1\":{\"15\":2,\"16\":3,\"18\":1,\"21\":13,\"22\":1,\"26\":1,\"27\":2,\"31\":8,\"32\":1,\"35\":2,\"36\":17,\"38\":11,\"39\":1,\"42\":4,\"43\":6,\"45\":32,\"47\":1,\"48\":2,\"50\":2,\"51\":3,\"52\":2,\"55\":3,\"59\":3,\"66\":3,\"67\":1,\"69\":2,\"70\":28,\"72\":3,\"77\":25,\"78\":7,\"84\":2,\"85\":4,\"87\":1,\"89\":19,\"91\":4,\"92\":4,\"97\":15,\"98\":4,\"100\":3,\"103\":2,\"109\":3,\"110\":7,\"112\":92,\"117\":5,\"118\":2,\"119\":1,\"121\":20,\"122\":3,\"123\":5,\"125\":1,\"127\":2,\"129\":4,\"130\":2,\"134\":2,\"135\":7,\"139\":4,\"140\":1,\"141\":1}}],[\"无需\",{\"1\":{\"82\":1,\"109\":2}}],[\"无\",{\"1\":{\"80\":1,\"106\":1,\"109\":1,\"111\":1}}],[\"无论如何\",{\"1\":{\"16\":1}}],[\"无法访问\",{\"1\":{\"31\":1}}],[\"无法\",{\"0\":{\"14\":1},\"1\":{\"16\":1,\"31\":2,\"69\":1,\"87\":1}}],[\"无关\",{\"1\":{\"9\":1}}],[\"在于\",{\"1\":{\"79\":1,\"104\":1,\"111\":2}}],[\"在\",{\"0\":{\"14\":1,\"23\":1,\"133\":1,\"135\":1,\"136\":1},\"1\":{\"15\":1,\"16\":2,\"21\":2,\"23\":1,\"27\":1,\"31\":1,\"36\":3,\"37\":2,\"43\":1,\"45\":1,\"69\":3,\"70\":3,\"74\":1,\"75\":3,\"77\":2,\"79\":10,\"86\":2,\"91\":1,\"97\":1,\"104\":1,\"106\":2,\"108\":2,\"109\":2,\"110\":1,\"112\":10,\"120\":2,\"121\":1,\"125\":4,\"126\":3,\"128\":2,\"130\":1,\"135\":3,\"139\":2,\"140\":2,\"141\":2}}],[\"、\",{\"1\":{\"13\":2,\"16\":1,\"52\":1,\"77\":1,\"79\":10,\"81\":1,\"82\":1,\"83\":2,\"87\":1,\"108\":1,\"109\":2,\"110\":3,\"111\":4,\"115\":1,\"120\":1,\"126\":1,\"135\":4,\"139\":1}}],[\"至多\",{\"1\":{\"86\":1,\"91\":1}}],[\"至少\",{\"1\":{\"67\":1}}],[\"至此\",{\"1\":{\"27\":1}}],[\"至于\",{\"1\":{\"15\":1}}],[\"至\",{\"1\":{\"13\":1}}],[\"自启动\",{\"0\":{\"141\":1},\"1\":{\"141\":4}}],[\"自身\",{\"1\":{\"112\":1}}],[\"自动\",{\"1\":{\"109\":1,\"112\":1,\"129\":1,\"141\":1}}],[\"自动化\",{\"1\":{\"83\":1}}],[\"自然\",{\"1\":{\"81\":1}}],[\"自己\",{\"1\":{\"79\":1}}],[\"自定义\",{\"0\":{\"76\":1},\"1\":{\"27\":1,\"70\":1,\"77\":1}}],[\"自行\",{\"1\":{\"15\":1}}],[\"自\",{\"0\":{\"112\":1},\"1\":{\"13\":1,\"111\":1}}],[\"自左至\",{\"1\":{\"11\":1,\"12\":1}}],[\"最终\",{\"0\":{\"140\":1},\"1\":{\"135\":1}}],[\"最近\",{\"1\":{\"128\":1}}],[\"最高\",{\"1\":{\"112\":1}}],[\"最少\",{\"1\":{\"99\":1}}],[\"最后\",{\"1\":{\"79\":1,\"141\":1}}],[\"最大\",{\"1\":{\"67\":4}}],[\"最坏\",{\"1\":{\"54\":1}}],[\"最好\",{\"1\":{\"54\":1}}],[\"最多\",{\"1\":{\"43\":1}}],[\"最长\",{\"0\":{\"39\":1},\"1\":{\"40\":2,\"43\":1}}],[\"最下\",{\"1\":{\"13\":1}}],[\"最\",{\"1\":{\"13\":2,\"27\":1,\"112\":2}}],[\"中序遍\",{\"1\":{\"112\":1}}],[\"中间件\",{\"1\":{\"83\":1}}],[\"中原\",{\"0\":{\"68\":1}}],[\"中取\",{\"1\":{\"40\":1}}],[\"中心\",{\"0\":{\"40\":1},\"1\":{\"40\":1}}],[\"中\",{\"0\":{\"14\":1,\"21\":1,\"23\":1,\"65\":1,\"79\":1,\"101\":1,\"124\":1,\"133\":1,\"135\":1,\"136\":1},\"1\":{\"13\":1,\"16\":1,\"21\":2,\"30\":1,\"31\":1,\"37\":2,\"66\":1,\"68\":1,\"69\":3,\"77\":1,\"79\":4,\"97\":1,\"109\":1,\"110\":2,\"111\":1,\"112\":3,\"120\":1,\"125\":2,\"135\":2,\"140\":1}}],[\"所在\",{\"1\":{\"125\":1}}],[\"所以\",{\"1\":{\"112\":3}}],[\"所\",{\"1\":{\"12\":1}}],[\"所有权\",{\"1\":{\"112\":1,\"133\":1}}],[\"所有\",{\"1\":{\"6\":1,\"11\":1,\"12\":1,\"13\":1,\"40\":1,\"80\":1,\"86\":1,\"91\":1,\"112\":1,\"130\":1}}],[\"两项\",{\"1\":{\"97\":1}}],[\"两个\",{\"1\":{\"16\":1,\"31\":1,\"91\":1}}],[\"两代\",{\"1\":{\"12\":1,\"13\":1}}],[\"两种\",{\"1\":{\"10\":1}}],[\"有父\",{\"1\":{\"112\":1}}],[\"有用\",{\"1\":{\"112\":1}}],[\"有时候\",{\"1\":{\"18\":1}}],[\"有\",{\"1\":{\"12\":1,\"18\":1,\"36\":1,\"49\":1,\"79\":3,\"81\":1,\"91\":1,\"112\":1,\"120\":1,\"122\":1,\"139\":1,\"141\":1}}],[\"有关\",{\"0\":{\"17\":1},\"1\":{\"8\":1}}],[\"仅\",{\"1\":{\"12\":1,\"68\":1,\"86\":1,\"126\":1}}],[\"形成\",{\"1\":{\"11\":1,\"12\":1}}],[\"形式语言\",{\"0\":{\"3\":1}}],[\"形式\",{\"0\":{\"3\":1},\"1\":{\"10\":1,\"112\":2}}],[\"叶子\",{\"1\":{\"11\":1,\"12\":1,\"13\":1}}],[\"左子\",{\"1\":{\"112\":6}}],[\"左端\",{\"1\":{\"45\":1}}],[\"左移\",{\"1\":{\"45\":1}}],[\"左右\",{\"1\":{\"43\":1,\"112\":1,\"141\":1}}],[\"左\",{\"1\":{\"10\":1,\"13\":3,\"43\":1}}],[\"左边\",{\"1\":{\"9\":1,\"112\":1,\"130\":1}}],[\"右子\",{\"1\":{\"112\":6}}],[\"右键\",{\"1\":{\"26\":1,\"27\":2}}],[\"右\",{\"1\":{\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"43\":2}}],[\"/\",{\"1\":{\"10\":4,\"16\":1,\"21\":7,\"27\":1,\"31\":10,\"36\":33,\"38\":30,\"39\":6,\"42\":4,\"45\":55,\"47\":5,\"48\":9,\"55\":1,\"59\":3,\"67\":12,\"69\":10,\"70\":18,\"72\":12,\"77\":6,\"78\":18,\"80\":2,\"84\":6,\"85\":3,\"91\":1,\"92\":3,\"97\":1,\"98\":3,\"100\":1,\"110\":20,\"112\":54,\"118\":1,\"121\":13,\"123\":17,\"126\":6,\"127\":9,\"129\":12,\"131\":5,\"133\":4,\"134\":4,\"135\":21,\"139\":12,\"140\":4,\"141\":6}}],[\"对象\",{\"1\":{\"106\":3}}],[\"对齐\",{\"1\":{\"67\":3}}],[\"对\",{\"1\":{\"45\":1,\"51\":1,\"71\":1,\"79\":1,\"80\":2,\"82\":1,\"91\":1}}],[\"对于\",{\"1\":{\"10\":1,\"79\":1,\"88\":1,\"93\":2,\"125\":1}}],[\"对应\",{\"1\":{\"7\":1,\"21\":1,\"79\":3,\"125\":1}}],[\"378525362\",{\"1\":{\"78\":1}}],[\"31\",{\"1\":{\"69\":1}}],[\"36000\",{\"1\":{\"69\":1}}],[\"3600\",{\"1\":{\"69\":1}}],[\"3383\",{\"1\":{\"49\":1}}],[\"3000\",{\"1\":{\"36\":2}}],[\"3.\",{\"0\":{\"82\":1},\"1\":{\"15\":1}}],[\"3\",{\"0\":{\"10\":1,\"44\":1,\"52\":1},\"1\":{\"52\":1,\"69\":1,\"79\":1,\"89\":1,\"93\":1,\"141\":1}}],[\"bbs\",{\"1\":{\"126\":1}}],[\"blob\",{\"1\":{\"123\":1,\"127\":1}}],[\"blog\",{\"1\":{\"21\":1,\"38\":1,\"72\":2}}],[\"boot\",{\"1\":{\"141\":1}}],[\"bool\",{\"1\":{\"42\":2,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"91\":1,\"112\":4}}],[\"box\",{\"1\":{\"112\":6,\"115\":1}}],[\"bone\",{\"0\":{\"85\":1}}],[\"buffer\",{\"1\":{\"70\":6,\"77\":6}}],[\"b3\",{\"1\":{\"48\":1}}],[\"bc\",{\"1\":{\"48\":1}}],[\"bcdedit\",{\"1\":{\"16\":2}}],[\"b2\",{\"1\":{\"48\":1}}],[\"b8\",{\"1\":{\"48\":2}}],[\"bf\",{\"1\":{\"48\":1}}],[\"bios\",{\"1\":{\"141\":1}}],[\"big\",{\"1\":{\"66\":1}}],[\"bitset\",{\"0\":{\"52\":1},\"1\":{\"52\":4}}],[\"bits\",{\"1\":{\"45\":1,\"55\":1,\"59\":1,\"91\":1,\"97\":1,\"100\":1}}],[\"bin\",{\"1\":{\"36\":1}}],[\"break\",{\"1\":{\"43\":1,\"51\":2,\"55\":1,\"112\":1}}],[\"bs\",{\"1\":{\"9\":1}}],[\"b\",{\"1\":{\"9\":2,\"45\":3,\"48\":1,\"59\":5,\"67\":4,\"129\":1}}],[\"baz\",{\"1\":{\"121\":2}}],[\"bar\",{\"1\":{\"121\":2}}],[\"back\",{\"1\":{\"45\":4,\"51\":1}}],[\"basicblockdata\",{\"1\":{\"126\":1}}],[\"basicblock\",{\"1\":{\"126\":1}}],[\"base\",{\"1\":{\"45\":10}}],[\"bashonubuntuonwindows\",{\"1\":{\"139\":1}}],[\"bash\",{\"0\":{\"20\":1},\"1\":{\"140\":1}}],[\"baa\",{\"1\":{\"9\":1}}],[\"ba\",{\"1\":{\"9\":1,\"10\":1,\"48\":1}}],[\"awaitin\",{\"1\":{\"135\":1}}],[\"a2d16029dc2\",{\"1\":{\"134\":1}}],[\"access\",{\"1\":{\"121\":4,\"139\":1}}],[\"accessing\",{\"1\":{\"31\":1}}],[\"ac\",{\"1\":{\"91\":1}}],[\"acm\",{\"1\":{\"85\":1,\"92\":1,\"98\":1}}],[\"analyzer\",{\"1\":{\"125\":1}}],[\"any\",{\"1\":{\"121\":2}}],[\"and\",{\"0\":{\"92\":1},\"1\":{\"121\":1,\"141\":1}}],[\"andrivet\",{\"1\":{\"78\":1}}],[\"answer\",{\"1\":{\"78\":1}}],[\"ansl\",{\"1\":{\"42\":3,\"43\":3,\"45\":3}}],[\"ai\",{\"1\":{\"70\":1}}],[\"allen\",{\"1\":{\"122\":1}}],[\"alternative\",{\"1\":{\"121\":1}}],[\"algos\",{\"1\":{\"123\":1}}],[\"algo\",{\"0\":{\"144\":1},\"1\":{\"112\":1}}],[\"algorithm\",{\"1\":{\"48\":1}}],[\"always\",{\"1\":{\"70\":6,\"77\":2,\"141\":1}}],[\"attribute\",{\"1\":{\"70\":6,\"77\":2}}],[\"advance\",{\"1\":{\"123\":1}}],[\"advobfuscator\",{\"1\":{\"78\":1}}],[\"ad\",{\"1\":{\"48\":1}}],[\"adminaccount\",{\"1\":{\"36\":1}}],[\"admin123\",{\"1\":{\"35\":1}}],[\"admin\",{\"1\":{\"35\":3,\"36\":2}}],[\"automatically\",{\"1\":{\"129\":1}}],[\"auto\",{\"1\":{\"45\":5,\"55\":2,\"70\":3,\"74\":1,\"75\":1,\"76\":1,\"77\":2}}],[\"auth\",{\"1\":{\"36\":1}}],[\"authsource\",{\"1\":{\"36\":1}}],[\"apache\",{\"1\":{\"108\":1}}],[\"api\",{\"1\":{\"106\":1,\"111\":1}}],[\"apps\",{\"1\":{\"129\":1}}],[\"app\",{\"1\":{\"36\":1}}],[\"apt\",{\"1\":{\"34\":2,\"35\":1,\"138\":1}}],[\"april\",{\"1\":{\"21\":1}}],[\"a3\",{\"1\":{\"31\":1,\"38\":1}}],[\"ae\",{\"1\":{\"31\":1,\"38\":1}}],[\"amd\",{\"1\":{\"23\":1}}],[\"armoury\",{\"1\":{\"141\":3}}],[\"arr\",{\"1\":{\"55\":7}}],[\"article\",{\"1\":{\"38\":1}}],[\"arp\",{\"1\":{\"16\":1}}],[\"ar\",{\"0\":{\"16\":1},\"1\":{\"16\":4}}],[\"assert\",{\"1\":{\"45\":2,\"112\":2,\"118\":2,\"119\":1}}],[\"as\",{\"1\":{\"9\":1}}],[\"a\",{\"1\":{\"9\":2,\"10\":6,\"45\":4,\"59\":13,\"69\":3}}],[\"abs\",{\"1\":{\"91\":5,\"117\":3}}],[\"abb\",{\"1\":{\"9\":1}}],[\"ab\",{\"1\":{\"9\":1,\"10\":1}}],[\"|\",{\"1\":{\"9\":5,\"59\":2,\"91\":6,\"112\":4,\"121\":2}}],[\"-\",{\"0\":{\"85\":1,\"92\":1,\"98\":1,\"108\":1,\"136\":1,\"137\":1,\"141\":1},\"1\":{\"9\":3,\"10\":4,\"15\":3,\"16\":2,\"18\":3,\"21\":8,\"26\":1,\"31\":1,\"34\":2,\"36\":7,\"38\":5,\"39\":6,\"42\":9,\"43\":8,\"45\":37,\"47\":1,\"48\":6,\"50\":2,\"51\":3,\"52\":2,\"55\":3,\"59\":1,\"66\":2,\"69\":6,\"70\":2,\"72\":1,\"74\":2,\"75\":2,\"77\":2,\"79\":1,\"81\":2,\"84\":3,\"91\":11,\"100\":2,\"106\":2,\"108\":1,\"109\":1,\"110\":2,\"112\":17,\"117\":1,\"118\":1,\"121\":9,\"123\":4,\"125\":16,\"127\":1,\"129\":4,\"130\":29,\"131\":3,\"132\":1,\"133\":2,\"135\":4,\"137\":3,\"138\":2,\"139\":7,\"140\":3,\"141\":18}}],[\"描述\",{\"1\":{\"9\":1}}],[\"使用\",{\"0\":{\"14\":1,\"26\":1,\"70\":1,\"112\":1,\"125\":1,\"135\":1,\"136\":1},\"1\":{\"9\":1,\"16\":1,\"20\":1,\"27\":5,\"31\":3,\"35\":1,\"68\":1,\"69\":1,\"70\":2,\"77\":5,\"79\":1,\"82\":1,\"104\":1,\"111\":1,\"112\":5,\"115\":1,\"117\":1,\"118\":1,\"120\":1,\"121\":3,\"125\":4,\"133\":1,\"135\":1,\"140\":1,\"141\":2}}],[\"语法结构\",{\"1\":{\"9\":1}}],[\"语言\",{\"0\":{\"6\":1,\"65\":1},\"1\":{\"6\":1,\"7\":2,\"9\":1,\"79\":1,\"111\":1}}],[\"个库\",{\"1\":{\"80\":2}}],[\"个字符\",{\"1\":{\"43\":1,\"87\":1}}],[\"个人\",{\"1\":{\"37\":1}}],[\"个\",{\"1\":{\"9\":1,\"27\":2,\"36\":1,\"49\":1,\"79\":1,\"97\":2,\"99\":1,\"141\":1}}],[\"式\",{\"1\":{\"9\":1,\"10\":1}}],[\"2.0\",{\"1\":{\"118\":1}}],[\"2.\",{\"0\":{\"81\":1}}],[\"259005783\",{\"1\":{\"78\":1}}],[\"28\",{\"1\":{\"72\":1}}],[\"225\",{\"1\":{\"69\":1}}],[\"2147483647\",{\"1\":{\"69\":1}}],[\"21.\",{\"1\":{\"21\":1}}],[\"27017\",{\"1\":{\"36\":1}}],[\"2000\",{\"1\":{\"79\":1,\"81\":1}}],[\"2023\",{\"1\":{\"81\":2}}],[\"2022\",{\"1\":{\"72\":1}}],[\"2024\",{\"1\":{\"21\":1,\"125\":1}}],[\"20\",{\"1\":{\"38\":1,\"69\":2,\"75\":1,\"95\":1}}],[\"2019\",{\"1\":{\"38\":1}}],[\"20.04.\",{\"1\":{\"130\":2}}],[\"20.04\",{\"0\":{\"33\":1},\"1\":{\"31\":1,\"32\":1,\"130\":4}}],[\"20.\",{\"1\":{\"21\":1}}],[\"2\",{\"0\":{\"9\":1,\"41\":1,\"51\":1},\"1\":{\"9\":1,\"10\":1,\"18\":1,\"21\":1,\"45\":1,\"50\":3,\"51\":2,\"52\":3,\"54\":9,\"67\":1,\"69\":1,\"75\":1,\"80\":2,\"81\":2,\"91\":3,\"93\":3,\"97\":1,\"112\":2,\"121\":2,\"130\":3,\"134\":1}}],[\"型文法\",{\"0\":{\"8\":1,\"9\":1,\"10\":1},\"1\":{\"9\":1}}],[\"16807\",{\"1\":{\"69\":3}}],[\"16\",{\"1\":{\"67\":1,\"69\":4}}],[\"163.\",{\"1\":{\"36\":3}}],[\"1.76.0\",{\"1\":{\"125\":2}}],[\"1.72.0\",{\"1\":{\"125\":1}}],[\"1.70\",{\"1\":{\"121\":1}}],[\"1.5.0\",{\"1\":{\"121\":1}}],[\"1.\",{\"0\":{\"80\":1},\"1\":{\"135\":1}}],[\"1.2\",{\"1\":{\"76\":1}}],[\"1.44\",{\"1\":{\"50\":1}}],[\"1.3.00.100\",{\"1\":{\"15\":1}}],[\"131\",{\"1\":{\"45\":1}}],[\"139111\",{\"1\":{\"15\":1}}],[\"1213\",{\"0\":{\"98\":1},\"1\":{\"98\":1}}],[\"125\",{\"1\":{\"97\":2}}],[\"120\",{\"1\":{\"74\":1,\"94\":1,\"97\":5}}],[\"120000\",{\"1\":{\"36\":1}}],[\"123\",{\"1\":{\"70\":2,\"77\":2}}],[\"127.0.0.1\",{\"1\":{\"36\":2,\"135\":4}}],[\"10.0\",{\"1\":{\"118\":2}}],[\"10.19.0\",{\"1\":{\"32\":1}}],[\"1028\",{\"0\":{\"92\":1},\"1\":{\"92\":1}}],[\"109\",{\"1\":{\"91\":1}}],[\"1010\",{\"0\":{\"85\":1},\"1\":{\"85\":1}}],[\"1072878269\",{\"1\":{\"78\":1}}],[\"107918607\",{\"1\":{\"38\":1}}],[\"1005\",{\"1\":{\"100\":1}}],[\"1002\",{\"1\":{\"80\":1,\"82\":1}}],[\"1001\",{\"1\":{\"80\":1,\"82\":1}}],[\"1000\",{\"1\":{\"79\":2,\"81\":2}}],[\"10000\",{\"1\":{\"50\":1,\"52\":1}}],[\"100\",{\"1\":{\"39\":1}}],[\"10\",{\"1\":{\"36\":1,\"69\":1,\"95\":1}}],[\"140\",{\"1\":{\"36\":1}}],[\"1746987\",{\"1\":{\"141\":2}}],[\"1746617\",{\"1\":{\"141\":1}}],[\"17\",{\"1\":{\"25\":1}}],[\"18.\",{\"1\":{\"21\":1}}],[\"114514\",{\"1\":{\"69\":1}}],[\"11836\",{\"1\":{\"31\":1}}],[\"11\",{\"0\":{\"14\":1},\"1\":{\"16\":1,\"125\":1}}],[\"1\",{\"0\":{\"8\":1,\"40\":1,\"50\":1},\"1\":{\"9\":1,\"10\":1,\"15\":1,\"16\":2,\"27\":1,\"36\":1,\"42\":12,\"43\":9,\"45\":42,\"50\":7,\"51\":2,\"52\":4,\"54\":5,\"55\":3,\"59\":13,\"66\":2,\"67\":3,\"69\":4,\"70\":3,\"74\":3,\"75\":3,\"77\":2,\"79\":1,\"81\":3,\"86\":1,\"87\":1,\"91\":12,\"93\":7,\"94\":1,\"97\":5,\"100\":3,\"112\":2,\"121\":6}}],[\"这种\",{\"1\":{\"79\":1}}],[\"这一硬\",{\"1\":{\"69\":1}}],[\"这个\",{\"1\":{\"24\":1,\"25\":1,\"91\":1,\"112\":1,\"139\":1}}],[\"这是\",{\"1\":{\"21\":1,\"79\":1,\"111\":1,\"122\":1}}],[\"这条\",{\"1\":{\"16\":1}}],[\"这样\",{\"1\":{\"16\":1,\"18\":1,\"79\":1,\"91\":1,\"108\":1,\"120\":1}}],[\"这里\",{\"1\":{\"15\":1,\"16\":2,\"27\":2,\"30\":1,\"45\":1,\"50\":1,\"70\":1,\"74\":1,\"77\":2,\"112\":1,\"130\":1,\"139\":1,\"140\":1}}],[\"这些\",{\"1\":{\"15\":2,\"31\":1,\"70\":1,\"79\":2,\"110\":1}}],[\"这\",{\"1\":{\"7\":1,\"70\":1,\"79\":7,\"141\":1}}],[\"它会\",{\"1\":{\"112\":1}}],[\"它们\",{\"1\":{\"79\":3}}],[\"它\",{\"1\":{\"7\":1,\"12\":1,\"35\":1,\"86\":1,\"108\":1,\"112\":3}}],[\"产生\",{\"1\":{\"7\":1,\"9\":1,\"10\":1,\"37\":1,\"106\":1}}],[\"由于\",{\"1\":{\"21\":1,\"52\":1,\"69\":1}}],[\"由\",{\"1\":{\"7\":1,\"31\":1,\"87\":1,\"94\":1,\"105\":1,\"106\":1,\"109\":1}}],[\"可用\",{\"1\":{\"82\":1}}],[\"可扩展性\",{\"1\":{\"79\":1}}],[\"可行\",{\"1\":{\"69\":1,\"91\":1}}],[\"可\",{\"1\":{\"36\":1,\"82\":1,\"83\":1,\"87\":1,\"126\":1}}],[\"可视化\",{\"1\":{\"31\":1}}],[\"可视\",{\"1\":{\"27\":1}}],[\"可能\",{\"1\":{\"7\":1,\"16\":2,\"79\":10,\"81\":1}}],[\"可以\",{\"1\":{\"4\":1,\"33\":1,\"35\":1,\"36\":3,\"52\":1,\"66\":1,\"68\":1,\"71\":2,\"75\":2,\"77\":1,\"79\":2,\"86\":1,\"91\":1,\"109\":1,\"112\":2,\"121\":1,\"125\":2,\"132\":1,\"139\":2}}],[\"但是\",{\"1\":{\"15\":1,\"70\":1,\"77\":1,\"112\":1,\"139\":3}}],[\"但\",{\"1\":{\"7\":1,\"16\":2,\"69\":2,\"71\":1,\"79\":4,\"81\":1,\"83\":1,\"91\":1,\"103\":1,\"108\":1,\"111\":1,\"125\":1}}],[\"一张\",{\"1\":{\"141\":1}}],[\"一上午\",{\"1\":{\"141\":1}}],[\"一般\",{\"1\":{\"141\":1}}],[\"一番\",{\"1\":{\"139\":1}}],[\"一直\",{\"1\":{\"128\":1,\"141\":1}}],[\"一项\",{\"1\":{\"112\":1}}],[\"一起\",{\"1\":{\"108\":1}}],[\"一些\",{\"0\":{\"124\":1},\"1\":{\"106\":1,\"111\":1}}],[\"一桌\",{\"1\":{\"99\":1}}],[\"一致\",{\"1\":{\"91\":1}}],[\"一发\",{\"1\":{\"91\":1}}],[\"一层\",{\"1\":{\"91\":1}}],[\"一道\",{\"1\":{\"91\":1}}],[\"一堵\",{\"1\":{\"87\":1}}],[\"一格\",{\"1\":{\"86\":1}}],[\"一瞬间\",{\"1\":{\"86\":1}}],[\"一次\",{\"1\":{\"79\":1,\"82\":1,\"86\":1,\"91\":1,\"141\":1}}],[\"一维\",{\"0\":{\"43\":1}}],[\"一篇\",{\"1\":{\"33\":1,\"69\":1,\"132\":1}}],[\"一连串\",{\"1\":{\"31\":1}}],[\"一\",{\"1\":{\"31\":1,\"70\":1,\"91\":1,\"125\":1,\"141\":1}}],[\"一下\",{\"1\":{\"30\":1,\"79\":3,\"112\":1}}],[\"一行\",{\"1\":{\"27\":1}}],[\"一样\",{\"1\":{\"16\":1}}],[\"一步步\",{\"1\":{\"16\":1}}],[\"一切正常\",{\"1\":{\"16\":1}}],[\"一会儿\",{\"1\":{\"15\":1}}],[\"一棵\",{\"1\":{\"11\":1,\"12\":1}}],[\"一个\",{\"1\":{\"7\":3,\"11\":1,\"13\":1,\"16\":2,\"28\":1,\"30\":1,\"35\":1,\"49\":1,\"51\":1,\"69\":2,\"71\":1,\"79\":3,\"86\":1,\"91\":1,\"93\":1,\"94\":1,\"108\":1,\"112\":2,\"120\":1,\"125\":1,\"139\":2}}],[\"一种\",{\"1\":{\"5\":1,\"75\":1}}],[\"}\",{\"1\":{\"6\":1,\"21\":3,\"35\":4,\"36\":5,\"42\":8,\"43\":10,\"45\":20,\"50\":5,\"51\":6,\"52\":5,\"55\":4,\"59\":5,\"66\":4,\"67\":3,\"69\":6,\"70\":19,\"74\":2,\"75\":4,\"76\":1,\"77\":9,\"91\":12,\"97\":6,\"100\":5,\"109\":3,\"110\":4,\"112\":80,\"117\":2,\"118\":4,\"121\":10,\"122\":3,\"126\":2}}],[\"​\",{\"1\":{\"6\":1,\"50\":1,\"70\":1}}],[\"∈\",{\"1\":{\"6\":1}}],[\"且\",{\"1\":{\"6\":1,\"79\":1,\"80\":2,\"81\":1,\"86\":1,\"108\":1,\"109\":1,\"112\":3,\"126\":1}}],[\"∗\",{\"1\":{\"6\":2,\"91\":1}}],[\"∣\",{\"1\":{\"6\":1}}],[\"xanadu13\",{\"1\":{\"130\":2,\"133\":1}}],[\"xa3a53275\",{\"1\":{\"70\":1}}],[\"x6\",{\"1\":{\"97\":1}}],[\"x6d411a6a\",{\"1\":{\"70\":1}}],[\"x4\",{\"1\":{\"97\":1}}],[\"x4b1d6b30\",{\"1\":{\"70\":1}}],[\"x2\",{\"1\":{\"97\":2}}],[\"xor\",{\"1\":{\"71\":1,\"77\":2}}],[\"x86\",{\"1\":{\"125\":2}}],[\"x8dc97987\",{\"1\":{\"70\":1}}],[\"x84adf386\",{\"1\":{\"70\":1}}],[\"xf\",{\"1\":{\"70\":4}}],[\"xffff\",{\"1\":{\"69\":1}}],[\"xcbd41fed\",{\"1\":{\"70\":1}}],[\"xccc10ff9\",{\"1\":{\"70\":1}}],[\"x17110e76\",{\"1\":{\"70\":1}}],[\"x16d16793\",{\"1\":{\"70\":1}}],[\"xd\",{\"1\":{\"89\":1}}],[\"xd7153d80\",{\"1\":{\"70\":1}}],[\"xdf15236c\",{\"1\":{\"70\":1}}],[\"x0ed24a6a\",{\"1\":{\"70\":1}}],[\"x3\",{\"1\":{\"97\":1}}],[\"x36e86773\",{\"1\":{\"70\":1}}],[\"x3a697614\",{\"1\":{\"70\":1}}],[\"xecf491de\",{\"1\":{\"70\":1}}],[\"xe0fe08e4\",{\"1\":{\"70\":1}}],[\"xb92fae55\",{\"1\":{\"70\":1}}],[\"x7fff\",{\"1\":{\"69\":1}}],[\"x55\",{\"1\":{\"69\":1,\"77\":2}}],[\"x\",{\"1\":{\"6\":3,\"15\":4,\"21\":3,\"50\":5,\"51\":3,\"52\":3,\"69\":1,\"74\":2,\"75\":1,\"87\":1,\"89\":4,\"91\":8,\"97\":2,\"100\":9,\"119\":2}}],[\"{\",{\"1\":{\"6\":1,\"21\":3,\"35\":4,\"36\":5,\"42\":8,\"43\":10,\"45\":20,\"50\":5,\"51\":6,\"52\":5,\"55\":4,\"59\":5,\"66\":4,\"67\":3,\"69\":6,\"70\":19,\"74\":2,\"75\":4,\"76\":1,\"77\":9,\"91\":12,\"97\":6,\"100\":5,\"109\":3,\"110\":4,\"112\":80,\"117\":2,\"118\":4,\"121\":10,\"122\":3,\"126\":2}}],[\",\",{\"1\":{\"6\":1,\"9\":3,\"10\":2,\"13\":2,\"15\":5,\"16\":9,\"18\":4,\"20\":3,\"21\":11,\"22\":5,\"26\":2,\"27\":25,\"28\":3,\"31\":7,\"32\":3,\"35\":10,\"36\":19,\"38\":5,\"40\":1,\"42\":6,\"43\":6,\"45\":61,\"47\":1,\"48\":1,\"49\":1,\"50\":6,\"51\":5,\"52\":6,\"54\":65,\"55\":2,\"59\":14,\"66\":1,\"67\":5,\"69\":8,\"70\":33,\"72\":1,\"74\":5,\"75\":1,\"77\":6,\"78\":3,\"79\":11,\"80\":11,\"81\":13,\"82\":21,\"83\":23,\"87\":7,\"91\":30,\"93\":1,\"97\":3,\"100\":5,\"106\":1,\"109\":10,\"110\":9,\"111\":4,\"112\":52,\"117\":3,\"118\":9,\"119\":8,\"120\":1,\"121\":18,\"122\":5,\"123\":2,\"125\":15,\"126\":7,\"129\":2,\"130\":15,\"131\":3,\"133\":3,\"135\":12,\"139\":8,\"140\":2,\"141\":8}}],[\"即使\",{\"1\":{\"110\":3}}],[\"即可\",{\"1\":{\"15\":1,\"16\":1,\"20\":1,\"26\":2,\"77\":1,\"91\":1,\"125\":3,\"133\":1,\"140\":1}}],[\"即\",{\"1\":{\"6\":1,\"45\":1,\"106\":1}}],[\")\",{\"0\":{\"119\":1},\"1\":{\"6\":2,\"10\":2,\"18\":1,\"21\":11,\"31\":1,\"35\":2,\"40\":2,\"41\":1,\"42\":12,\"43\":13,\"45\":75,\"46\":1,\"47\":1,\"50\":12,\"51\":13,\"52\":12,\"54\":40,\"55\":12,\"59\":23,\"66\":4,\"67\":5,\"69\":12,\"70\":67,\"74\":5,\"75\":1,\"76\":2,\"77\":28,\"79\":1,\"80\":3,\"87\":1,\"91\":31,\"94\":1,\"97\":14,\"100\":14,\"109\":4,\"110\":14,\"112\":134,\"117\":9,\"118\":12,\"119\":7,\"121\":27,\"122\":7,\"126\":4,\"128\":1,\"135\":1,\"140\":1}}],[\"(\",{\"0\":{\"119\":1},\"1\":{\"6\":2,\"10\":2,\"18\":1,\"21\":11,\"31\":1,\"35\":2,\"40\":2,\"41\":1,\"42\":12,\"43\":13,\"45\":75,\"46\":1,\"47\":1,\"50\":12,\"51\":13,\"52\":12,\"54\":40,\"55\":12,\"59\":23,\"66\":4,\"67\":5,\"69\":12,\"70\":67,\"74\":5,\"75\":1,\"76\":2,\"77\":28,\"79\":1,\"80\":3,\"87\":1,\"91\":31,\"94\":1,\"97\":14,\"100\":14,\"109\":4,\"110\":14,\"112\":134,\"117\":9,\"118\":12,\"119\":7,\"121\":27,\"122\":7,\"126\":4,\"128\":1,\"135\":1,\"140\":1}}],[\"ln\",{\"1\":{\"131\":1}}],[\"l15\",{\"1\":{\"127\":1}}],[\"lazy\",{\"1\":{\"121\":6,\"122\":3,\"123\":1}}],[\"lchild\",{\"1\":{\"112\":5}}],[\"ll\",{\"1\":{\"45\":1,\"50\":1,\"51\":1,\"52\":1,\"59\":1,\"100\":1}}],[\"learn\",{\"1\":{\"129\":1}}],[\"leak\",{\"1\":{\"115\":2}}],[\"let\",{\"1\":{\"112\":12,\"117\":3,\"118\":4,\"119\":2,\"121\":2,\"122\":1}}],[\"leftmost\",{\"1\":{\"112\":4}}],[\"left\",{\"1\":{\"43\":11,\"45\":7,\"112\":17}}],[\"len\",{\"1\":{\"42\":4,\"43\":4,\"45\":7}}],[\"leetcode\",{\"1\":{\"39\":1}}],[\"list\",{\"1\":{\"130\":1,\"141\":1}}],[\"life\",{\"1\":{\"72\":1}}],[\"line\",{\"1\":{\"70\":2}}],[\"linux\",{\"0\":{\"19\":1,\"136\":1,\"137\":1,\"141\":1},\"1\":{\"128\":1,\"130\":1,\"131\":1,\"132\":1,\"137\":1,\"139\":3,\"140\":1,\"141\":4}}],[\"little\",{\"1\":{\"66\":1}}],[\"liked\",{\"1\":{\"39\":1}}],[\"loop\",{\"1\":{\"112\":1}}],[\"lo\",{\"1\":{\"69\":2}}],[\"logger\",{\"1\":{\"105\":1,\"109\":3,\"110\":7}}],[\"logging\",{\"0\":{\"108\":1},\"1\":{\"103\":1,\"108\":2,\"109\":2}}],[\"logback\",{\"0\":{\"105\":1},\"1\":{\"104\":1,\"106\":2,\"109\":2}}],[\"log4j2\",{\"0\":{\"106\":1},\"1\":{\"104\":1,\"106\":2,\"110\":4}}],[\"log4j\",{\"0\":{\"104\":1},\"1\":{\"104\":2,\"105\":1,\"106\":3,\"108\":1,\"109\":2}}],[\"logn\",{\"1\":{\"54\":1}}],[\"loglogn\",{\"1\":{\"50\":1}}],[\"long\",{\"1\":{\"45\":4,\"50\":2,\"51\":2,\"52\":2,\"59\":2,\"76\":2,\"100\":2}}],[\"longestpalindrome\",{\"1\":{\"42\":1,\"43\":1,\"45\":2}}],[\"longest\",{\"1\":{\"39\":1,\"48\":1}}],[\"longdada\",{\"1\":{\"38\":1}}],[\"lock\",{\"1\":{\"22\":1,\"122\":1}}],[\"localhost\",{\"1\":{\"36\":1,\"135\":1}}],[\"local\",{\"1\":{\"16\":1,\"36\":1,\"121\":1,\"133\":1}}],[\"l\",{\"1\":{\"6\":2,\"45\":7,\"59\":13}}],[\"，\",{\"0\":{\"28\":1,\"121\":1,\"133\":1},\"1\":{\"6\":3,\"7\":3,\"8\":1,\"9\":2,\"10\":2,\"12\":1,\"15\":9,\"16\":22,\"18\":2,\"21\":1,\"23\":2,\"25\":2,\"26\":4,\"27\":6,\"28\":1,\"30\":2,\"31\":7,\"33\":1,\"35\":2,\"36\":8,\"37\":3,\"40\":2,\"42\":2,\"43\":6,\"45\":3,\"49\":2,\"50\":1,\"51\":1,\"52\":2,\"66\":1,\"67\":1,\"68\":2,\"69\":5,\"70\":5,\"71\":1,\"74\":1,\"75\":2,\"77\":5,\"79\":56,\"80\":7,\"81\":3,\"82\":5,\"83\":4,\"86\":4,\"87\":3,\"88\":1,\"91\":16,\"93\":2,\"94\":1,\"97\":3,\"99\":2,\"100\":1,\"103\":1,\"104\":2,\"105\":3,\"106\":9,\"108\":5,\"109\":11,\"110\":9,\"111\":5,\"112\":31,\"120\":6,\"121\":1,\"122\":2,\"125\":8,\"126\":1,\"128\":3,\"129\":1,\"130\":2,\"132\":1,\"133\":2,\"135\":4,\"139\":12,\"140\":2,\"141\":18}}],[\"出于\",{\"1\":{\"120\":1}}],[\"出来\",{\"1\":{\"104\":1}}],[\"出口\",{\"1\":{\"86\":1,\"87\":1}}],[\"出现\",{\"1\":{\"31\":1,\"36\":1,\"120\":1}}],[\"出\",{\"1\":{\"6\":1,\"130\":1}}],[\"出发\",{\"1\":{\"4\":1}}],[\"gui\",{\"1\":{\"129\":2}}],[\"gulcu\",{\"1\":{\"109\":1}}],[\"graph\",{\"1\":{\"126\":1}}],[\"grammar\",{\"1\":{\"8\":1,\"9\":1,\"10\":1}}],[\"gnu\",{\"1\":{\"125\":2}}],[\"globalvaluemapcell\",{\"1\":{\"126\":1}}],[\"globals\",{\"1\":{\"126\":1}}],[\"global\",{\"1\":{\"123\":1}}],[\"gc\",{\"1\":{\"111\":1}}],[\"gcc\",{\"1\":{\"69\":1}}],[\"generator\",{\"1\":{\"78\":1}}],[\"get\",{\"1\":{\"34\":2,\"117\":1,\"121\":5,\"135\":1}}],[\"gist\",{\"1\":{\"72\":1,\"78\":1}}],[\"github\",{\"1\":{\"31\":1,\"36\":2,\"38\":2,\"72\":1,\"78\":2,\"123\":1,\"127\":1}}],[\"git\",{\"0\":{\"17\":1,\"18\":1},\"1\":{\"18\":4,\"26\":1,\"36\":4}}],[\"godbolt\",{\"1\":{\"69\":1}}],[\"google\",{\"1\":{\"15\":1,\"139\":1,\"141\":1}}],[\"gyp\",{\"1\":{\"21\":2}}],[\"gypprocess\",{\"1\":{\"21\":2}}],[\"gypargs\",{\"1\":{\"21\":3}}],[\"g\",{\"1\":{\"6\":3,\"50\":7,\"51\":3,\"52\":6,\"97\":1,\"141\":1}}],[\"是否\",{\"1\":{\"42\":1,\"109\":1}}],[\"是因为\",{\"0\":{\"22\":1}}],[\"是\",{\"1\":{\"5\":1,\"7\":1,\"10\":1,\"15\":2,\"16\":2,\"23\":1,\"24\":1,\"25\":1,\"27\":2,\"35\":1,\"45\":1,\"66\":2,\"67\":1,\"69\":1,\"70\":1,\"71\":1,\"74\":1,\"75\":2,\"79\":9,\"87\":1,\"91\":3,\"108\":1,\"110\":1,\"112\":3,\"128\":1,\"130\":1,\"139\":2,\"141\":2}}],[\"只想\",{\"1\":{\"125\":1}}],[\"只读\",{\"0\":{\"121\":1}}],[\"只能\",{\"1\":{\"10\":1,\"31\":1,\"70\":1,\"77\":1}}],[\"只有\",{\"1\":{\"9\":1,\"13\":1,\"112\":2}}],[\"只\",{\"1\":{\"5\":1,\"52\":1,\"109\":1}}],[\"句柄\",{\"0\":{\"13\":1},\"1\":{\"13\":2}}],[\"句子\",{\"0\":{\"5\":1},\"1\":{\"5\":2,\"6\":1}}],[\"句型\",{\"0\":{\"4\":1},\"1\":{\"4\":1,\"5\":2,\"13\":1}}],[\"非\",{\"1\":{\"4\":1,\"9\":1,\"82\":1,\"139\":1}}],[\"又\",{\"1\":{\"4\":1,\"31\":1}}],[\"既\",{\"1\":{\"4\":1}}],[\"。\",{\"0\":{\"22\":1},\"1\":{\"4\":2,\"5\":2,\"7\":1,\"9\":1,\"11\":1,\"13\":2,\"15\":4,\"16\":5,\"18\":1,\"21\":1,\"26\":3,\"28\":2,\"30\":1,\"31\":3,\"36\":4,\"37\":2,\"40\":1,\"42\":2,\"43\":3,\"49\":1,\"68\":1,\"69\":3,\"70\":1,\"71\":1,\"75\":3,\"77\":2,\"79\":33,\"80\":8,\"81\":7,\"82\":8,\"83\":3,\"86\":3,\"87\":4,\"88\":1,\"91\":5,\"93\":1,\"94\":2,\"97\":1,\"99\":2,\"103\":1,\"104\":1,\"105\":1,\"106\":3,\"108\":4,\"109\":4,\"110\":1,\"111\":2,\"120\":2,\"122\":1,\"125\":4,\"126\":1,\"128\":1,\"135\":2,\"139\":4,\"140\":2,\"141\":6}}],[\"）\",{\"0\":{\"51\":1,\"107\":1},\"1\":{\"4\":1,\"15\":1,\"16\":3,\"36\":1,\"43\":1,\"69\":1,\"79\":1,\"80\":4,\"81\":4,\"82\":3,\"83\":3,\"86\":1,\"91\":1,\"106\":2,\"108\":1,\"109\":1,\"111\":1,\"129\":1,\"141\":2}}],[\"α\",{\"1\":{\"4\":1}}],[\">\",{\"1\":{\"4\":1,\"6\":1,\"9\":3,\"10\":4,\"16\":2,\"42\":7,\"43\":5,\"45\":20,\"50\":9,\"51\":11,\"52\":12,\"55\":8,\"59\":13,\"66\":1,\"67\":1,\"69\":13,\"70\":19,\"74\":1,\"75\":9,\"76\":1,\"77\":7,\"91\":13,\"97\":3,\"100\":11,\"110\":2,\"112\":19,\"117\":2,\"118\":6,\"119\":8,\"121\":5,\"122\":1,\"126\":2,\"130\":5,\"133\":2}}],[\"*\",{\"1\":{\"4\":1,\"36\":11,\"45\":8,\"50\":1,\"51\":1,\"52\":1,\"59\":1,\"67\":4,\"69\":7,\"70\":8,\"74\":1,\"77\":5,\"91\":1,\"112\":54,\"130\":1}}],[\"=\",{\"1\":{\"4\":2,\"6\":2,\"21\":8,\"27\":1,\"36\":1,\"39\":2,\"42\":22,\"43\":25,\"45\":66,\"50\":13,\"51\":7,\"52\":11,\"55\":4,\"59\":20,\"66\":3,\"69\":15,\"70\":15,\"74\":2,\"75\":4,\"76\":1,\"77\":7,\"80\":4,\"85\":1,\"91\":39,\"92\":1,\"93\":5,\"97\":16,\"98\":1,\"100\":14,\"112\":35,\"117\":3,\"118\":6,\"119\":2,\"121\":5,\"122\":2,\"125\":3,\"135\":6,\"139\":1}}],[\" \",{\"0\":{\"14\":1,\"18\":2,\"21\":2,\"22\":3,\"26\":1,\"33\":2,\"34\":2,\"40\":2,\"41\":2,\"44\":2,\"45\":2,\"46\":2,\"47\":2,\"50\":2,\"51\":2,\"52\":2,\"79\":3,\"85\":4,\"89\":1,\"90\":1,\"92\":5,\"95\":1,\"96\":1,\"98\":3,\"111\":1,\"141\":1},\"1\":{\"4\":2,\"6\":3,\"8\":2,\"9\":20,\"10\":20,\"15\":4,\"16\":6,\"18\":20,\"20\":3,\"21\":51,\"22\":3,\"25\":3,\"26\":2,\"27\":3,\"30\":1,\"31\":14,\"32\":4,\"34\":5,\"35\":56,\"36\":94,\"42\":107,\"43\":123,\"45\":590,\"49\":6,\"50\":100,\"51\":92,\"52\":100,\"55\":77,\"59\":125,\"66\":26,\"67\":38,\"68\":1,\"69\":195,\"70\":288,\"74\":45,\"75\":56,\"76\":17,\"77\":118,\"79\":4,\"80\":28,\"81\":15,\"82\":2,\"86\":5,\"87\":7,\"89\":15,\"90\":1,\"91\":102,\"93\":28,\"94\":2,\"95\":2,\"96\":2,\"97\":36,\"100\":52,\"104\":4,\"105\":1,\"106\":1,\"108\":10,\"109\":31,\"110\":55,\"112\":664,\"117\":27,\"118\":55,\"119\":20,\"121\":137,\"122\":26,\"125\":18,\"126\":28,\"128\":3,\"130\":26,\"131\":5,\"132\":1,\"133\":8,\"135\":26,\"137\":2,\"138\":3,\"139\":8,\"140\":2,\"141\":5,\"142\":2}}],[\"src\",{\"1\":{\"123\":1,\"125\":1,\"127\":1}}],[\"simple\",{\"1\":{\"109\":1}}],[\"sizeof\",{\"1\":{\"59\":1,\"67\":2,\"70\":7,\"77\":6}}],[\"size\",{\"0\":{\"67\":1},\"1\":{\"42\":1,\"43\":3,\"45\":4,\"70\":6,\"77\":3}}],[\"slf4j\",{\"0\":{\"109\":1},\"1\":{\"106\":1,\"109\":3,\"110\":2}}],[\"sx\",{\"1\":{\"91\":7}}],[\"sample\",{\"0\":{\"89\":1,\"90\":1,\"95\":1,\"96\":1}}],[\"sql\",{\"1\":{\"84\":2}}],[\"sourceforge\",{\"1\":{\"140\":1}}],[\"sound\",{\"1\":{\"139\":1}}],[\"someerr\",{\"1\":{\"119\":3}}],[\"some\",{\"1\":{\"112\":1,\"118\":3,\"119\":2}}],[\"sorted\",{\"1\":{\"55\":3}}],[\"sol\",{\"1\":{\"45\":2}}],[\"solve\",{\"1\":{\"45\":2}}],[\"solutions\",{\"1\":{\"139\":1}}],[\"solution\",{\"0\":{\"40\":1,\"41\":1,\"44\":1,\"47\":1,\"50\":1,\"51\":1,\"52\":1,\"91\":1,\"97\":1,\"100\":1,\"115\":1},\"1\":{\"42\":1,\"43\":1,\"45\":2}}],[\"sy\",{\"1\":{\"91\":7}}],[\"sync\",{\"1\":{\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"59\":1,\"91\":1,\"97\":1,\"100\":1,\"121\":1,\"122\":1}}],[\"systemctl\",{\"1\":{\"35\":4,\"135\":2}}],[\"systemd\",{\"1\":{\"35\":1,\"135\":1}}],[\"system\",{\"1\":{\"16\":1,\"135\":1}}],[\"swap\",{\"1\":{\"45\":1,\"55\":1,\"59\":1}}],[\"show\",{\"1\":{\"125\":1}}],[\"showproblem\",{\"1\":{\"85\":1,\"92\":1,\"98\":1}}],[\"short\",{\"1\":{\"67\":1}}],[\"share\",{\"1\":{\"131\":2}}],[\"shardingsphere\",{\"1\":{\"83\":1}}],[\"sharding\",{\"0\":{\"79\":1},\"1\":{\"79\":4,\"83\":1}}],[\"shawchen08\",{\"1\":{\"38\":1}}],[\"sh\",{\"1\":{\"48\":1}}],[\"shell\",{\"1\":{\"21\":2,\"35\":1}}],[\"smtp\",{\"1\":{\"36\":1}}],[\"smc\",{\"1\":{\"27\":1}}],[\"step\",{\"1\":{\"91\":5}}],[\"struct\",{\"1\":{\"69\":3,\"70\":1,\"75\":3,\"77\":1,\"112\":2,\"119\":1,\"126\":1}}],[\"str\",{\"1\":{\"45\":8,\"70\":16,\"77\":9,\"112\":5,\"117\":2,\"121\":3,\"122\":1}}],[\"string\",{\"1\":{\"42\":2,\"43\":2,\"45\":7,\"47\":1,\"48\":1,\"106\":1,\"112\":2,\"117\":2,\"118\":4,\"122\":2}}],[\"strict\",{\"1\":{\"21\":1}}],[\"stdout\",{\"1\":{\"45\":1}}],[\"stdin\",{\"1\":{\"45\":1}}],[\"stdio\",{\"1\":{\"21\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"59\":1,\"66\":1,\"67\":1,\"91\":1,\"97\":1,\"100\":1}}],[\"std\",{\"1\":{\"45\":2,\"50\":1,\"51\":1,\"52\":1,\"55\":2,\"59\":2,\"68\":1,\"69\":1,\"70\":6,\"74\":1,\"75\":1,\"76\":1,\"77\":3,\"91\":2,\"97\":2,\"100\":2,\"112\":10,\"121\":3,\"122\":1}}],[\"study\",{\"1\":{\"39\":1}}],[\"stackoverflow\",{\"1\":{\"121\":1}}],[\"stacktrace\",{\"1\":{\"110\":1}}],[\"static\",{\"0\":{\"113\":1},\"1\":{\"69\":10,\"70\":1,\"75\":3,\"121\":11,\"122\":4,\"123\":1}}],[\"status\",{\"1\":{\"35\":1}}],[\"starts\",{\"1\":{\"141\":1}}],[\"start\",{\"1\":{\"35\":1,\"110\":2}}],[\"stop\",{\"1\":{\"35\":1,\"141\":1}}],[\"scripts\",{\"1\":{\"21\":1}}],[\"spawn\",{\"0\":{\"21\":1},\"1\":{\"21\":3}}],[\"superuser\",{\"1\":{\"141\":1}}],[\"sunface\",{\"1\":{\"122\":1}}],[\"sunocean\",{\"1\":{\"72\":1}}],[\"succ\",{\"1\":{\"112\":4}}],[\"successor\",{\"1\":{\"112\":5}}],[\"subsystem\",{\"1\":{\"128\":1}}],[\"substr\",{\"1\":{\"42\":1,\"43\":1}}],[\"substring\",{\"1\":{\"39\":1,\"48\":1}}],[\"submit\",{\"1\":{\"50\":1,\"51\":1,\"52\":1}}],[\"sub2\",{\"1\":{\"45\":9}}],[\"sub1\",{\"1\":{\"45\":9}}],[\"su\",{\"1\":{\"20\":2}}],[\"sudo\",{\"1\":{\"20\":1,\"35\":5,\"36\":3,\"133\":2,\"135\":3,\"138\":1,\"139\":2}}],[\"self\",{\"1\":{\"112\":39,\"123\":1}}],[\"sequence\",{\"1\":{\"70\":3,\"77\":2}}],[\"seq\",{\"1\":{\"70\":5,\"77\":2}}],[\"seed\",{\"1\":{\"69\":2,\"70\":5}}],[\"server\",{\"1\":{\"36\":2,\"140\":2}}],[\"servername\",{\"1\":{\"36\":1}}],[\"service\",{\"1\":{\"35\":1,\"135\":2}}],[\"security\",{\"1\":{\"21\":1}}],[\"set\",{\"1\":{\"16\":1}}],[\"setup\",{\"1\":{\"15\":1}}],[\"sensitive\",{\"1\":{\"8\":1}}],[\"s\",{\"1\":{\"4\":1,\"6\":1,\"9\":1,\"42\":8,\"43\":11,\"45\":17,\"50\":1,\"51\":1,\"52\":1,\"69\":3,\"87\":1,\"89\":2,\"91\":1,\"112\":4,\"131\":1}}],[\"（\",{\"0\":{\"51\":1,\"107\":1},\"1\":{\"4\":1,\"15\":1,\"16\":3,\"36\":1,\"43\":1,\"69\":1,\"79\":1,\"80\":4,\"81\":4,\"82\":3,\"83\":3,\"86\":1,\"91\":1,\"106\":2,\"108\":1,\"109\":1,\"111\":1,\"129\":1,\"141\":2}}],[\"或表中\",{\"1\":{\"79\":3}}],[\"或者\",{\"1\":{\"16\":1,\"26\":1,\"27\":1,\"36\":1,\"79\":3,\"129\":1}}],[\"或\",{\"1\":{\"4\":1,\"10\":2,\"79\":3,\"81\":1,\"82\":1,\"83\":1,\"88\":1,\"109\":2}}],[\"的话\",{\"1\":{\"15\":1,\"16\":2,\"141\":1}}],[\"的\",{\"0\":{\"14\":1,\"17\":1,\"22\":2,\"65\":1,\"77\":1,\"79\":1,\"101\":1,\"124\":1,\"125\":1},\"1\":{\"4\":3,\"5\":2,\"6\":2,\"7\":1,\"11\":2,\"12\":3,\"13\":4,\"15\":5,\"16\":9,\"18\":1,\"20\":2,\"21\":2,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":5,\"30\":1,\"31\":5,\"33\":1,\"35\":2,\"36\":3,\"37\":3,\"40\":1,\"43\":1,\"45\":9,\"49\":1,\"50\":1,\"52\":2,\"66\":3,\"67\":7,\"68\":2,\"69\":6,\"70\":3,\"71\":1,\"74\":3,\"75\":5,\"77\":1,\"79\":39,\"80\":3,\"81\":3,\"82\":3,\"83\":1,\"86\":2,\"87\":7,\"91\":9,\"99\":1,\"100\":1,\"104\":2,\"105\":3,\"106\":4,\"108\":3,\"109\":5,\"110\":2,\"111\":8,\"112\":25,\"120\":5,\"121\":2,\"122\":2,\"125\":2,\"126\":1,\"128\":1,\"129\":1,\"130\":6,\"132\":2,\"133\":2,\"135\":3,\"139\":6,\"140\":3,\"141\":6}}],[\"从\",{\"1\":{\"4\":1,\"43\":1,\"80\":1,\"112\":2,\"130\":1}}],[\"和\",{\"0\":{\"3\":1,\"112\":1},\"1\":{\"15\":2,\"16\":1,\"22\":1,\"27\":1,\"35\":1,\"36\":1,\"45\":1,\"79\":5,\"83\":1,\"87\":2,\"97\":1,\"104\":1,\"106\":4,\"108\":1,\"135\":1,\"139\":1}}],[\"：\",{\"0\":{\"3\":1,\"22\":1},\"1\":{\"6\":1,\"9\":1,\"10\":1,\"15\":1,\"16\":4,\"18\":3,\"20\":2,\"21\":2,\"22\":3,\"23\":1,\"24\":1,\"27\":3,\"28\":3,\"31\":3,\"35\":2,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"45\":2,\"46\":1,\"47\":1,\"49\":2,\"50\":2,\"51\":2,\"52\":1,\"66\":1,\"67\":1,\"69\":2,\"70\":1,\"71\":1,\"74\":1,\"79\":4,\"80\":9,\"81\":12,\"82\":11,\"83\":3,\"85\":1,\"87\":5,\"91\":1,\"92\":1,\"93\":1,\"97\":1,\"98\":1,\"100\":1,\"109\":2,\"110\":2,\"111\":2,\"112\":1,\"115\":1,\"117\":1,\"118\":1,\"119\":1,\"120\":1,\"121\":3,\"125\":2,\"129\":2,\"130\":3,\"131\":2,\"132\":1,\"133\":1,\"135\":3,\"139\":5,\"140\":1,\"141\":2}}],[\"！\",{\"0\":{\"28\":1},\"1\":{\"1\":1,\"135\":1}}],[\"页面\",{\"1\":{\"28\":1}}],[\"页\",{\"0\":{\"1\":1}}],[\"介绍\",{\"0\":{\"1\":1},\"1\":{\"79\":1,\"129\":1}}],[\"博客\",{\"0\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,tt(t,r,n)]):e==="search"?self.postMessage([e,o,Z(t,r,n)]):self.postMessage({suggestions:[e,o,tt(t,r,n)],results:[e,o,Z(t,r,n)]})};
//# sourceMappingURL=index.js.map
