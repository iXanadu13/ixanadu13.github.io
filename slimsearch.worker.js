const{entries:$}=Object,{fromEntries:et}=Object,st="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,r=o+s,c=new Uint8Array(r*o).fill(s+1);for(let i=0;i<o;++i)c[i]=i;for(let i=1;i<r;++i)c[i*o]=i;return q(e,t,s,n,c,1,o,""),n},q=(e,t,s,n,o,r,c,i)=>{const h=r*c;t:for(const u of e.keys())if(u===_){const l=o[h-1];l<=s&&n.set(i,[e.get(u),l])}else{let l=r;for(let f=0;f<u.length;++f,++l){const m=u[f],g=c*l,y=g-c;let d=o[g];const a=Math.max(0,l-s-1),w=Math.min(c-1,l+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,l,c,i+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const c of o.keys())if(c!==_&&c.startsWith(r)){const i=new Map;return i.set(c.slice(r.length),o.get(c)),new z(i,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new S(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const c=Math.min(s-n,r.length);let i=1;for(;i<c&&t[n+i]===r[i];)++i;const h=e.get(r);if(i===r.length)e=h;else{const u=new Map;u.set(r.slice(i),h),e.set(t.slice(n,n+i),u),e.delete(r),e=u}n+=i;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)R(n);else if(s.size===1){const[o,r]=s.entries().next().value;A(n,o,r)}}},R=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&A(e.slice(0,-1),n,o)}},A=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],rt=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ct="and_not",ut=(e,t)=>{e.includes(t)||e.push(t)},B=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:c}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,c),B(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:c,match:i}=t.get(n);B(o.terms,c),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,i)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:c,b:i,d:h}=r;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(c+1)/(e+c*(1-i+i*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t);r?.get(s)==null?H(e,s,t,n):r.get(s)<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,r.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},Y={minDirtFactor:.1,minDirtCount:20},yt={..._t,...Y},K=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const c=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:c,terms:[],match:{}})}return s},U=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},T=(e,t,s,n,o,r,c,i,h,u=new Map)=>{if(r==null)return u;for(const l of Object.keys(c)){const f=c[l],m=e._fieldIds[l],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,h),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ut(x.terms,t);const v=G(x.match,s);v?v.push(l):x.match[s]=[l]}else u.set(a,{score:k,terms:[t],match:{[s]:[l]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:c,maxFuzzy:i,bm25:h}=n,{fuzzy:u,prefix:l}={...J.weights,...c},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,h);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(i,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=l*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,h,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,h,m)}return m},Q=(e,t,s={})=>{if(t===K)return wt(e,s);if(typeof t!="string"){const l={...s,...t,queries:void 0},f=t.queries.map(m=>Q(e,m,l));return U(f,l.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,c={tokenize:n,processTerm:o,...r,...s},{tokenize:i,processTerm:h}=c,u=i(t).flatMap(l=>h(l)).filter(l=>!!l).map(at(c)).map(l=>xt(e,l,c));return U(u,c.combineWith)},X=(e,t,s={})=>{const n=Q(e,t,s),o=[];for(const[r,{score:c,terms:i,match:h}]of n){const u=i.length||1,l={id:e._documentIds.get(r),score:c*u,terms:Object.keys(h),queryTerms:i,match:h};Object.assign(l,e._storedFields.get(r)),(s.filter==null||s.filter(l))&&o.push(l)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:c}of X(e,t,s)){const i=c.join(" "),h=n.get(i);h!=null?(h.score+=r,h.count+=1):n.set(i,{score:r,terms:c,count:1})}const o=[];for(const[r,{score:c,terms:i,count:h}]of n)o.push({suggestion:r,terms:i,score:c/h});return o.sort(P),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=Y,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,c]of n)o[r]=Object.fromEntries(c);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},c)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const i=vt(c);return i._documentCount=e,i._nextId=t,i._idToShortId=new Map,i._fieldIds=s,i._avgFieldLength=n,i._dirtCount=o??0,i._index=new z,i},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,c=kt(e,t);c._documentIds=M(n),c._fieldLength=M(o),c._storedFields=M(r);for(const[i,h]of c._documentIds)c._idToShortId.set(h,i);for(const[i,h]of s){const u=new Map;for(const l of Object.keys(h))u.set(parseInt(l,10),M(h[l]));c._index.set(i,u)}return c},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,c=0;const i=(u,l=!1)=>{let f;c===0?f=u.length>20?`… ${u.slice(-20)}`:u:l?f=u.length+c>100?`${u.slice(0,100-c)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),c+=f.length,l||(o.push(["mark",t]),c+=t.length,c>=100&&o.push(" …"))};let h=s.indexOf(n,r);if(h===-1)return null;for(;h>=0;){const u=h+n.length;if(i(e.slice(r,h)),r=u,c>100)break;h=s.indexOf(n,r)}return c<100&&i(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return X(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:c,score:i}=o,h=r.includes("@"),u=r.includes("#"),[l,f]=r.split(/[#@]/),m=Number(l),g=c.sort((d,a)=>d.length-a.length).filter((d,a)=>c.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(h)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},i]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},i]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},i])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:c}])=>{if(!r){const i=rt(t,o);i&&(r=i.h)}return{title:r,contents:c.map(([i])=>i)}})},tt=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=et($(JSON.parse("{\"/\":{\"documentCount\":133,\"nextId\":133,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\",\"3\":\"2#第二章-形式文法和形式语言\",\"4\":\"2#句型\",\"5\":\"2#句子\",\"6\":\"2#语言\",\"7\":\"2#等价文法\",\"8\":\"2#_1型文法\",\"9\":\"2#_2型文法\",\"10\":\"2#_3型文法\",\"11\":\"2#短语\",\"12\":\"2#直接短语\",\"13\":\"2#句柄\",\"14\":\"3\",\"15\":\"3#前置\",\"16\":\"3#解决ar启动40错误\",\"17\":\"4\",\"18\":\"4#git-merge-failed\",\"19\":\"5\",\"20\":\"5#bash切换用户\",\"21\":\"6\",\"22\":\"7\",\"23\":\"8\",\"24\":\"8#下载iso镜像文件\",\"25\":\"8#下载vmware\",\"26\":\"8#使用macos-unlocker\",\"27\":\"8#创建虚拟机\",\"28\":\"8#mac虚拟机-启动\",\"29\":\"8#ref\",\"30\":\"9\",\"31\":\"9#相关文档\",\"32\":\"9#安装环境\",\"33\":\"9#wsl2-ubuntu-20-04\",\"34\":\"9#nodejs-npm\",\"35\":\"9#mongodb\",\"36\":\"9#yapi安装\",\"37\":\"9#警告\",\"38\":\"9#ref\",\"39\":\"10\",\"40\":\"10#solution-1-埃氏筛\",\"41\":\"10#solution-2-线性筛-欧拉筛\",\"42\":\"10#solution-3-埃氏筛-bitset\",\"43\":\"11\",\"44\":\"11#排序算法总览\",\"45\":\"11#冒泡排序\",\"46\":\"11#选择排序\",\"47\":\"11#插入排序\",\"48\":\"11#希尔排序\",\"49\":\"11#归并排序\",\"50\":\"11#快速排序\",\"51\":\"11#堆排序\",\"52\":\"11#计数排序\",\"53\":\"11#桶排序\",\"54\":\"11#基数排序\",\"55\":\"12\",\"56\":\"12#共用内存\",\"57\":\"12#size计算\",\"58\":\"13\",\"59\":\"13#原始版本\",\"60\":\"13#使用hash替代递归\",\"61\":\"13#随机选择多种加密算法\",\"62\":\"13#ref\",\"63\":\"14\",\"64\":\"14#constexpr初探——阶乘\",\"65\":\"14#模板元编程——斐波那契数列\",\"66\":\"14#自定义后缀\",\"67\":\"14#简易的c-编译时字符串混淆\",\"68\":\"14#ref\",\"69\":\"15\",\"70\":\"15#题目大意\",\"71\":\"15#input\",\"72\":\"15#output\",\"73\":\"15#sample-input\",\"74\":\"15#sample-output\",\"75\":\"15#solution\",\"76\":\"16\",\"77\":\"16#题目大意\",\"78\":\"16#input\",\"79\":\"16#sample-input\",\"80\":\"16#sample-output\",\"81\":\"16#solution\",\"82\":\"17\",\"83\":\"17#题目大意\",\"84\":\"17#solution\",\"85\":\"18\",\"86\":\"18#主要日志系统\",\"87\":\"18#jul\",\"88\":\"18#log4j\",\"89\":\"18#logback\",\"90\":\"18#log4j2\",\"91\":\"18#日志facade-抽象框架\",\"92\":\"18#common-logging\",\"93\":\"18#slf4j\",\"94\":\"18#注意事项\",\"95\":\"19\",\"96\":\"19#使用原生指针和unsafe实现自引用\",\"97\":\"19#将局部变量生命周期变为-static\",\"98\":\"19#problem\",\"99\":\"19#solution\",\"100\":\"19#错误处理相关\",\"101\":\"19#将option类型转换为result类型\",\"102\":\"19#将result类型转换为option类型\",\"103\":\"19#option-transpose\",\"104\":\"19#全局变量\",\"105\":\"19#启动时初始化-后续只读\",\"106\":\"19#运行时需要修改\",\"107\":\"19#ref\",\"108\":\"20\",\"109\":\"20#使用指定的rust版本\",\"110\":\"20#pub关键字\",\"111\":\"20#ref\",\"112\":\"21\",\"113\":\"21#基本配置\",\"114\":\"21#迁移\",\"115\":\"21#常用指令\",\"116\":\"21#连接wsl桌面\",\"117\":\"21#ref\",\"118\":\"22\",\"119\":\"23\",\"120\":\"23#安装kali-linux\",\"121\":\"23#安装黑科技kex\",\"122\":\"23#运行kex\",\"123\":\"23#最终解决方法\",\"124\":\"24\",\"125\":\"25\",\"126\":\"26\",\"127\":\"27\",\"128\":\"28\",\"129\":\"29\",\"130\":\"30\",\"131\":\"31\",\"132\":\"32\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[2,2],\"2\":[5],\"3\":[6],\"4\":[1,29],\"5\":[1,12],\"6\":[1,32],\"7\":[2,17],\"8\":[2,8],\"9\":[2,45],\"10\":[2,33],\"11\":[1,16],\"12\":[2,18],\"13\":[1,26],\"14\":[11],\"15\":[1,90],\"16\":[5,160],\"17\":[5],\"18\":[4,51],\"19\":[3],\"20\":[3,19],\"21\":[10,95],\"22\":[26,33],\"23\":[6,19],\"24\":[3,6],\"25\":[2,16],\"26\":[4,43],\"27\":[2,90],\"28\":[5,29],\"29\":[1],\"30\":[3,21],\"31\":[2,116],\"32\":[2,12],\"33\":[4,10],\"34\":[4,7],\"35\":[1,74],\"36\":[2,153],\"37\":[1,28],\"38\":[1,48],\"39\":[2,26],\"40\":[6,84],\"41\":[9,87],\"42\":[8,97],\"43\":[5],\"44\":[3,37],\"45\":[1,56],\"46\":[2,1],\"47\":[1,1],\"48\":[2,1],\"49\":[2,67],\"50\":[2,1],\"51\":[1,1],\"52\":[2,1],\"53\":[2,1],\"54\":[1,1],\"55\":[5],\"56\":[2,51],\"57\":[2,63],\"58\":[8,25],\"59\":[2,152],\"60\":[4,165],\"61\":[4,32],\"62\":[1,19],\"63\":[4],\"64\":[4,59],\"65\":[9,67],\"66\":[2,26],\"67\":[7,119],\"68\":[1,30],\"69\":[8,17],\"70\":[2,46],\"71\":[1,65],\"72\":[1,13],\"73\":[3,10],\"74\":[3,3],\"75\":[1,195],\"76\":[9,17],\"77\":[2,26],\"78\":[1,19],\"79\":[3,4],\"80\":[3,4],\"81\":[1,83],\"82\":[7,17],\"83\":[2,21],\"84\":[1,70],\"85\":[5],\"86\":[3],\"87\":[1,12],\"88\":[1,18],\"89\":[1,21],\"90\":[1,68],\"91\":[6],\"92\":[3,60],\"93\":[1,106],\"94\":[1,89],\"95\":[4,72],\"96\":[8,236],\"97\":[6],\"98\":[1],\"99\":[1,8],\"100\":[2],\"101\":[6,46],\"102\":[6,56],\"103\":[5,39],\"104\":[1,55],\"105\":[6,103],\"106\":[4,56],\"107\":[1,30],\"108\":[7],\"109\":[5,93],\"110\":[2,56],\"111\":[1,18],\"112\":[2,31],\"113\":[2,42],\"114\":[1,83],\"115\":[2,21],\"116\":[3,22],\"117\":[1,10],\"118\":[5,111],\"119\":[10],\"120\":[4,6],\"121\":[4,8],\"122\":[2,138],\"123\":[3,45],\"124\":[7,156],\"125\":[0,4],\"126\":[1],\"127\":[1],\"128\":[1],\"129\":[1],\"130\":[1],\"131\":[1],\"132\":[1]},\"averageFieldLength\":[3.2706766917293235,45.47717477254437],\"storedFields\":{\"0\":{\"h\":\"博客主页\"},\"1\":{\"h\":\"介绍页\",\"t\":[\"空空如也！\"]},\"2\":{\"h\":\"编译原理期末复习笔记\"},\"3\":{\"h\":\"第二章：形式文法和形式语言\"},\"4\":{\"h\":\"句型\",\"t\":[\"从文法的开始符号出发进行零步或多于零步的推导得到的文法符号串（S =*=> α）。句型可以既包含终结符号又包含非终结符号。\"]},\"5\":{\"h\":\"句子\",\"t\":[\"只包含终结符号的句型称为句子。句子是一种特殊的句型。\"]},\"6\":{\"h\":\"语言\",\"t\":[\"文法 G 推导出的所有句子组成的集合，称为语言，记为 L(G)，即：\",\"L(G)={x∣S=∗>x且x∈VT​∗}\"]},\"7\":{\"h\":\"等价文法\",\"t\":[\"一个文法对应一个语言，但一个语言可能由若干个文法产生它，这若干个文法是等价的，称为等价文法。\"]},\"8\":{\"h\":\"1型文法\",\"t\":[\"上下文有关文法，Context Sensitive Grammar\"]},\"9\":{\"h\":\"2型文法\",\"t\":[\"上下文无关文法，Context Free Grammar\",\"要求产生式左边只有1个非终结符号，高级程序设计语言大部分语法结构使用2型文法描述。\",\"例如：\",\"S -> aB | bA A -> a | aS | bAA B -> b | bS | aBB\"]},\"10\":{\"h\":\"3型文法\",\"t\":[\"正规文法，Regular Grammar\",\"对于每个产生式，只能是以下两种形式之一：\",\"(1) A -> a 或 A -> aB // 右线性文法 (2) A -> a 或 A -> Ba // 左线性文法\"]},\"11\":{\"h\":\"短语\",\"t\":[\"一棵子树的所有叶子自左至右排列起来形成一个相对于子树根的短语。\"]},\"12\":{\"h\":\"直接短语\",\"t\":[\"仅有父子两代的一棵子树，它的所有叶子自左至右排列起来所形成的符号串\"]},\"13\":{\"h\":\"句柄\",\"t\":[\"一个句型的分析树中最左最下那棵只有父子两代的子树的所有叶子的自左至右排列。\",\"最左直接短语称为句柄。\",\"短语、直接短语、句柄\"]},\"14\":{\"h\":\"解决在windows 11中无法使用eNSP的问题\"},\"15\":{\"h\":\"前置\",\"t\":[\"eNSP 1.3.00.100 Setup.exe\",\"VirtualBox-5.2.44-139111-Win.exe\",\"WinPcap_4_1_3.exe\",\"首先，你必须下载好这些软件，复制这些文件名自行google都不难下载到。（PS：基本上都是百度网盘链接，没会员的话估计要等一会儿）\",\"至于版本，不需要和我这里完全相同，以具体你搜到的教程为准。但是VirtualBox版本必须是5.x开头的，那些新版的7.x的肯定不行，如果你已经通过VirtualBox 7.x安装了虚拟机，那么很遗憾你必须在VirtualBox 7.x和eNSP之间做出取舍了。\",\"安装顺序看搜到的教程即可，不再赘述。\"]},\"16\":{\"h\":\"解决AR启动40错误\",\"t\":[\"当你满心欢喜地安装完eNSP，可能还顺便完成了计算机网络的HTTP、ARP实验，似乎一切正常。但如果你尝试启动一个AR路由器，你就会收到一个编号为40的启动错误。（其实启动FW设备也会这样，笔者也是在做NAT实验时发现，无论如何都绕不开AR路由器...）\",\"首先，请根据跳出的帮助，一步步照着完成，如果确认已经全部完成，但还是无法启动AR设备，而且你电脑还是Win11的话，那请接着看下去：\",\"首先，以管理员身份运行cmd，输入bcdedit：\",\"确认这里的hypervisorlaunchtype项的值为Off，如果不为Off，运行bcdedit /set hypervisorlaunchtype off即可。\",\"注意：执行完这条指令后必须重启计算机才能生效。 （不能关机再开机，必须选择重新启动）\",\"如果你和我一样是Windows 11 家庭版，可能还需要继续看下去：\",\"在cmd中输入regedit打开注册表编辑器，编辑->查找->输入CachedDrtmAuthIndex，不出意外的话能跳到类似于计算机\\\\HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\ControlSet001\\\\Control\\\\DeviceGuard的路径，然后把这里的两个项或者三个项的值均修改为0，再重启电脑。（我的三项初始值分别为0,1,1）\",\"重启完成后，就能愉快地使用AR路由器了~\"]},\"17\":{\"h\":\"记录有关Git的命令\"},\"18\":{\"h\":\"Git Merge Failed\",\"t\":[\"试图合并分支时，有时候会遇到这样的报错： Git Merge Failed fatal: You have not concluded your merge (MERGE_HEAD exists).\",\"有2种选择：\",\"输入git commit -m \\\"commit info\\\"合并分支。\",\"放弃本地分支，直接覆盖：\",\"git reset --hard git pull\"]},\"19\":{\"h\":\"Linux指令备忘录\"},\"20\":{\"h\":\"bash切换用户\",\"t\":[\"首先为其设置password：\",\"sudo passwd 要切换的用户名\",\"然后使用su指令切换即可：\",\"su 要切换的用户名\"]},\"21\":{\"h\":\"Nodejs中报错“Error: spawn EINVAL”\",\"t\":[\"这是由于执行子进程存在安全漏洞，因此在18.x, 20.x, 21.x版本中直接禁止了。\",\"详见：https://nodejs.org/en/blog/vulnerability/april-2024-security-releases-2\",\"需要在报错的包对应的scripts/install.js文件中加上shell: true：\",\"'use strict' const os = require('os'); const path = require('path'); const spawn = require('child_process').spawn; const gypArgs = ['rebuild']; if (process.env.NODE_PTY_DEBUG) { gypArgs.push('--debug'); } const gypProcess = spawn(os.platform() === 'win32' ? 'node-gyp.cmd' : 'node-gyp', gypArgs, { shell: true, cwd: path.join(__dirname, '..'), stdio: 'inherit' }); gypProcess.on('exit', function (code) { process.exit(code); });\"]},\"22\":{\"h\":\"解决vscode报错：找不到“cookie”的类型定义文件。程序包含该文件是因为: 隐式类型库 \\\"cookie\\\" 的入口点ts\",\"t\":[\"第一步：清理yarn缓存\",\"yarn cache clean\",\"第二步：删除node_modules文件夹和yarn.lock\",\"第三步：重新下载依赖\",\"yarn install\",\"然后你就会发现报错已经消失辣~\"]},\"23\":{\"h\":\"在VMware中安装MacOS虚拟机\",\"t\":[\"写在前面：如果宿主机是AMD的cpu，不需要再尝试了，直接放弃就行\"]},\"24\":{\"h\":\"下载iso镜像文件\",\"t\":[\"我下载的是这个：\"]},\"25\":{\"h\":\"下载VMware\",\"t\":[\"这个不多说，网上找个就行，我的是VMware Workstation 17 Pro\"]},\"26\":{\"h\":\"使用macOS Unlocker\",\"t\":[\"直接把仓库git clone或者下载下来即可，接着找到需要的win-install.cmd，右键以管理员身份运行。\",\"注意运行之前先把VMware关了，不然会遇到Permission Denied。\",\"如果忘关了，关闭VMware之后重新运行即可。\"]},\"27\":{\"h\":\"创建虚拟机\",\"t\":[\"打开VMware Workstation，右键新建虚拟机\",\"选择自定义安装\",\"硬件兼容性\",\"这里我使用了默认设置\",\"选择稍后安装映像文件\",\"选择操作系统类型\",\"设置虚拟机存放位置\",\"设置处理器数量\",\"我设置的是1个处理器和4个内核，可视情况调整\",\"虚拟机内存\",\"我使用的是默认值4096MB\",\"网络类型设置\",\"这里选择NAT或者桥接都行\",\"I/O控制器类型\",\"使用默认值\",\"磁盘类型\",\"使用默认值\",\"磁盘容量设置\",\"虚拟磁盘存放位置\",\"至此，虚拟机创建完成\",\"把下载好的iso镜像文件挂载到虚拟机\",\"右键你创建好的虚拟机，点击“设置”：\",\"修改.vmx文件\",\"找到存放vm的路径：\",\"使用记事本打开该文件，在最下面新开一行，加入以下内容：\",\"smc.version = \\\"0\\\"\"]},\"28\":{\"h\":\"mac虚拟机，启动！\",\"t\":[\"打开后会看到一个苹果图案，以及进度条。进度条走完之后就能进入以下页面：\",\"选择“简体中文”。\",\"接下来安装系统：\",\"等待安装完成：\"]},\"29\":{\"h\":\"Ref\"},\"30\":{\"h\":\"Yapi安装教程\",\"t\":[\"作为一个已经停止维护的项目，Yapi 安装过程中比较容易踩坑，这里记录一下安装过程。\"]},\"31\":{\"h\":\"相关文档\",\"t\":[\"https://hellosean1025.github.io/yapi/devops/index.html#%e5%ae%89%e8%a3%85\",\"文档里提到的方式一无法成功，存在两个问题：\",\"淘宝镜像源地址已由https://registry.npm.taobao.org变更为https://registry.npmmirror.com\",\"可视化部署程序中，仍然尝试旧的yapi存档网站/错误淘宝镜像源地址的下载安装包，而这些网站已无法访问。\",\"因此，只能使用方式二：命令行部署。\",\"而Yapi不支持高版本的node，如果采用过高版本会出现一连串类似以下的报错，无法使用：\",\"yapi (node:11836) Warning: Accessing non-existent property 'cat' of module exports inside circular dependency\",\"而我又不希望特地为了yapi频繁使用nvm切换本地node版本，因此直接在WSL2 Ubuntu 20.04上安装yapi。\"]},\"32\":{\"h\":\"安装环境\",\"t\":[\"WSL2 Ubuntu 20.04\",\"nodejs 10.19.0\",\"npm\",\"MongoDB v3.6.8\"]},\"33\":{\"h\":\"WSL2 Ubuntu 20.04\",\"t\":[\"不再赘述，可以参考我的另一篇文章\"]},\"34\":{\"h\":\"nodejs && npm\",\"t\":[\"apt-get install nodejs apt-get install npm\"]},\"35\":{\"h\":\"MongoDB\",\"t\":[\"sudo apt install mongodb\",\"MongoDB 目前是一个 systemd 服务，我们可以使用 systemctl 来检查和修改它的状态：\",\"sudo systemctl status mongodb sudo systemctl stop mongodb sudo systemctl start mongodb\",\"配置MongoDB用户名和密码：\",\"mongo # 进入 MongoDB shell 后，切换到数据库管理员 use admin # 创建 root 用户 db.createUser({user:\\\"admin\\\", pwd:\\\"admin123\\\", roles:[{role:\\\"root\\\", db:\\\"admin\\\"}]}) # 切换到数据库 yapi use yapi # 创建 yapi 管理员用户 db.createUser({user:\\\"yapiAdmin\\\", pwd:\\\"yapi123\\\", roles:[{role:\\\"dbOwner\\\", db:\\\"yapi\\\"}]}) # 退出 exit # 重新启动MongoDB并连接创建的用户 sudo service mongod restart\"]},\"36\":{\"h\":\"Yapi安装\",\"t\":[\"不要把Yapi安装在/usr/bin/目录下，否则会出现权限问题。\",\"cd /usr/local/ mkdir yapi cd yapi git clone https://github.com/YMFE/yapi.git vendors //或者下载 zip 包解压到 vendors 目录（clone 整个仓库大概 140+ M，可以通过 `git clone --depth=1 https://github.com/YMFE/yapi.git vendors` 命令减少，大概 10+ M） cp vendors/config_example.json ./config.json //复制完成后请修改相关配置 vim config.json //修改相关配置\",\"{ \\\"port\\\": \\\"3000\\\", \\\"adminAccount\\\": \\\"admin@admin.com\\\", // 可以改成你的邮箱 \\\"timeout\\\":120000, \\\"db\\\": { \\\"servername\\\": \\\"127.0.0.1\\\", \\\"DATABASE\\\": \\\"yapi\\\", \\\"port\\\": 27017, \\\"user\\\": \\\"yapiAdmin\\\", \\\"pass\\\": \\\"yapi123\\\", \\\"authSource\\\": \\\"\\\" }, \\\"mail\\\": { \\\"enable\\\": true, \\\"host\\\": \\\"smtp.163.com\\\", \\\"port\\\": 465, \\\"from\\\": \\\"***@163.com\\\", \\\"auth\\\": { \\\"user\\\": \\\"***@163.com\\\", \\\"pass\\\": \\\"*****\\\" } } }\",\"保存并退出。\",\"cd vendors sudo npm install --production --registry https://registry.npmmirror.com sudo npm run install-server //安装程序会初始化数据库索引和管理员账号，管理员账号名可在 config.json 配置 sudo node server/app.js //启动服务器后，请访问 127.0.0.1:{config.json配置的端口}，初次运行会有个编译的过程，请耐心等候\",\"然后就可以在主机浏览器直接通过http://localhost:3000访问 Yapi 了。管理员初始账号见config.json文件，密码为ymfe.org。\"]},\"37\":{\"h\":\"警告\",\"t\":[\"笔者直接安装在个人笔记本的WSL2中，没有考虑安全方面的问题。如安装在生产环境中，请务必做好防护措施，否则产生的损失后果自负。\"]},\"38\":{\"h\":\"Ref\",\"t\":[\"https://hellosean1025.github.io/yapi/devops/index.html#%e5%ae%89%e8%a3%85\",\"https://juejin.cn/post/6953555933733584904\",\"https://blog.csdn.net/weixin_47679150/article/details/107918607\",\"https://shawchen08.github.io/2019/04/04/yapi-deploy/\",\"https://longdada.me/ubuntu-20-04-install-yapi/\",\"https://zhuanlan.zhihu.com/p/655022723\"]},\"39\":{\"h\":\"素数筛\",\"t\":[\"题目传送门：洛谷3383\",\"题意：给定一个范围 n ，有 q 个询问，每次输出第 k 小的素数。\"]},\"40\":{\"h\":\"Solution 1: 埃氏筛\",\"t\":[\"时间复杂度[1]：O(n⋅loglogn​)\",\"注意，这里的g[x] == 1表示确定x不是素数\",\"#include <iostream> #include <vector> typedef long long ll; using namespace std; const int N = 1e8 + 5; bool g[N]; int main(){ ios::sync_with_stdio(false); cin.tie(0),cout.tie(0); g[0] = 1; g[1] = 1; for(int i = 2; i < 10000; ++i){ if (g[i]) continue; for (int j = i * i; j<N; j+=i) { g[j] = true; } } int n,q,cnt = 0; cin >> n >> q; vector<int> prime(n+2); for (int i = 2; i <= n; ++i) { if (!g[i]) prime[++cnt] = i; } while (q--){ int x; cin>>x; cout << prime[x] << '\\\\n'; } return 0; }\",\"测评用时：1.44s submit 1\"]},\"41\":{\"h\":\"Solution 2: 线性筛（欧拉筛）\",\"t\":[\"线性筛避免了对一个合数重复标记，达到了线性时间复杂度\",\"时间复杂度：O(n)\",\"#include <iostream> #include <vector> typedef long long ll; using namespace std; const int N = 1e8 + 5; int main(){ ios::sync_with_stdio(false); cin.tie(0),cout.tie(0); int n,q; cin >> n >> q; vector<bool> g(N); vector<int> prime; for (int i = 2; i <= n; ++i) { if (!g[i]){ prime.push_back(i); } for (int pri_j : prime) { int mul = i * pri_j; if (mul > n) break; g[mul] = true; if (i % pri_j == 0){ break; } } } while (q--){ int x; cin>>x; cout << prime[x-1] << '\\\\n'; } return 0; }\",\"测评用时：0.75s submit 2\"]},\"42\":{\"h\":\"Solution 3: 埃氏筛+bitset\",\"t\":[\"由于bitset、vector<bool>存在常数优化，埃氏筛+bitset的效率可以接近线性筛\",\"#include <iostream> #include <vector> #include <bitset> typedef long long ll; using namespace std; const int N = 1e8 + 5; int main(){ ios::sync_with_stdio(false); cin.tie(0),cout.tie(0); bitset<N> g; g[0] = 1; g[1] = 1; for(int i = 2; i < 10000; ++i){ if (g[i]) continue; for (int j = i * i; j<N; j+=i) { g[j] = true; } } int n,q,cnt = 0; cin >> n >> q; vector<int> prime(n+2); for (int i = 2; i <= n; ++i) { if (!g[i]) prime[++cnt] = i; } while (q--){ int x; cin>>x; cout << prime[x] << '\\\\n'; } return 0; }\",\"测评用时：0.82s submit 3\",\"只考虑筛的过程，如果要取出素数还需O(n)↩︎\"]},\"43\":{\"h\":\"常见排序算法及其实现\"},\"44\":{\"h\":\"排序算法总览\",\"t\":[\"排序算法\",\"平均时间复杂度\",\"最好\",\"最坏\",\"空间复杂度\",\"稳定性\",\"冒泡排序\",\"O(n^2)\",\"O(n)\",\"O(n^2)\",\"O(1)\",\"稳定\",\"选择排序\",\"O(n^2)\",\"O(n^2)\",\"O(n^2)\",\"O(1)\",\"不稳定\",\"插入排序\",\"O(n^2)\",\"O(n)\",\"O(n^2)\",\"O(1)\",\"稳定\",\"希尔排序\",\"O(nlog²n)\",\"O(nlog²n)\",\"O(nlog²n)\",\"O(1)\",\"不稳定\",\"归并排序\",\"O(nlogn)\",\"O(nlogn)\",\"O(nlogn)\",\"O(n)\",\"稳定\",\"快速排序\",\"O(nlogn)\",\"O(nlogn)\",\"O(n^2)\",\"O(logn)\",\"不稳定\",\"堆排序\",\"O(nlogn)\",\"O(nlogn)\",\"O(nlogn)\",\"O(1)\",\"不稳定\",\"计数排序\",\"O(n+m)\",\"O(n+m)\",\"O(n+m)\",\"O(m)\",\"稳定\",\"桶排序\",\"O(n)\",\"O(n)\",\"O(n^2)\",\"O(n)\",\"稳定\",\"基数排序\",\"O(n·k)\",\"O(n·k)\",\"O(n·k)\",\"O(n+k)\",\"稳定\"]},\"45\":{\"h\":\"冒泡排序\",\"t\":[\"#include <bits/stdc++.h> using namespace std; int main(){ ios::sync_with_stdio(false); cin.tie(0),cout.tie(0); int n; cin >> n; vector<int> arr(n); for (auto &it : arr) cin >> it; for (int i = n-1; i > 0; --i) { bool sorted = true; for (int j = 0; j < i; ++j) { if (arr[j] > arr[j+1]) { swap(arr[j], arr[j+1]); sorted = false; } } if (sorted) break; } for (auto e : arr) cout << e << ' '; return 0; }\"]},\"46\":{\"h\":\"选择排序\",\"t\":[\"TODO\"]},\"47\":{\"h\":\"插入排序\",\"t\":[\"TODO\"]},\"48\":{\"h\":\"希尔排序\",\"t\":[\"TODO\"]},\"49\":{\"h\":\"归并排序\",\"t\":[\"#include <bits/stdc++.h> typedef long long ll; using namespace std; constexpr int N = 1e5 + 5; int a[N], b[N]; void merge(int l, int mid, int r){ if (l==r) return; if (l+1 == r){ if (a[l] > a[r]){ swap(a[l], a[r]); } return; } merge(l, (l+mid)>>1, mid); merge(mid+1, (mid+1+r)>>1, r); int i = l, j = mid+1; for (int k = l; k <= r; ++k) { if (j>r || i<=mid && a[i]<=a[j]) b[k]=a[i++]; else b[k]=a[j++]; } memcpy(a+l, b+l, (r-l+1)* sizeof(int)); // for(int k=l;k<=r;k++) a[k]=b[k]; } int main(){ ios::sync_with_stdio(false); cin.tie(0),cout.tie(0); int n; cin >> n; for (int i = 1; i <= n; ++i) cin >> a[i]; merge(1, (1+n)>>1, n); for (int i = 1; i <= n; ++i) cout << a[i] << ' '; return 0; }\"]},\"50\":{\"h\":\"快速排序\",\"t\":[\"TODO\"]},\"51\":{\"h\":\"堆排序\",\"t\":[\"TODO\"]},\"52\":{\"h\":\"计数排序\",\"t\":[\"TODO\"]},\"53\":{\"h\":\"桶排序\",\"t\":[\"TODO\"]},\"54\":{\"h\":\"基数排序\",\"t\":[\"TODO\"]},\"55\":{\"h\":\"C语言中的union\"},\"56\":{\"h\":\"共用内存\",\"t\":[\"union中的字段是共用内存的，比如可以用下面的代码判断机器是小端序还是大端序：\",\"#include <stdio.h> union U { char c; int i; }u; int main() { u.i = 1; if(u.c == 1) { printf(\\\"little-endian\\\"); } else { printf(\\\"big-endian\\\"); } }\"]},\"57\":{\"h\":\"size计算\",\"t\":[\"union的大小计算遵循以下的规则：\",\"联合的大小至少是最大成员的大小\",\"当最大成员大小不是最大对齐数的整数倍的时候，则对齐到最大对齐数的整数倍\",\"#include<stdio.h> union Un1 { char c[5]; // 1*5B int i; // 4*1B }; union Un2 { short c[7]; // 2*7B int i; // 4*1B }; int main() { printf(\\\"%d\\\\n\\\", sizeof(union Un1)); // 8 printf(\\\"%d\\\\n\\\", sizeof(union Un2)); // 16 }\"]},\"58\":{\"h\":\"C++中原生编译时字符串混淆实现\",\"t\":[\"C++中具有强大的模板元编程，可以不依赖任何外部库，仅使用C++ std实现编译时的字符串混淆。\"]},\"59\":{\"h\":\"原始版本\",\"t\":[\"在我的另一篇文章中提到过一个C++中字符串混淆的简易版本：\",\"但其中0x55是硬编码的，我们需要引入编译时随机数来消除这一硬编码。\",\"一个可行的编译期间随机数实例：\",\"#include <iostream> namespace { constexpr char time[] = __TIME__; constexpr int DigitToInt(char c) { return c - '0'; } const int seed = DigitToInt(time[7]) + DigitToInt(time[6]) * 10 + DigitToInt(time[4]) * 60 + DigitToInt(time[3]) * 600 + DigitToInt(time[1]) * 3600 + DigitToInt(time[0]) * 36000; } // 根据 N，生成随机数 value template<int N> struct MetaRandomGenerator { private: static constexpr unsigned a = 16807; // 7^5 static constexpr unsigned m = 2147483647; // 2^31 - 1 static constexpr unsigned s = MetaRandomGenerator<N - 1>::value; static constexpr unsigned lo = a * (s & 0xFFFF); // 低 16 位乘以 16807 static constexpr unsigned hi = a * (s >> 16); // 高 16 位乘以 16807 static constexpr unsigned result = lo + hi + ((hi & 0x7FFF) << 16); public: static constexpr unsigned max = m; static constexpr unsigned value = result > m ? result - m : result; }; template<> struct MetaRandomGenerator<0> { static constexpr unsigned value = seed; }; template<int N, int M> struct MetaRandom { static const int value = MetaRandomGenerator<N + 1>::value % M; }; int main() { int x = MetaRandom<__COUNTER__, 20>::value; int y = MetaRandom<__COUNTER__, 114514>::value; return 0; }\",\"但由于MetaRandom定义的模板template<int N, int M>中的N基于递归实现，在N较大时会生成大量递归嵌套。在gcc.godbolt.org上实测，若不额外指定参数，N无法超过225（使用编译参数-std=c++20 -O0）。\"]},\"60\":{\"h\":\"使用Hash替代递归\",\"t\":[\"#include <iostream> #include <cstdint> using namespace std; namespace { constexpr __attribute((always_inline)) uint32_t hash(uint32_t in) { constexpr uint32_t r[]{ 0xdf15236c, 0x16d16793, 0x3a697614, 0xe0fe08e4, 0xa3a53275, 0xccc10ff9, 0xb92fae55, 0xecf491de, 0x36e86773, 0x0ed24a6a, 0xd7153d80, 0x84adf386, 0x17110e76, 0x6d411a6a, 0xcbd41fed, 0x4b1d6b30}; uint32_t out{in ^ r[in & 0xF]}; out ^= std::rotl(in, 020) ^ r[(in >> 010) & 0xF]; out ^= std::rotl(in, 010) ^ r[(in >> 020) & 0xF]; out ^= std::rotr(in, 010) ^ r[(in >> 030) & 0xF]; return out; } template <size_t N> constexpr __attribute((always_inline)) uint32_t hash(char const (&str)[N]) { uint32_t h{}; for (uint32_t i{}; i < N; ++i) h ^= uint32_t(str[i]) << (i % 4 * 8); return hash(h); } template <size_t N> constexpr __attribute((always_inline)) uint32_t constexpr_rand_impl(char const (&file)[N], uint32_t line, uint32_t column = 0x8dc97987) { return hash(hash(__TIME__) ^ hash(file) ^ hash(line) ^ hash(column)); } } #define RANDOM(seed_) (constexpr_rand_impl(__FILE__, seed_)) template <int K, size_t... I> struct MetaString { constexpr __attribute((always_inline)) MetaString(const char *str) :seed_(static_cast<char>(constexpr_rand_impl(__FILE__, K))), buffer_{encrypt(str[I])...} {} const char *decrypt() { // ((cout << \\\"I=\\\" << I << \\\"\\\\n\\\"), ...); for (size_t i = 0; i < sizeof...(I); ++i) buffer_[i] = decrypt(buffer_[i]); buffer_[sizeof...(I)] = 0; return const_cast<const char*>(buffer_); } private: constexpr char encrypt(char c) const { return c ^ seed_; } constexpr char decrypt(char c) const { return encrypt(c); } private: char seed_; volatile char buffer_[sizeof...(I) + 1]; // 避免编译器过度优化 }; template <int K, std::size_t... I> constexpr __attribute((always_inline)) auto index_seq_helper(const char *str, std::index_sequence<I...>) { return MetaString<K, I...>(str).decrypt(); } // constexpr __attribute((always_inline)) const char* operator \\\"\\\"_obf(const char *str, size_t) // { // constexpr auto seq = make_index_sequence<sizeof(str)-1>{}; // return index_seq_helper(str, seq); // } // 注意，sizeof(\\\"123\\\") == 4，但是auto str \\\"123\\\"; sizeof(str) == 8 (返回了const char*长度) // 因此在这里只能使用宏，不能使用自定义后缀 #define STR_OBF(str) (index_seq_helper<__COUNTER__>(str, make_index_sequence<sizeof(str) - 1>{})) int main() { cout << STR_OBF(\\\"Hello, world\\\") << '\\\\n'; return 0; }\",\"注意：以上算法的随机数的分布并不均匀，特别是在取 ai​=i<<n 的情况下，尽管在这一应用场景下我们并不关心这些问题。\"]},\"61\":{\"h\":\"随机选择多种加密算法\",\"t\":[\"上述代码可以对每个字符串生成不同的xor种子，但加密方式都是异或一个随机值。我们可以利用模板偏特化来实现随机选择加密算法：\"]},\"62\":{\"h\":\"Ref\",\"t\":[\"https://sunocean.life/blog/blog/2022/01/28/C++-metastr\",\"https://gist.github.com/KoneLinx/d3601597248bed423daf1a7cf7bd9533\"]},\"63\":{\"h\":\"C++高级特性实例\"},\"64\":{\"h\":\"constexpr初探——阶乘\",\"t\":[\"#include <iostream> using namespace std; constexpr int fac(int n) { return n <= 1 ? 1 : (n * fac(n-1)); } int main() { constexpr auto x = fac(5); }\",\"注意这里的x是在编译期间求值的，生成的汇编代码大致如下：\",\"main: push rbp mov rbp, rsp mov DWORD PTR [rbp-4], 120 mov eax, 0 pop rbp ret\"]},\"65\":{\"h\":\"模板元编程——斐波那契数列\",\"t\":[\"模板元编程是一种广泛应用于C++库开发的编程范式。在巧妙的模板的帮助下，程序员可以在编译时执行算法。C++模板元程序被证明是图灵完备的，因此可以在编译时间内执行大规模的算法。\",\"#include <iostream> using namespace std; template <int N> struct Fibonacci { static constexpr int value = Fibonacci<N - 1>::value + Fibonacci<N - 2>::value; }; template <> struct Fibonacci<1> { static constexpr int value = 1; }; template <> struct Fibonacci<0> { static constexpr int value = 0; }; int main() { constexpr auto x = Fibonacci<20>::value; }\"]},\"66\":{\"h\":\"自定义后缀\",\"t\":[\"#include <iostream> using namespace std; long double operator \\\"\\\"_km(long double); int main() { auto dis = 1.2_km; }\"]},\"67\":{\"h\":\"简易的C++编译时字符串混淆\",\"t\":[\"#include <iostream> using namespace std; template <size_t... I> struct MetaString1 { constexpr __attribute((always_inline)) MetaString1(const char *str) : buffer_{encrypt(str[I])...}{} const char *decrypt() { for (size_t i = 0; i < sizeof...(I); ++i) buffer_[i] = decrypt(buffer_[i]); buffer_[sizeof...(I)] = 0; return const_cast<const char*>(buffer_); } private: constexpr char encrypt(char c) const { return c ^ 0x55; } constexpr char decrypt(char c) const { return encrypt(c); } private: volatile char buffer_[sizeof...(I) + 1]; // 避免编译器过度优化 }; template <std::size_t... I> constexpr __attribute((always_inline)) auto index_seq_helper(const char *str, std::index_sequence<I...>) { return MetaString1<I...>(str).decrypt(); } // 注意，sizeof(\\\"123\\\") == 4，但是auto str \\\"123\\\"; sizeof(str) == 8 (返回了const char*长度) // 因此在这里只能使用宏，不能使用自定义后缀 #define OBFUSCATED1(str) (index_seq_helper(str, make_index_sequence<sizeof(str) - 1>{})) int main() { cout << OBFUSCATED1(\\\"Hello, world\\\") << '\\\\n'; return 0; }\",\"使用-O1编译参数即可在编译结果中消除字符串常量\\\"Hello, world\\\"。\",\"此外，这里采用了固定的xor加密算法c ^ 0x55，可以使用随机xor值、随机使用多种加密算法等方式进一步提升加密强度。\"]},\"68\":{\"h\":\"Ref\",\"t\":[\"https://github.com/andrivet/ADVobfuscator\",\"https://www.researchgate.net/publication/259005783_Random_number_generator_for_C_template_metaprograms\",\"https://www.zhihu.com/question/378525362/answer/1072878269\",\"https://gist.github.com/KoneLinx/d3601597248bed423daf1a7cf7bd9533\"]},\"69\":{\"h\":\"HDOJ-1010 Tempter of the Bone\",\"t\":[\"题目传送门：http://acm.hdu.edu.cn/showproblem.php?pid=1010\"]},\"70\":{\"h\":\"题目大意\",\"t\":[\"小狗要逃离一个N×M的长方形迷宫，迷宫出口的门仅在第 T 秒时开一瞬间（不到1秒）。因此，小狗必须恰好在第 T 秒到达门口才能逃离。 每一秒，它可以向上下左右任意移动一格，且所有格子至多走一次。\"]},\"71\":{\"h\":\"Input\",\"t\":[\"输入由多个测试用例组成。 每个测试用例的第一行包含三个整数N、M和T(1<N,M<7,0<T<50)，分别表示迷宫的大小和门打开的时间。接下来的 N 行给出了迷宫布局，每行包含 M 个字符。字符是以下之一：\",\"X：无法通过的一堵墙\",\"S：起点\",\"D：出口的门\",\".：可走的方块\",\"输入以三个 0 结束，该测试用例不被处理。\"]},\"72\":{\"h\":\"Output\",\"t\":[\"对于每组样例，输出YES或NO表示小狗能否逃生。\"]},\"73\":{\"h\":\"Sample Input\",\"t\":[\"4 4 5 S.X. ..X. ..XD .... 3 4 5 S.X. ..X. ...D 0 0 0\"]},\"74\":{\"h\":\"Sample Output\",\"t\":[\"NO YES\"]},\"75\":{\"h\":\"Solution\",\"t\":[\"一道很明显的dfs题，因为题目存在恰好走 T 步的限制，因此定义状态为(x,y,step)即可。进入下一层递归前，标记上一个位置不可访问，并在回溯时恢复，也是比较基本的dfs搜索思想。\",\"一开始交了一发，虽然AC了，但耗时468ms，对这个耗时不是很满意，于是想了想可行的剪枝方式。\",\"因为所有方格至多走一次，因此如果 T>=N∗M−wall ( wall 是墙的数量)，直接输出 NO\",\"奇偶性剪枝：如果起点到终点的曼哈顿距离与 T 的奇偶性不一致，直接输出 NO （因为绕路不改变奇偶性，就算能重复走之前的路也不改变奇偶性）\",\"如果时间太短(t<abs(sx-ex)+abs(sy-ey)-2)，直接输出 NO\",\"有了前两个剪枝之后，可以优化到109ms。第三个剪枝效果不大，推测应该是这样的样例比较少。\",\"#include <bits/stdc++.h> using namespace std; const int N = 8; int n,m,t,sx,sy,ex,ey; char mp[N][N]; bool tag; int nxt[4][2]={1,0,0,1,-1,0,0,-1}; void dfs(int x,int y,int step){ if(tag || step>t) return; if(x==ex&&y==ey&&step==t){ tag= true; return; } for(int i=0;i<4;i++){ int nx=x+nxt[i][0]; int ny=y+nxt[i][1]; if(nx>=1&&nx<=n&&ny>=1&&ny<=m && mp[nx][ny]!='X'){ mp[nx][ny]='X'; dfs(nx,ny,step+1); mp[nx][ny]='.'; } } } int main(){ ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); while (cin>>n>>m>>t,n||m||t){ int wall=0; for(int i=1;i<=n;i++){ for(int j=1;j<=m;j++){ cin>>mp[i][j]; if(mp[i][j]=='X') ++wall; else if(mp[i][j]=='S') sx=i,sy=j; else if(mp[i][j]=='D') ex=i,ey=j; } } if(n*m-wall<=t){ cout<<\\\"NO\\\\n\\\"; continue; } if((abs(sx+sy-ex-ey)&1)!=(t&1)){ cout<<\\\"NO\\\\n\\\"; continue; } if (t<abs(sx-ex)+abs(sy-ey)-2) { cout<<\\\"NO\\\\n\\\"; continue; } tag=false; mp[sx][sy]='X'; dfs(sx,sy,0); cout<<(tag?\\\"YES\\\":\\\"NO\\\")<<'\\\\n'; } }\"]},\"76\":{\"h\":\"HDOJ-1028 Ignatius and the Princess III\",\"t\":[\"题目传送门：http://acm.hdu.edu.cn/showproblem.php?pid=1028\"]},\"77\":{\"h\":\"题目大意\",\"t\":[\"数字拆分模板题，对于每一个N，输出拆分方式数量。例如对于4存在五种拆分方式：\",\"4 = 4; 4 = 3 + 1; 4 = 2 + 2; 4 = 2 + 1 + 1; 4 = 1 + 1 + 1 + 1;\"]},\"78\":{\"h\":\"Input\",\"t\":[\"输入由多个测试用例组成。 每行包含一个整数N，满足 (1≤N≤120)。\"]},\"79\":{\"h\":\"Sample Input\",\"t\":[\"4 10 20\"]},\"80\":{\"h\":\"Sample Output\",\"t\":[\"5 42 627\"]},\"81\":{\"h\":\"Solution\",\"t\":[\"构造母函数：G(x)=(1+x+x2+...)(1+x2+x4+...)(1+x3+x6+...)...\",\"然后让计算机每次相乘前两项，在c2数组中计算，再存储到c1数组，i表示当前正在计算第1个多项式和第i个多项式相乘。\",\"#include <bits/stdc++.h> using namespace std; int c1[125],c2[125]; int main(){ ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); for(int i=0;i<=120;i++){ c1[i]=1; } for(int i=2;i<=120;i++){ for(int j=0;j<=120;j++){ for(int k=0;k+j<=120;k+=i){ c2[k+j]+=c1[j]; } } for(int j=0;j<=120;j++){ c1[j]=c2[j]; c2[j]=0; } } int n; while (cin>>n) cout<<c1[n]<<'\\\\n'; }\"]},\"82\":{\"h\":\"HDOJ-1213 How Many Tables\",\"t\":[\"题目传送门：http://acm.hdu.edu.cn/showproblem.php?pid=1213\"]},\"83\":{\"h\":\"题目大意\",\"t\":[\"N个朋友参加生日派对，相互认识的坐一桌，问最少需要几张桌子。其中认识关系满足传递性。\"]},\"84\":{\"h\":\"Solution\",\"t\":[\"经典的并查集问题，直接上代码：\",\"#include <bits/stdc++.h> using namespace std; typedef long long ll; const int N = 1005; int fa[N]; int find(int x){ if(fa[x]!=x) fa[x]=find(fa[x]); return fa[x]; } int main(){ ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int tt,n,m,x,y; cin>>tt; while (tt--){ cin>>n>>m; for(int i=1;i<=n;i++) fa[i]=i; for(int i=1;i<=m;i++){ cin>>x>>y; fa[find(x)]=find(y); } int cnt=0; for(int i=1;i<=n;i++){ if(fa[i]==i) cnt++; } cout<<cnt<<'\\\\n'; } }\"]},\"85\":{\"h\":\"Java中的日志库\"},\"86\":{\"h\":\"主要日志系统\"},\"87\":{\"h\":\"JUL\",\"t\":[\"Java标准库java.util.logging，但不常用。\"]},\"88\":{\"h\":\"Log4j\",\"t\":[\"Log4j 的短板在于性能，在Logback 和 Log4j2 出来之后，Log4j的使用也减少了。\"]},\"89\":{\"h\":\"Logback\",\"t\":[\"同样由Log4j的作者开发，提供了性能更好的实现，异步 logger，Filter等更多的特性。\"]},\"90\":{\"h\":\"Log4j2\",\"t\":[\"由Log4j维护者开发，诞生晚于logback，因此吸收了slf4j和logback的一些优点（比如日志模板），性能也比较好。在设计上分离Facade和Implementation，即log4j-api和 log4j-core。\",\"log4j2实现了“无垃圾”和“低垃圾”模式。简单地说，log4j2在记录日志时，能够重用对象（如String等），尽可能避免实例化新的临时对象，减少因日志记录产生的垃圾对象，减少垃圾回收带来的性能下降\"]},\"91\":{\"h\":\"日志Facade（抽象框架）\"},\"92\":{\"h\":\"common-logging\",\"t\":[\"common-logging 是 apache 的一个开源项目。也称Jakarta Commons Logging，缩写 JCL，支持多种具体日志实现（如 Log4j、JUL）。 但它在编译时会进行静态绑定，将代码和日志实现绑定在一起。如果需要切换日志框架，就必须重新引入特定的 JAR 包，这样的机制显得麻烦且不够灵活。\"]},\"93\":{\"h\":\"slf4j\",\"t\":[\"全称为 Simple Logging Facade for Java，采用运行时动态绑定，开发者只需依赖 SLF4J 接口，具体的日志实现可以通过运行时选择（如 Logback、Log4j 等），无需修改代码或重新编译，极大提高了灵活性。\",\"同样由Log4j、logback的作者Ceki Gulcu开发。\",\"在 Common-Logging 或其他传统日志框架中，为了避免无意义的字符串拼接开销，通常需要手动检查日志级别是否启用，例如：\",\"if (logger.isDebugEnabled()) { logger.debug(\\\"id: \\\" + id + \\\", name: \\\" + name); }\",\"而slf4j提供了更便捷的方式：\",\"logger.debug(\\\"id: {}, name: {}\\\", id, name);\",\"无需手动检查日志级别，SLF4J 会在底层自动优化，避免不必要的字符串拼接。且代码更简洁，提升开发效率。\"]},\"94\":{\"h\":\"注意事项\",\"t\":[\"以下写法中存在问题，即使日志级别高于debug，不需输出日志，也会执行字符串拼接、调用toJson方法：\",\"// 即使不输出，也会执行字符串拼接 logger.debug(\\\"start process request, url: \\\" + url); // 即使不输出，也会调用toJson方法 logger.debug(\\\"receive request: {}\\\", toJson(request));\",\"正确写法：\",\"// 没有多余计算开销 logger.debug(\\\"start process request, url: {}\\\", url); // slf4j/log4j2 // 采用懒求值 logger.debug(\\\"receive request: {}\\\", () -> toJson(request)); // log4j2 logger.debug(() -> \\\"receive request: \\\" + toJson(request)); // log4j2 // 回归原始，做额外判断 if (logger.isDebugEnabled()) { // slf4j/log4j2 logger.debug(\\\"receive request: \\\" + toJson(request)); }\",\"此外，不应在程序中滥用获取当前caller、行号、函数名等等属性，因为基本上这些实现都基于堆栈信息stacktrace，而获取堆栈信息的代价是昂贵的。\"]},\"95\":{\"h\":\"Rust 学习笔记\",\"t\":[\"Rust具有一些让人眼前一亮的特点：无GC也不需手动管理内存、高性能、安全性强等等。但其诸多优点背后的代价，就是学习曲线相当陡峭。\",\"Rust的困难，不在于语言特性，而在于：\",\"具体实践中如何运用学到的技巧\",\"遇到了坑时（生命周期、借用错误，自引用等）如何迅速、正确的解决\",\"大量的标准库API的熟练使用，这是保证开发效率的关键\"]},\"96\":{\"h\":\"使用原生指针和unsafe实现自引用\",\"t\":[\"algo.course.rs上的实现，在此记录一下\",\"pub struct Tree { count: usize, root: *mut Node, } #[derive(Debug)] struct Node { data: i32, // Null指针这里代表\\\"None`; right.is_null() ==> 没有right child left: *mut Node, right: *mut Node, parent: *mut Node, } impl Tree { pub fn new() -> Self { Self { count: 0, root: std::ptr::null_mut(), } } // 返回tree的节点数量 pub fn node_count(&self) -> usize { assert!(self.count != 0 || self.root.is_null()); self.count } // 在tree中新增一项，插入成功则返回true,若给定的数据在tree上已经存在，则返回false pub fn insert(&mut self, data: i32) -> bool { if self.root.is_null() { self.root = Node::new(data); } else { if !insert_node(self.root, data) { return false; } } self.count += 1; true } // 找到tree上的指定项，若找到，返回true pub fn find(&self, data: i32) -> bool { !find_node(self.root, data).is_null() } // 返回tree的字符串形式，用于Debug pub fn display(&self) -> String { display_node(self.root, 0) } // 使用中序遍历来返回tree中的所有数据 pub fn inorder(&self) -> Vec<i32> { let mut v = vec![]; if !self.root.is_null() { let mut node = leftmost_child(self.root); loop { if node.is_null() { break; } unsafe { v.push((*node).data); } node = successor_of_node(node); } } v } // 从tree上移除指定项, 若该项存在且被成功移除，则返回true，否则都返回false pub fn remove(&mut self, data: i32) -> bool { let node = find_node(self.root, data); if node.is_null() { false } else { self.remove_node(node); self.count -= 1; true } } // 在tree上找到指定项的继任者 pub fn successor(&self, data: i32) -> Option<i32> { unsafe { let node = find_node(self.root, data); if !node.is_null() { let nodesucc = successor_of_node(node); if !nodesucc.is_null() { return Some((*nodesucc).data); } } None } } // 从tree上移除指定的节点 fn remove_node(&mut self, node: *mut Node) { unsafe { let lchild = (*node).left; let rchild = (*node).right; if lchild.is_null() && rchild.is_null() { // 节点没有子节点，所以可以安全移除 self.replace_node(node, std::ptr::null_mut()); } else if !lchild.is_null() && !rchild.is_null() { // 节点的左右子节点都在，我们需要找到该节点的继任者，然后将继任者的数据赋给当前节点，然后再递归删除继任者 let succ = successor_of_node(node); assert!(!succ.is_null()); (*node).data = (*succ).data; self.remove_node(succ); } else if !lchild.is_null() { // 节点只有左子节点，所以使用后者替代前者 self.replace_node(node, lchild); } else if !rchild.is_null() { // 节点只有右子节点，所以使用后者替代前者 self.replace_node(node, rchild); } else { panic!(\\\"unreachable\\\"); } } } // 使用`r`节点来替换目标`node`节点 fn replace_node(&mut self, node: *mut Node, r: *mut Node) { unsafe { let parent = (*node).parent; if parent.is_null() { // Removing the root node. self.root = r; if !r.is_null() { (*r).parent = std::ptr::null_mut(); } } else { if !r.is_null() { (*r).parent = parent; } if (*parent).left == node { (*parent).left = r; } else if (*parent).right == node { (*parent).right = r; } } // 被替换的节点不再被使用，因此可以回收它：通过`Box`拿走它的所有权，然后它会被自动drop Box::from_raw(node); } } } impl Drop for Tree { fn drop(&mut self) { // 也许不是性能最高的实现，但是简单，而且有用 while !self.root.is_null() { self.remove_node(self.root); } } } impl Node { fn new(data: i32) -> *mut Self { Box::into_raw(Box::new(Self { data, left: std::ptr::null_mut(), right: std::ptr::null_mut(), parent: std::ptr::null_mut(), })) } fn new_with_parent(data: i32, parent: *mut Node) -> *mut Self { Box::into_raw(Box::new(Self { data, left: std::ptr::null_mut(), right: std::ptr::null_mut(), parent, })) } } // 在节点子树上创建新的节点 fn insert_node(node: *mut Node, data: i32) -> bool { unsafe { if (*node).data == data { false } else if data < (*node).data { if (*node).left.is_null() { (*node).left = Node::new_with_parent(data, node); true } else { insert_node((*node).left, data) } } else { if (*node).right.is_null() { (*node).right = Node::new_with_parent(data, node); true } else { insert_node((*node).right, data) } } } } // 在`fromnode`的子树上寻找目标数据，如果没找到则返回`null` fn find_node(fromnode: *mut Node, data: i32) -> *mut Node { unsafe { if fromnode.is_null() || (*fromnode).data == data { fromnode } else if data < (*fromnode).data { find_node((*fromnode).left, data) } else { find_node((*fromnode).right, data) } } } // 返回`node`子树的字符串形式，同时指定缩进字符数 fn display_node(node: *const Node, indent: usize) -> String { let indent_str = \\\" \\\".repeat(indent); if node.is_null() { indent_str + \\\".\\\\n\\\" } else { unsafe { let mut s = format!(\\\"{}{}\\\\n\\\", indent_str, (*node).data); s.push_str(&display_node((*node).left, indent + 2)); s.push_str(&display_node((*node).right, indent + 2)); s } } } // 找到`node`最左边的子节点，如果没有，就返回`node`自身, `node`不能为null fn leftmost_child(node: *mut Node) -> *mut Node { unsafe { if (*node).left.is_null() { node } else { leftmost_child((*node).left) } } } // 在tree上找到`node`的继任者 fn successor_of_node(node: *mut Node) -> *mut Node { unsafe { if !(*node).right.is_null() { // 若node有一个右子节点，则继任者是该右子节点的最左子节点，若该右子节点没有子节点，则继任者就是右子节点 leftmost_child((*node).right) } else { // 没有右子节点，则找到一个父节点，当前node是该父节点的左子节点, 若在root之前都没找到，说明node没有继任者 parent_with_left(node) } } } // 在`node`的祖先中找到它的父节点,且`node`必须是该父节点的左子节点 fn parent_with_left(node: *mut Node) -> *mut Node { unsafe { // 若`node`有父节点，且该父节点拥有左子节点，同时`node`就是这个左子节点，那么该父节点就是我们的目标 let parent = (*node).parent; if !parent.is_null() { if std::ptr::eq((*parent).left, node) { return parent; } return parent_with_left(parent); } // `node`没有父节点 std::ptr::null_mut() } } fn main() { }\"]},\"97\":{\"h\":\"将局部变量生命周期变为'static\"},\"98\":{\"h\":\"Problem\"},\"99\":{\"h\":\"Solution\",\"t\":[\"使用leak、Box::leak等方法：\"]},\"100\":{\"h\":\"错误处理相关\"},\"101\":{\"h\":\"将Option类型转换为Result类型\",\"t\":[\"使用ok_or方法：\",\"fn foo(abs_path: &str) -> Result<String, String> { let path = PathBuf::from(abs_path); let relative = path.file_name() .ok_or(format!(\\\"Failed to get relative_name for `{}`\\\", abs_path))?; let res = relative.to_str().unwrap(); Ok(res.to_owned()) }\"]},\"102\":{\"h\":\"将Result类型转换为Option类型\",\"t\":[\"使用ok方法：\",\"fn divide(dividend: f64, divisor: f64) -> Result<f64, String> { if divisor == 0.0 { Err(String::from(\\\"除数不能为零\\\")) } else { Ok(dividend / divisor) } } #[test] fn test_divide() { let result_ok: Result<f64, String> = divide(10.0, 2.0); let option_some: Option<f64> = result_ok.ok(); assert_eq!(option_some, Some(5.0)); let result_err: Result<f64, String> = divide(10.0, 0.0); let option_none: Option<f64> = result_err.ok(); assert_eq!(option_none, None); }\"]},\"103\":{\"h\":\"Option#transpose()\",\"t\":[\"将Option<Result<T, E>>转换为Result<Option<T>, E>：\",\"#[derive(Debug, Eq, PartialEq)] struct SomeErr; let x: Result<Option<i32>, SomeErr> = Ok(Some(5)); let y: Option<Result<i32, SomeErr>> = Some(Ok(5)); assert_eq!(x, y.transpose());\"]},\"104\":{\"h\":\"全局变量\",\"t\":[\"在Rust中，出于安全性的考量，全局变量的使用并不像C++那样简单。这样很容易理解，如果定义一个不受保护的全局变量，在多个线程同时修改、写的同时有线程读等情况下，很容易出现脏数据。\",\"当然也不是完全禁止全局字段，以下记录几种常用的解决方式：\"]},\"105\":{\"h\":\"启动时初始化，后续只读\",\"t\":[\"使用强大的社区库lazy_static：\",\"[dependencies] lazy_static = \\\"1.5.0\\\"\",\"use lazy_static::lazy_static; use std::collections::HashMap; lazy_static! { static ref HASHMAP: HashMap<u32, &'static str> = { let mut m = HashMap::new(); m.insert(0, \\\"foo\\\"); m.insert(1, \\\"bar\\\"); m.insert(2, \\\"baz\\\"); m }; } fn main() { // First access to `HASHMAP` initializes it println!(\\\"The entry for `0` is \\\\\\\"{}\\\\\\\".\\\", HASHMAP.get(&0).unwrap()); // Any further access to `HASHMAP` just returns the computed value println!(\\\"The entry for `1` is \\\\\\\"{}\\\\\\\".\\\", HASHMAP.get(&1).unwrap()); }\",\"在rust 1.70之后，也可以直接使用标准库中的OnceLock：\",\"use std::collections::HashMap; use std::sync::OnceLock; fn hashmap() -> &'static HashMap<u32, &'static str> { static HASHMAP: OnceLock<HashMap<u32, &str>> = OnceLock::new(); HASHMAP.get_or_init(|| { let mut m = HashMap::new(); m.insert(0, \\\"foo\\\"); m.insert(1, \\\"bar\\\"); m.insert(2, \\\"baz\\\"); m }) } fn main() { // First access to `HASHMAP` initializes it println!(\\\"The entry for `0` is \\\\\\\"{}\\\\\\\".\\\", hashmap().get(&0).unwrap()); // Any further access to `HASHMAP` just returns the computed value println!(\\\"The entry for `1` is \\\\\\\"{}\\\\\\\".\\\", hashmap().get(&1).unwrap()); }\",\"使用unsafe裸指针： https://stackoverflow.com/questions/63433547/more-efficient-alternative-to-thread-local-and-lazy-static\"]},\"106\":{\"h\":\"运行时需要修改\",\"t\":[\"use std::sync::Mutex; use lazy_static::lazy_static; lazy_static! { static ref NAMES: Mutex<String> = Mutex::new(String::from(\\\"Sunface, Jack, Allen\\\")); } fn main() { let mut v = NAMES.lock().unwrap(); v.push_str(\\\", Myth\\\"); println!(\\\"{}\\\",v); }\",\"当然，每次访问时会有轻微的性能损失，为了支持多线程这是不可避免的。\"]},\"107\":{\"h\":\"Ref\",\"t\":[\"https://github.com/rustcn-org/rust-algos/blob/fbcdccf3e8178a9039329562c0de0fd01a3372fb/src/unsafe/self-ref.md\",\"https://crates.io/crates/lazy_static\",\"https://course.rs/advance/global-variable.html\"]},\"108\":{\"h\":\"记录一些Rust中的小技巧\"},\"109\":{\"h\":\"使用指定的Rust版本\",\"t\":[\"对于管理多版本，直接使用Rustup即可。在cmd中输入\",\"rustup show\",\"即可查看已安装的工具链版本，以及现在使用的默认版本。使用\",\"rustup default 1.72.0-x86_64-pc-windows-gnu\",\"即可切换到对应版本。\",\"但如果不想切换默认Rust版本，只想为某一项目使用指定版本，可以在项目所在目录新建rust-toolchain文件，在第一行写上版本限制，例如：\",\"1.76.0\",\"1.76.0-x86_64-pc-windows-gnu\",\"如果需要更详细地指定工具链版本，可以新建一个rust-toolchain.toml文件，例如：\",\"[toolchain] channel = \\\"nightly-2024-11-07\\\" components = [ \\\"rustfmt\\\", \\\"rust-analyzer\\\", \\\"miri\\\", \\\"rust-docs\\\", \\\"clippy\\\", \\\"rust-src\\\"] profile = \\\"default\\\"\",\"以上配置将在此项目中启用nightly特性。\"]},\"110\":{\"h\":\"pub关键字\",\"t\":[\"pub关键字能控制字段、方法的可访问性，且能限定到在特定模块。\",\"/// 在本项目内public pub(crate) fn hello() { } /// 仅在mod `ir`内public pub struct Graph { pub(in crate::ir) globals: GlobalValueMapCell, pub(in crate::ir) func_tys: FuncTypeMapCell, values: HashMap<Value, ValueData>, bbs: HashMap<BasicBlock, BasicBlockData>, }\"]},\"111\":{\"h\":\"Ref\",\"t\":[\"https://github.com/pku-minic/koopa/blob/master/src/ir/dfg.rs#L15\"]},\"112\":{\"h\":\"WSL备忘录\",\"t\":[\"在做计网实验时，之前用的一直都是VMware，最近偶然接触到WSL(Windows Subsystem for Linux)，在此记录基本配置过程。\"]},\"113\":{\"h\":\"基本配置\",\"t\":[\"介绍视频（需要武林绝学，或者b站随便找个都行）\",\"支持的GUI应用：https://learn.microsoft.com/zh-cn/windows/wsl/tutorials/gui-apps\",\"取消自动挂载：https://devblogs.microsoft.com/commandline/automatically-configuring-wsl/\"]},\"114\":{\"h\":\"迁移\",\"t\":[\"wsl默认安装在C盘，建议趁刚安装时迁移到容量充足的其他盘\",\"查看当前安装的所有WSL\",\"wsl --list -v\",\"左边的*表示默认项\",\"先导出WSL到指定路径\",\"wsl --export Ubuntu-20.04 E:\\\\wsl\\\\Ubuntu-20.04.tar\",\"删除你要导出的wsl\",\"wsl --unregister Ubuntu-20.04\",\"从第2步中导出的tar文件导入wsl，这里指定了version为2\",\"格式：wsl --import <WSL名称> <导入后wsl工作路径> <wsl压缩包路径>\",\"wsl --import Ubuntu-20.04 E:\\\\wsl\\\\ubuntu-20.04 E:\\\\wsl\\\\Ubuntu-20.04.tar --version 2\",\"配置先前的默认登录用户\",\"格式：<EXE> config --default-user <用户名>\",\"ubuntu2004.exe config --default-user xanadu13\",\"如果是kali-linux：\",\"kali.exe config --default-user xanadu13\"]},\"115\":{\"h\":\"常用指令\",\"t\":[\"软链接挂载文件夹：\",\"ln -s /mnt/e/wsl/share ~/share\",\"运行指定wsl：\",\"wsl -d kali-linux\"]},\"116\":{\"h\":\"连接wsl桌面\",\"t\":[\"目前已知kali-linux wsl可以通过类似远程桌面的方式连接，具体见我的另一篇文章：\"]},\"117\":{\"h\":\"Ref\",\"t\":[\"https://www.jianshu.com/p/2a2d16029dc2\"]},\"118\":{\"h\":\"在WSL中使用Docker\",\"t\":[\"今天尝试在WSL中使用Docker，运行\",\"docker run hello-world\",\"获得报错：\",\"Get https://registry-1.docker.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaitin headers)\",\"尝试了很多解决方案，比如更改docker镜像源、修改/etc/docker/daemon.json、配置/etc/resolv.conf中的nameserver为8.8.8.8、在前面加sudo等等，都没有成功。\",\"最终解决方案：\",\"在/etc/systemd/system/docker.service.d/proxy.conf添加\",\"[Service] Environment=\\\"HTTP_PROXY=http://127.0.0.1:7890/\\\" Environment=\\\"HTTPS_PROXY=http://127.0.0.1:7890/\\\" Environment=\\\"NO_PROXY=localhost,127.0.0.1\\\"\",\"其中127.0.0.1和7890分别为你的武林绝学的代理服务器默认地址、默认端口。\",\"然后重启服务：\",\"sudo systemctl daemon-reload sudo systemctl restart docker\",\"再执行docker run hello-world，顺利成功！\"]},\"119\":{\"h\":\"在WSL中使用kali-linux踩坑记录\"},\"120\":{\"h\":\"安装kali-linux\",\"t\":[\"wsl --install kali-linux\"]},\"121\":{\"h\":\"安装黑科技kex\",\"t\":[\"sudo apt install kali-win-kex\"]},\"122\":{\"h\":\"运行kex\",\"t\":[\"按照视频里说的尝试运行kex --esm --ip -sound会提示找不到命令，如果直接运行kex，输完密码，等待大概十秒钟后，提示开启成功：\",\"但是TigerVNC连接不上：\",\"google了好久，找到一个遇到相同问题的： https://www.reddit.com/r/bashonubuntuonwindows/comments/icu9ks/why_winkex_does_not_working_please_help_me/?rdt=50615\",\"但是下面的回答没有帮助。\",\"再次搜索一番，发现了这个帖子：https://access.redhat.com/solutions/5011721\",\"我们知道，linux里各种设备都是文件，输密码也会有一个密码文件。而在非sudo下试图登录时没有读取密码文件的权限，因此才有“Opening password file failed”。\",\"尝试sudo kex之后，发现可以正常进入kali-linux桌面：\",\"kali-linux桌面\",\"但是这里和默认用户下的桌面、各种文件夹是不互通的，而且笔者也不喜欢在root下运行wsl，因为此时你可以随意删除主机系统文件。\"]},\"123\":{\"h\":\"最终解决方法\",\"t\":[\"在主机上安装TigerVNC：https://sourceforge.net/projects/tigervnc\",\"在kali-linux的bash中执行kex，启动win-kex server，然后直接使用TigerVNC连接wsl即可。\",\"这里的端口号(5901)填win-kex server启动后开放给你的端口。\"]},\"124\":{\"h\":\"kali-linux wsl自启动问题\",\"t\":[\"开始使用wsl后，有一次偶然发现kali-linux会自启动，长期处于Running状态。（运行wsl --list -v查看wsl状态）\",\"一开始google搜索“关闭kali-linux自启动”相关内容，粗略浏览后都不符合我的情况，因为正常情况下未特殊配置wsl的话，kali-linux是不会自启动的。\",\"后面偶然找到了这篇文章：\",\"https://superuser.com/questions/1746617/wsl2-kali-wont-stop-and-it-always-starts-on-boot/1746987#1746987\",\"照着做就能发现，是Armoury Crate一直在后台扫盘，意外扫到wsl文件导致kali-linux自启动。\",\"使用G-Helper替代Armoury Crate后，问题成功解决。（卸载还挺麻烦，得先去官网下专用卸载工具，卸载完后重启并进入BIOS，关闭自动开启Armoury Crate的选项，然后再重启）\",\"卸载之后没想到还有意外收获，之前我的笔记本一般用不了一上午，到上午第五节课基本就没电了，现在续航显示来到了恐怖的8小时：\",\"图中我已经用了3个半小时，估计实际续航在6-7小时左右。\",\"最后，放一张当天的浏览记录，不多作评价了。\"]},\"125\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"126\":{\"h\":\"Posts\"},\"127\":{\"h\":\"Algo\"},\"128\":{\"h\":\"Cpp\"},\"129\":{\"h\":\"Hdoj\"},\"130\":{\"h\":\"Java\"},\"131\":{\"h\":\"Rust\"},\"132\":{\"h\":\"Wsl\"}},\"dirtCount\":0,\"index\":[[\"评价\",{\"1\":{\"124\":1}}],[\"放\",{\"1\":{\"124\":1}}],[\"放弃\",{\"1\":{\"18\":1,\"23\":1}}],[\"半小时\",{\"1\":{\"124\":1}}],[\"恐怖\",{\"1\":{\"124\":1}}],[\"显示\",{\"1\":{\"124\":1}}],[\"显得\",{\"1\":{\"92\":1}}],[\"续航\",{\"1\":{\"124\":2}}],[\"课\",{\"1\":{\"124\":1}}],[\"收获\",{\"1\":{\"124\":1}}],[\"收到\",{\"1\":{\"16\":1}}],[\"选项\",{\"1\":{\"124\":1}}],[\"选择\",{\"0\":{\"46\":1,\"61\":1},\"1\":{\"16\":1,\"18\":1,\"27\":4,\"28\":1,\"44\":1,\"61\":1,\"93\":1}}],[\"专用\",{\"1\":{\"124\":1}}],[\"官网\",{\"1\":{\"124\":1}}],[\"得\",{\"1\":{\"124\":1}}],[\"得到\",{\"1\":{\"4\":1}}],[\"挺\",{\"1\":{\"124\":1}}],[\"卸载\",{\"1\":{\"124\":4}}],[\"扫到\",{\"1\":{\"124\":1}}],[\"扫盘\",{\"1\":{\"124\":1}}],[\"意外\",{\"1\":{\"124\":2}}],[\"意义\",{\"1\":{\"93\":1}}],[\"篇文章\",{\"1\":{\"124\":1}}],[\"符合\",{\"1\":{\"124\":1}}],[\"符号\",{\"1\":{\"4\":2,\"5\":1,\"9\":1}}],[\"符号串\",{\"1\":{\"4\":1,\"12\":1}}],[\"浏览\",{\"1\":{\"124\":2}}],[\"浏览器\",{\"1\":{\"36\":1}}],[\"粗略\",{\"1\":{\"124\":1}}],[\"处于\",{\"1\":{\"124\":1}}],[\"处理\",{\"1\":{\"71\":1}}],[\"处理器\",{\"1\":{\"27\":2}}],[\"填\",{\"1\":{\"123\":1}}],[\"喜欢\",{\"1\":{\"122\":1}}],[\"互通\",{\"1\":{\"122\":1}}],[\"才有\",{\"1\":{\"122\":1}}],[\"才能\",{\"1\":{\"16\":1,\"70\":1}}],[\"各种\",{\"1\":{\"122\":2}}],[\"知道\",{\"1\":{\"122\":1}}],[\"帖子\",{\"1\":{\"122\":1}}],[\"十秒钟\",{\"1\":{\"122\":1}}],[\"按照\",{\"1\":{\"122\":1}}],[\"科技\",{\"0\":{\"121\":1}}],[\"黑\",{\"0\":{\"121\":1}}],[\"添加\",{\"1\":{\"118\":1}}],[\"源\",{\"1\":{\"118\":1}}],[\"源地址\",{\"1\":{\"31\":2}}],[\"获得\",{\"1\":{\"118\":1}}],[\"获取\",{\"1\":{\"94\":2}}],[\"今天\",{\"1\":{\"118\":1}}],[\"远程桌面\",{\"1\":{\"116\":1}}],[\"桌面\",{\"0\":{\"116\":1},\"1\":{\"122\":3}}],[\"桌子\",{\"1\":{\"83\":1}}],[\"软\",{\"1\":{\"115\":1}}],[\"软件\",{\"1\":{\"15\":1}}],[\"登录\",{\"1\":{\"114\":1,\"122\":1}}],[\"压缩包\",{\"1\":{\"114\":1}}],[\"工作\",{\"1\":{\"114\":1}}],[\"工具\",{\"1\":{\"109\":2,\"124\":1}}],[\"格式\",{\"1\":{\"114\":2}}],[\"格子\",{\"1\":{\"70\":1}}],[\"导致\",{\"1\":{\"124\":1}}],[\"导入\",{\"1\":{\"114\":2}}],[\"导出\",{\"1\":{\"114\":2}}],[\"充足\",{\"1\":{\"114\":1}}],[\"趁刚\",{\"1\":{\"114\":1}}],[\"建议\",{\"1\":{\"114\":1}}],[\"迁移\",{\"0\":{\"114\":1},\"1\":{\"114\":1}}],[\"随意\",{\"1\":{\"122\":1}}],[\"随便\",{\"1\":{\"113\":1}}],[\"随机\",{\"0\":{\"61\":1},\"1\":{\"61\":2,\"67\":2}}],[\"随机数\",{\"1\":{\"59\":3,\"60\":1}}],[\"站\",{\"1\":{\"113\":1}}],[\"绝学\",{\"1\":{\"113\":1,\"118\":1}}],[\"武林\",{\"1\":{\"113\":1,\"118\":1}}],[\"视频\",{\"1\":{\"113\":1,\"122\":1}}],[\"偶然\",{\"1\":{\"112\":1,\"124\":2}}],[\"本\",{\"1\":{\"110\":1}}],[\"本地\",{\"1\":{\"18\":1,\"31\":1}}],[\"限定\",{\"1\":{\"110\":1}}],[\"限制\",{\"1\":{\"75\":1,\"109\":1}}],[\"性\",{\"1\":{\"110\":1}}],[\"性能\",{\"1\":{\"88\":1,\"89\":1,\"90\":2,\"96\":1,\"106\":1}}],[\"控制\",{\"1\":{\"110\":1}}],[\"控制器\",{\"1\":{\"27\":1}}],[\"详细\",{\"1\":{\"109\":1}}],[\"详见\",{\"1\":{\"21\":1}}],[\"某\",{\"1\":{\"109\":1}}],[\"现在\",{\"1\":{\"109\":1,\"124\":1}}],[\"链\",{\"1\":{\"109\":2}}],[\"链接\",{\"1\":{\"15\":1,\"115\":1}}],[\"轻微\",{\"1\":{\"106\":1}}],[\"裸\",{\"1\":{\"105\":1}}],[\"社区\",{\"1\":{\"105\":1}}],[\"几种\",{\"1\":{\"104\":1}}],[\"几张\",{\"1\":{\"83\":1}}],[\"脏\",{\"1\":{\"104\":1}}],[\"读取\",{\"1\":{\"122\":1}}],[\"读\",{\"1\":{\"104\":1}}],[\"线程\",{\"1\":{\"104\":2}}],[\"线性\",{\"0\":{\"41\":1},\"1\":{\"10\":2,\"41\":2,\"42\":1}}],[\"理解\",{\"1\":{\"104\":1}}],[\"像\",{\"1\":{\"104\":1}}],[\"考量\",{\"1\":{\"104\":1}}],[\"考虑\",{\"1\":{\"37\":1,\"42\":1}}],[\"转换\",{\"1\":{\"103\":1}}],[\"零\",{\"1\":{\"102\":1}}],[\"零步\",{\"1\":{\"4\":2}}],[\"变为\",{\"0\":{\"97\":1}}],[\"变更\",{\"1\":{\"31\":1}}],[\"局部变量\",{\"0\":{\"97\":1}}],[\"拥有\",{\"1\":{\"96\":1}}],[\"祖先\",{\"1\":{\"96\":1}}],[\"父\",{\"1\":{\"96\":3}}],[\"父子\",{\"1\":{\"12\":1,\"13\":1}}],[\"缩进\",{\"1\":{\"96\":1}}],[\"缩写\",{\"1\":{\"92\":1}}],[\"同时\",{\"1\":{\"96\":2,\"104\":2}}],[\"同样\",{\"1\":{\"89\":1,\"93\":1}}],[\"寻找\",{\"1\":{\"96\":1}}],[\"树上\",{\"1\":{\"96\":2}}],[\"树根\",{\"1\":{\"11\":1}}],[\"拿走\",{\"1\":{\"96\":1}}],[\"替换\",{\"1\":{\"96\":2}}],[\"替代\",{\"0\":{\"60\":1},\"1\":{\"96\":2,\"124\":1}}],[\"赋给\",{\"1\":{\"96\":1}}],[\"继任者\",{\"1\":{\"96\":8}}],[\"继续\",{\"1\":{\"16\":1}}],[\"移除\",{\"1\":{\"96\":2}}],[\"移动\",{\"1\":{\"70\":1}}],[\"除数\",{\"1\":{\"102\":1}}],[\"除\",{\"1\":{\"96\":2}}],[\"历来\",{\"1\":{\"96\":1}}],[\"插入\",{\"1\":{\"96\":1}}],[\"插入排序\",{\"0\":{\"47\":1},\"1\":{\"44\":1}}],[\"节点\",{\"1\":{\"96\":37}}],[\"此时\",{\"1\":{\"122\":1}}],[\"此\",{\"1\":{\"96\":1,\"109\":1,\"112\":1}}],[\"此外\",{\"1\":{\"67\":1,\"94\":1}}],[\"保护\",{\"1\":{\"104\":1}}],[\"保证\",{\"1\":{\"95\":1}}],[\"保存\",{\"1\":{\"36\":1}}],[\"熟练\",{\"1\":{\"95\":1}}],[\"迅速\",{\"1\":{\"95\":1}}],[\"引用\",{\"0\":{\"96\":1},\"1\":{\"95\":1}}],[\"引入\",{\"1\":{\"59\":1,\"92\":1}}],[\"借用\",{\"1\":{\"95\":1}}],[\"技巧\",{\"0\":{\"108\":1},\"1\":{\"95\":1}}],[\"学到\",{\"1\":{\"95\":1}}],[\"学习曲线\",{\"1\":{\"95\":1}}],[\"学习\",{\"0\":{\"95\":1}}],[\"运用\",{\"1\":{\"95\":1}}],[\"运行\",{\"0\":{\"106\":1,\"122\":1},\"1\":{\"16\":2,\"26\":3,\"36\":1,\"93\":2,\"115\":1,\"118\":1,\"122\":3,\"124\":1}}],[\"困难\",{\"1\":{\"95\":1}}],[\"陡峭\",{\"1\":{\"95\":1}}],[\"背后\",{\"1\":{\"95\":1}}],[\"诸多\",{\"1\":{\"95\":1}}],[\"管理\",{\"1\":{\"95\":1,\"109\":1}}],[\"管理员\",{\"1\":{\"16\":1,\"26\":1,\"35\":1,\"36\":3}}],[\"眼前一亮\",{\"1\":{\"95\":1}}],[\"人\",{\"1\":{\"95\":1}}],[\"昂贵\",{\"1\":{\"94\":1}}],[\"代理服务器\",{\"1\":{\"118\":1}}],[\"代表\",{\"1\":{\"96\":1}}],[\"代价\",{\"1\":{\"94\":1,\"95\":1}}],[\"代码\",{\"1\":{\"56\":1,\"61\":1,\"64\":1,\"84\":1,\"92\":1,\"93\":2}}],[\"信息\",{\"1\":{\"94\":2}}],[\"堆栈\",{\"1\":{\"94\":2}}],[\"堆排序\",{\"0\":{\"51\":1},\"1\":{\"44\":1}}],[\"属性\",{\"1\":{\"94\":1}}],[\"滥用\",{\"1\":{\"94\":1}}],[\"懒\",{\"1\":{\"94\":1}}],[\"调用\",{\"1\":{\"94\":2}}],[\"调整\",{\"1\":{\"27\":1}}],[\"底层\",{\"1\":{\"93\":1}}],[\"便捷\",{\"1\":{\"93\":1}}],[\"启用\",{\"1\":{\"93\":1,\"109\":1}}],[\"启动\",{\"0\":{\"16\":1,\"28\":1,\"105\":1},\"1\":{\"16\":4,\"36\":1,\"123\":2}}],[\"级别\",{\"1\":{\"93\":2,\"94\":1}}],[\"检查\",{\"1\":{\"93\":2}}],[\"检查和\",{\"1\":{\"35\":1}}],[\"手动\",{\"1\":{\"93\":2,\"95\":1}}],[\"通常\",{\"1\":{\"93\":1}}],[\"通过\",{\"1\":{\"15\":1,\"36\":2,\"71\":1,\"93\":1,\"96\":1,\"116\":1}}],[\"拼接\",{\"1\":{\"93\":2,\"94\":2}}],[\"极大\",{\"1\":{\"93\":1}}],[\"动态\",{\"1\":{\"93\":1}}],[\"全局\",{\"1\":{\"104\":1}}],[\"全局变量\",{\"0\":{\"104\":1},\"1\":{\"104\":2}}],[\"全\",{\"1\":{\"93\":1}}],[\"全部\",{\"1\":{\"16\":1}}],[\"灵活性\",{\"1\":{\"93\":1}}],[\"灵活\",{\"1\":{\"92\":1}}],[\"麻烦\",{\"1\":{\"92\":1,\"124\":1}}],[\"机上安装\",{\"1\":{\"123\":1}}],[\"机制\",{\"1\":{\"92\":1}}],[\"机器\",{\"1\":{\"56\":1}}],[\"将\",{\"0\":{\"97\":1,\"101\":1,\"102\":1},\"1\":{\"92\":1,\"96\":1,\"103\":1,\"109\":1}}],[\"绑定\",{\"1\":{\"92\":2,\"93\":1}}],[\"静态\",{\"1\":{\"92\":1}}],[\"称\",{\"1\":{\"92\":1}}],[\"称为\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"13\":1,\"93\":1}}],[\"框架\",{\"0\":{\"91\":1},\"1\":{\"92\":1,\"93\":1}}],[\"抽象\",{\"0\":{\"91\":1}}],[\"带来\",{\"1\":{\"90\":1}}],[\"回答\",{\"1\":{\"122\":1}}],[\"回归\",{\"1\":{\"94\":1}}],[\"回收\",{\"1\":{\"90\":1,\"96\":1}}],[\"回溯\",{\"1\":{\"75\":1}}],[\"临时\",{\"1\":{\"90\":1}}],[\"化新\",{\"1\":{\"90\":1}}],[\"尽可能\",{\"1\":{\"90\":1}}],[\"尽管\",{\"1\":{\"60\":1}}],[\"模块\",{\"1\":{\"110\":1}}],[\"模式\",{\"1\":{\"90\":1}}],[\"模板\",{\"0\":{\"65\":1},\"1\":{\"58\":1,\"59\":1,\"61\":1,\"65\":3,\"77\":1,\"90\":1}}],[\"垃圾\",{\"1\":{\"90\":4}}],[\"优点\",{\"1\":{\"90\":1,\"95\":1}}],[\"优化\",{\"1\":{\"42\":1,\"60\":1,\"67\":1,\"75\":1,\"93\":1}}],[\"吸收\",{\"1\":{\"90\":1}}],[\"晚于\",{\"1\":{\"90\":1}}],[\"诞生\",{\"1\":{\"90\":1}}],[\"更改\",{\"1\":{\"118\":1}}],[\"更\",{\"1\":{\"89\":1,\"93\":2,\"109\":1}}],[\"更好\",{\"1\":{\"89\":1}}],[\"异步\",{\"1\":{\"89\":1}}],[\"异或\",{\"1\":{\"61\":1}}],[\"作者\",{\"1\":{\"89\":1,\"93\":1}}],[\"作为\",{\"1\":{\"30\":1}}],[\"短板\",{\"1\":{\"88\":1}}],[\"短语\",{\"0\":{\"11\":1,\"12\":1},\"1\":{\"11\":1,\"13\":3}}],[\"标准\",{\"1\":{\"87\":1,\"95\":1,\"105\":1}}],[\"标记\",{\"1\":{\"41\":1,\"75\":1}}],[\"日志\",{\"0\":{\"85\":1,\"86\":1,\"91\":1},\"1\":{\"90\":3,\"92\":3,\"93\":4,\"94\":2}}],[\"查看\",{\"1\":{\"109\":1,\"114\":1,\"124\":1}}],[\"查集\",{\"1\":{\"84\":1}}],[\"查找\",{\"1\":{\"16\":1}}],[\"经典\",{\"1\":{\"84\":1}}],[\"传统\",{\"1\":{\"93\":1}}],[\"传递性\",{\"1\":{\"83\":1}}],[\"传送门\",{\"1\":{\"39\":1,\"69\":1,\"76\":1,\"82\":1}}],[\"问\",{\"1\":{\"83\":1}}],[\"问题\",{\"0\":{\"14\":1,\"124\":1},\"1\":{\"31\":1,\"36\":1,\"37\":1,\"60\":1,\"84\":1,\"94\":1,\"122\":1,\"124\":1}}],[\"坐\",{\"1\":{\"83\":1}}],[\"认识\",{\"1\":{\"83\":2}}],[\"朋友\",{\"1\":{\"83\":1}}],[\"正常\",{\"1\":{\"122\":1,\"124\":1}}],[\"正确\",{\"1\":{\"94\":1,\"95\":1}}],[\"正在\",{\"1\":{\"81\":1}}],[\"正规\",{\"1\":{\"10\":1}}],[\"让\",{\"1\":{\"81\":1,\"95\":1}}],[\"函数\",{\"1\":{\"81\":1,\"94\":1}}],[\"母\",{\"1\":{\"81\":1}}],[\"构造\",{\"1\":{\"81\":1}}],[\"≤\",{\"1\":{\"78\":2}}],[\"五种\",{\"1\":{\"77\":1}}],[\"拆分\",{\"1\":{\"77\":3}}],[\"少\",{\"1\":{\"75\":1}}],[\"应该\",{\"1\":{\"75\":1}}],[\"应用\",{\"1\":{\"60\":1,\"113\":1}}],[\"推测\",{\"1\":{\"75\":1}}],[\"推导\",{\"1\":{\"4\":1,\"6\":1}}],[\"效果\",{\"1\":{\"75\":1}}],[\"效率\",{\"1\":{\"42\":1,\"93\":1,\"95\":1}}],[\"太短\",{\"1\":{\"75\":1}}],[\"改变\",{\"1\":{\"75\":2}}],[\"改成\",{\"1\":{\"36\":1}}],[\"与\",{\"1\":{\"75\":1}}],[\"距离\",{\"1\":{\"75\":1}}],[\"曼哈顿\",{\"1\":{\"75\":1}}],[\"终点\",{\"1\":{\"75\":1}}],[\"终结\",{\"1\":{\"4\":2,\"5\":1,\"9\":1}}],[\"奇偶性\",{\"1\":{\"75\":4}}],[\"−\",{\"1\":{\"75\":1}}],[\"剪枝\",{\"1\":{\"75\":4}}],[\"想\",{\"1\":{\"75\":2}}],[\"满足\",{\"1\":{\"78\":1,\"83\":1}}],[\"满意\",{\"1\":{\"75\":1}}],[\"满心欢喜\",{\"1\":{\"16\":1}}],[\"耗时\",{\"1\":{\"75\":2}}],[\"虽然\",{\"1\":{\"75\":1}}],[\"交了\",{\"1\":{\"75\":1}}],[\"思想\",{\"1\":{\"75\":1}}],[\"搜索\",{\"1\":{\"75\":1,\"122\":1,\"124\":1}}],[\"搜到\",{\"1\":{\"15\":2}}],[\"恢复\",{\"1\":{\"75\":1}}],[\"步中\",{\"1\":{\"114\":1}}],[\"步\",{\"1\":{\"75\":1}}],[\"因\",{\"1\":{\"90\":1}}],[\"因为\",{\"1\":{\"75\":3,\"94\":1,\"122\":1,\"124\":1}}],[\"因此\",{\"1\":{\"21\":1,\"31\":2,\"60\":1,\"65\":1,\"67\":1,\"70\":1,\"75\":2,\"90\":1,\"96\":1,\"122\":1}}],[\"明显\",{\"1\":{\"75\":1}}],[\"逃生\",{\"1\":{\"72\":1}}],[\"逃离\",{\"1\":{\"70\":2}}],[\"样例\",{\"1\":{\"72\":1,\"75\":1}}],[\"结束\",{\"1\":{\"71\":1}}],[\"结果\",{\"1\":{\"67\":1}}],[\"起点\",{\"1\":{\"71\":1,\"75\":1}}],[\"起来\",{\"1\":{\"11\":1,\"12\":1}}],[\"墙\",{\"1\":{\"71\":1,\"75\":1}}],[\"布局\",{\"1\":{\"71\":1}}],[\"给\",{\"1\":{\"123\":1}}],[\"给出\",{\"1\":{\"71\":1}}],[\"给定\",{\"1\":{\"39\":1,\"96\":1}}],[\"测试用例\",{\"1\":{\"71\":3,\"78\":1}}],[\"测评\",{\"1\":{\"40\":1,\"41\":1,\"42\":1}}],[\"任意\",{\"1\":{\"70\":1}}],[\"任何\",{\"1\":{\"58\":1}}],[\"向\",{\"1\":{\"70\":1}}],[\"恰好\",{\"1\":{\"70\":1,\"75\":1}}],[\"秒\",{\"1\":{\"70\":3}}],[\"门口\",{\"1\":{\"70\":1}}],[\"门\",{\"1\":{\"70\":1,\"71\":2}}],[\"迷宫\",{\"1\":{\"70\":2,\"71\":2}}],[\"长期\",{\"1\":{\"124\":1}}],[\"长方形\",{\"1\":{\"70\":1}}],[\"长度\",{\"1\":{\"60\":1,\"67\":1}}],[\"×\",{\"1\":{\"70\":1}}],[\"强\",{\"1\":{\"95\":1}}],[\"强度\",{\"1\":{\"67\":1}}],[\"强大\",{\"1\":{\"58\":1,\"105\":1}}],[\"提示\",{\"1\":{\"122\":2}}],[\"提高\",{\"1\":{\"93\":1}}],[\"提供\",{\"1\":{\"89\":1,\"93\":1}}],[\"提升\",{\"1\":{\"67\":1,\"93\":1}}],[\"提到\",{\"1\":{\"31\":1,\"59\":1}}],[\"固定\",{\"1\":{\"67\":1}}],[\"图中\",{\"1\":{\"124\":1}}],[\"图灵\",{\"1\":{\"65\":1}}],[\"图案\",{\"1\":{\"28\":1}}],[\"证明\",{\"1\":{\"65\":1}}],[\"被\",{\"1\":{\"65\":1,\"71\":1,\"96\":4}}],[\"巧妙\",{\"1\":{\"65\":1}}],[\"范式\",{\"1\":{\"65\":1}}],[\"范围\",{\"1\":{\"39\":1}}],[\"广泛应用\",{\"1\":{\"65\":1}}],[\"契\",{\"0\":{\"65\":1}}],[\"波\",{\"0\":{\"65\":1}}],[\"斐\",{\"0\":{\"65\":1}}],[\"汇编\",{\"1\":{\"64\":1}}],[\"求值\",{\"1\":{\"64\":1,\"94\":1}}],[\"阶乘\",{\"0\":{\"64\":1}}],[\"—\",{\"0\":{\"64\":2,\"65\":2}}],[\"偏\",{\"1\":{\"61\":1}}],[\"利用\",{\"1\":{\"61\":1}}],[\"多线程\",{\"1\":{\"106\":1}}],[\"多余\",{\"1\":{\"94\":1}}],[\"多\",{\"1\":{\"89\":1,\"109\":1}}],[\"多项式\",{\"1\":{\"81\":2}}],[\"多个\",{\"1\":{\"71\":1,\"78\":1,\"104\":1}}],[\"多种\",{\"0\":{\"61\":1},\"1\":{\"67\":1,\"92\":1}}],[\"多于\",{\"1\":{\"4\":1}}],[\"场景\",{\"1\":{\"60\":1}}],[\"宏\",{\"1\":{\"60\":1,\"67\":1}}],[\"返回\",{\"1\":{\"60\":1,\"67\":1,\"96\":11}}],[\"超过\",{\"1\":{\"59\":1}}],[\"参加\",{\"1\":{\"83\":1}}],[\"参数\",{\"1\":{\"59\":2,\"67\":1}}],[\"参考\",{\"1\":{\"33\":1}}],[\"指针\",{\"0\":{\"96\":1},\"1\":{\"96\":1,\"105\":1}}],[\"指定\",{\"0\":{\"109\":1},\"1\":{\"59\":1,\"96\":5,\"109\":2,\"114\":2,\"115\":1}}],[\"指令\",{\"0\":{\"19\":1,\"115\":1},\"1\":{\"16\":1,\"20\":1}}],[\"额外\",{\"1\":{\"59\":1,\"94\":1}}],[\"若该\",{\"1\":{\"96\":1}}],[\"若\",{\"1\":{\"59\":1,\"96\":6}}],[\"若干个\",{\"1\":{\"7\":2}}],[\"嵌套\",{\"1\":{\"59\":1}}],[\"较大\",{\"1\":{\"59\":1}}],[\"递归\",{\"0\":{\"60\":1},\"1\":{\"59\":2,\"75\":1,\"96\":1}}],[\"定义\",{\"1\":{\"59\":1,\"75\":1,\"104\":1}}],[\"乘以\",{\"1\":{\"59\":2}}],[\"位\",{\"1\":{\"59\":2}}],[\"位置\",{\"1\":{\"27\":2,\"75\":1}}],[\"低\",{\"1\":{\"59\":1,\"90\":1}}],[\"期间\",{\"1\":{\"59\":1,\"64\":1}}],[\"期末\",{\"0\":{\"2\":1}}],[\"消除\",{\"1\":{\"59\":1,\"67\":1}}],[\"消失\",{\"1\":{\"22\":1}}],[\"硬\",{\"1\":{\"59\":1}}],[\"硬件\",{\"1\":{\"27\":1}}],[\"简洁\",{\"1\":{\"93\":1}}],[\"简单\",{\"1\":{\"90\":1,\"96\":1,\"104\":1}}],[\"简易\",{\"0\":{\"67\":1},\"1\":{\"59\":1}}],[\"简体中文\",{\"1\":{\"28\":1}}],[\"原生\",{\"0\":{\"96\":1}}],[\"原始\",{\"0\":{\"59\":1},\"1\":{\"94\":1}}],[\"原理\",{\"0\":{\"2\":1}}],[\"外部\",{\"1\":{\"58\":1}}],[\"元\",{\"0\":{\"65\":1},\"1\":{\"58\":1,\"65\":2}}],[\"具有\",{\"1\":{\"58\":1,\"95\":1}}],[\"具体\",{\"1\":{\"15\":1,\"92\":1,\"93\":1,\"95\":1,\"116\":1}}],[\"混淆\",{\"0\":{\"58\":1,\"67\":1},\"1\":{\"58\":1,\"59\":1}}],[\"7890\",{\"1\":{\"118\":3}}],[\"7\",{\"1\":{\"57\":2,\"59\":2,\"71\":1,\"124\":1}}],[\"7.\",{\"1\":{\"15\":3}}],[\"则\",{\"1\":{\"57\":1,\"96\":7}}],[\"整数\",{\"1\":{\"71\":1,\"78\":1}}],[\"整数倍\",{\"1\":{\"57\":2}}],[\"整个\",{\"1\":{\"36\":1}}],[\"成员\",{\"1\":{\"57\":2}}],[\"成功\",{\"1\":{\"31\":1,\"96\":2,\"118\":2,\"122\":1,\"124\":1}}],[\"联合\",{\"1\":{\"57\":1}}],[\"规则\",{\"1\":{\"57\":1}}],[\"遵循\",{\"1\":{\"57\":1}}],[\"判断\",{\"1\":{\"56\":1,\"94\":1}}],[\"比如\",{\"1\":{\"56\":1,\"90\":1,\"118\":1}}],[\"比较\",{\"1\":{\"30\":1,\"75\":2,\"90\":1}}],[\"段\",{\"1\":{\"56\":1}}],[\"字段\",{\"1\":{\"104\":1,\"110\":1}}],[\"字符\",{\"1\":{\"71\":1,\"96\":1}}],[\"字符串\",{\"0\":{\"58\":1,\"67\":1},\"1\":{\"58\":1,\"59\":1,\"61\":1,\"67\":1,\"93\":2,\"94\":2,\"96\":2}}],[\"字\",{\"1\":{\"56\":1}}],[\"共用\",{\"0\":{\"56\":1},\"1\":{\"56\":1}}],[\"·\",{\"1\":{\"44\":3}}],[\"基本\",{\"0\":{\"113\":1},\"1\":{\"75\":1,\"112\":1,\"124\":1}}],[\"基本上\",{\"1\":{\"15\":1,\"94\":1}}],[\"基于\",{\"1\":{\"59\":1,\"94\":1}}],[\"基数排序\",{\"0\":{\"54\":1},\"1\":{\"44\":1}}],[\"桶\",{\"0\":{\"53\":1},\"1\":{\"44\":1}}],[\"计网\",{\"1\":{\"112\":1}}],[\"计算\",{\"0\":{\"57\":1},\"1\":{\"57\":1,\"81\":2,\"94\":1}}],[\"计算机\",{\"1\":{\"16\":2,\"81\":1}}],[\"计算机网络\",{\"1\":{\"16\":1}}],[\"计数\",{\"0\":{\"52\":1},\"1\":{\"44\":1}}],[\"快速\",{\"0\":{\"50\":1},\"1\":{\"44\":1}}],[\"归并\",{\"0\":{\"49\":1},\"1\":{\"44\":1}}],[\"²\",{\"1\":{\"44\":3}}],[\"希尔\",{\"0\":{\"48\":1},\"1\":{\"44\":1}}],[\"希望\",{\"1\":{\"31\":1}}],[\"稳定\",{\"1\":{\"44\":10}}],[\"稳定性\",{\"1\":{\"44\":1}}],[\"^\",{\"1\":{\"44\":9,\"59\":2,\"60\":12,\"67\":2}}],[\"冒泡排序\",{\"0\":{\"45\":1},\"1\":{\"44\":1}}],[\"空间\",{\"1\":{\"44\":1}}],[\"空空如也\",{\"1\":{\"1\":1}}],[\"平均\",{\"1\":{\"44\":1}}],[\"总览\",{\"0\":{\"44\":1}}],[\"实际\",{\"1\":{\"124\":1}}],[\"实践\",{\"1\":{\"95\":1}}],[\"实测\",{\"1\":{\"59\":1}}],[\"实例\",{\"0\":{\"63\":1},\"1\":{\"59\":1,\"90\":1}}],[\"实现\",{\"0\":{\"43\":1,\"58\":1,\"96\":1},\"1\":{\"58\":1,\"59\":1,\"61\":1,\"89\":1,\"90\":1,\"92\":2,\"93\":1,\"94\":1,\"96\":2}}],[\"实验\",{\"1\":{\"16\":2,\"112\":1}}],[\"及其\",{\"0\":{\"43\":1}}],[\"算法\",{\"0\":{\"43\":1,\"44\":1},\"1\":{\"44\":1,\"60\":1,\"65\":2}}],[\"排序\",{\"0\":{\"43\":1,\"44\":1,\"46\":1,\"48\":1,\"49\":1,\"50\":1,\"52\":1,\"53\":1},\"1\":{\"44\":7}}],[\"排列\",{\"1\":{\"11\":1,\"12\":1,\"13\":1}}],[\"常用\",{\"0\":{\"115\":1},\"1\":{\"87\":1,\"104\":1}}],[\"常量\",{\"1\":{\"67\":1}}],[\"常见\",{\"0\":{\"43\":1}}],[\"常数\",{\"1\":{\"42\":1}}],[\"︎\",{\"1\":{\"42\":1}}],[\"↩\",{\"1\":{\"42\":1}}],[\"需\",{\"1\":{\"42\":1,\"93\":1,\"95\":1}}],[\"需要\",{\"0\":{\"106\":1},\"1\":{\"15\":1,\"16\":1,\"21\":1,\"23\":1,\"26\":1,\"59\":1,\"83\":1,\"92\":1,\"93\":1,\"96\":1,\"109\":1,\"113\":1}}],[\"取消\",{\"1\":{\"113\":1}}],[\"取\",{\"1\":{\"60\":1}}],[\"取出\",{\"1\":{\"42\":1}}],[\"取舍\",{\"1\":{\"15\":1}}],[\"达到\",{\"1\":{\"41\":1}}],[\"合数\",{\"1\":{\"41\":1}}],[\"合并\",{\"1\":{\"18\":2}}],[\"避免\",{\"1\":{\"41\":1,\"60\":1,\"67\":1,\"90\":1,\"93\":2}}],[\"欧拉\",{\"0\":{\"41\":1}}],[\"用于\",{\"1\":{\"96\":1}}],[\"用\",{\"1\":{\"56\":1,\"112\":1,\"124\":2}}],[\"用时\",{\"1\":{\"40\":1,\"41\":1,\"42\":1}}],[\"用户名\",{\"1\":{\"20\":2,\"35\":1,\"114\":1}}],[\"用户\",{\"0\":{\"20\":1},\"1\":{\"35\":3,\"114\":1,\"122\":1}}],[\"!\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"75\":2,\"84\":1,\"96\":21,\"101\":1,\"102\":2,\"103\":1,\"105\":5,\"106\":2}}],[\"5901\",{\"1\":{\"123\":1}}],[\"5011721\",{\"1\":{\"122\":1}}],[\"50615\",{\"1\":{\"122\":1}}],[\"50\",{\"1\":{\"71\":1}}],[\"5\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"49\":1,\"57\":2,\"59\":1,\"64\":1,\"73\":2,\"80\":1,\"103\":2}}],[\"5.0\",{\"1\":{\"102\":1}}],[\"5.\",{\"1\":{\"15\":1}}],[\"5.2.44\",{\"1\":{\"15\":1}}],[\"<\",{\"1\":{\"40\":10,\"41\":9,\"42\":13,\"45\":7,\"49\":11,\"56\":1,\"57\":1,\"59\":12,\"60\":29,\"64\":2,\"65\":9,\"66\":1,\"67\":12,\"71\":4,\"75\":19,\"81\":10,\"84\":8,\"96\":4,\"101\":1,\"102\":5,\"103\":8,\"105\":4,\"106\":1,\"110\":2,\"114\":5}}],[\"确定\",{\"1\":{\"40\":1}}],[\"确认\",{\"1\":{\"16\":2}}],[\"表示\",{\"1\":{\"40\":1,\"71\":1,\"72\":1,\"81\":1,\"114\":1}}],[\"⋅\",{\"1\":{\"40\":1}}],[\"埃氏\",{\"0\":{\"40\":1,\"42\":1},\"1\":{\"42\":1}}],[\"小时\",{\"1\":{\"124\":2}}],[\"小狗\",{\"1\":{\"70\":2,\"72\":1}}],[\"小端序\",{\"1\":{\"56\":1}}],[\"小\",{\"0\":{\"108\":1},\"1\":{\"39\":1}}],[\"kex\",{\"0\":{\"121\":1,\"122\":1},\"1\":{\"121\":1,\"122\":3,\"123\":3}}],[\"kali\",{\"0\":{\"119\":1,\"120\":1,\"124\":1},\"1\":{\"114\":2,\"115\":1,\"116\":1,\"120\":1,\"121\":1,\"122\":2,\"123\":1,\"124\":5}}],[\"koopa\",{\"1\":{\"111\":1}}],[\"konelinx\",{\"1\":{\"62\":1,\"68\":1}}],[\"km\",{\"1\":{\"66\":2}}],[\"k\",{\"1\":{\"39\":1,\"44\":4,\"49\":10,\"60\":4,\"81\":4}}],[\"输\",{\"1\":{\"122\":1}}],[\"输完\",{\"1\":{\"122\":1}}],[\"输出\",{\"1\":{\"39\":1,\"72\":1,\"75\":3,\"77\":1,\"94\":3}}],[\"输入\",{\"1\":{\"16\":3,\"18\":1,\"71\":2,\"78\":1,\"109\":1}}],[\"每\",{\"1\":{\"77\":1}}],[\"每组\",{\"1\":{\"72\":1}}],[\"每行\",{\"1\":{\"71\":1,\"78\":1}}],[\"每一秒\",{\"1\":{\"70\":1}}],[\"每次\",{\"1\":{\"39\":1,\"81\":1,\"106\":1}}],[\"每个\",{\"1\":{\"10\":1,\"61\":1,\"71\":1}}],[\"询问\",{\"1\":{\"39\":1}}],[\"questions\",{\"1\":{\"105\":1,\"124\":1}}],[\"question\",{\"1\":{\"68\":1}}],[\"q\",{\"1\":{\"39\":1,\"40\":3,\"41\":3,\"42\":3}}],[\"题\",{\"1\":{\"75\":1,\"77\":1}}],[\"题意\",{\"1\":{\"39\":1}}],[\"题目\",{\"0\":{\"70\":1,\"77\":1,\"83\":1},\"1\":{\"39\":1,\"69\":1,\"75\":1,\"76\":1,\"82\":1}}],[\"谷\",{\"1\":{\"39\":1}}],[\"洛\",{\"1\":{\"39\":1}}],[\"筛\",{\"0\":{\"39\":1,\"40\":1,\"41\":2,\"42\":1},\"1\":{\"41\":1,\"42\":3}}],[\"素数\",{\"0\":{\"39\":1},\"1\":{\"39\":1,\"40\":1,\"42\":1}}],[\"zh\",{\"1\":{\"113\":1}}],[\"zhihu\",{\"1\":{\"38\":1,\"68\":1}}],[\"zhuanlan\",{\"1\":{\"38\":1}}],[\"zip\",{\"1\":{\"36\":1}}],[\"64\",{\"1\":{\"109\":2}}],[\"63433547\",{\"1\":{\"105\":1}}],[\"627\",{\"1\":{\"80\":1}}],[\"600\",{\"1\":{\"59\":1}}],[\"60\",{\"1\":{\"59\":1}}],[\"6\",{\"1\":{\"59\":1,\"124\":1}}],[\"655022723\",{\"1\":{\"38\":1}}],[\"6953555933733584904\",{\"1\":{\"38\":1}}],[\"6.8\",{\"1\":{\"32\":1}}],[\"损失\",{\"1\":{\"37\":1,\"106\":1}}],[\"措施\",{\"1\":{\"37\":1}}],[\"防护\",{\"1\":{\"37\":1}}],[\"务必\",{\"1\":{\"37\":1}}],[\"生命周期\",{\"0\":{\"97\":1},\"1\":{\"95\":1}}],[\"生日派对\",{\"1\":{\"83\":1}}],[\"生成\",{\"1\":{\"59\":2,\"61\":1,\"64\":1}}],[\"生\",{\"0\":{\"58\":1}}],[\"生产\",{\"1\":{\"37\":1}}],[\"生效\",{\"1\":{\"16\":1}}],[\"如何\",{\"1\":{\"95\":2}}],[\"如下\",{\"1\":{\"64\":1}}],[\"如\",{\"1\":{\"37\":1,\"90\":1,\"92\":1,\"93\":1}}],[\"如果\",{\"1\":{\"15\":1,\"16\":4,\"23\":1,\"26\":1,\"31\":1,\"42\":1,\"75\":3,\"92\":1,\"96\":2,\"104\":1,\"109\":2,\"114\":1,\"122\":1}}],[\"方法\",{\"0\":{\"123\":1},\"1\":{\"94\":2,\"99\":1,\"101\":1,\"102\":1,\"110\":1}}],[\"方格\",{\"1\":{\"75\":1}}],[\"方块\",{\"1\":{\"71\":1}}],[\"方面\",{\"1\":{\"37\":1}}],[\"方式\",{\"1\":{\"31\":2,\"61\":1,\"67\":1,\"75\":1,\"77\":2,\"93\":1,\"104\":1,\"116\":1}}],[\"警告\",{\"0\":{\"37\":1}}],[\"见\",{\"1\":{\"36\":1,\"116\":1}}],[\"主\",{\"1\":{\"123\":1}}],[\"主要\",{\"0\":{\"86\":1}}],[\"主机\",{\"1\":{\"36\":1,\"122\":1}}],[\"主页\",{\"0\":{\"0\":1}}],[\"耐心\",{\"1\":{\"36\":1}}],[\"初探\",{\"0\":{\"64\":1}}],[\"初次\",{\"1\":{\"36\":1}}],[\"初始\",{\"1\":{\"36\":1}}],[\"初始化\",{\"0\":{\"105\":1},\"1\":{\"36\":1}}],[\"初始值\",{\"1\":{\"16\":1}}],[\"端口号\",{\"1\":{\"123\":1}}],[\"端口\",{\"1\":{\"36\":1,\"118\":1,\"123\":1}}],[\"访问\",{\"1\":{\"36\":2,\"75\":1,\"106\":1,\"110\":1}}],[\"名称\",{\"1\":{\"114\":1}}],[\"名\",{\"1\":{\"36\":1,\"94\":1}}],[\"账号\",{\"1\":{\"36\":3}}],[\"索引\",{\"1\":{\"36\":1}}],[\"邮箱\",{\"1\":{\"36\":1}}],[\"@\",{\"1\":{\"36\":3}}],[\"减少\",{\"1\":{\"36\":1,\"88\":1,\"90\":2}}],[\"`\",{\"1\":{\"36\":2,\"96\":31,\"101\":2,\"105\":16,\"110\":2}}],[\"+\",{\"0\":{\"42\":1},\"1\":{\"36\":2,\"40\":9,\"41\":3,\"42\":10,\"44\":4,\"45\":4,\"49\":23,\"59\":8,\"60\":5,\"65\":1,\"67\":3,\"75\":14,\"77\":7,\"81\":21,\"84\":8,\"93\":3,\"94\":3,\"96\":4}}],[\"大意\",{\"0\":{\"70\":1,\"77\":1,\"83\":1}}],[\"大规模\",{\"1\":{\"65\":1}}],[\"大致\",{\"1\":{\"64\":1}}],[\"大量\",{\"1\":{\"59\":1,\"95\":1}}],[\"大小\",{\"1\":{\"57\":4,\"71\":1}}],[\"大端序\",{\"1\":{\"56\":1}}],[\"大概\",{\"1\":{\"36\":2,\"122\":1}}],[\"大部分\",{\"1\":{\"9\":1}}],[\"解压\",{\"1\":{\"36\":1}}],[\"解决方案\",{\"1\":{\"118\":2}}],[\"解决\",{\"0\":{\"14\":1,\"16\":1,\"22\":1,\"123\":1},\"1\":{\"95\":1,\"104\":1,\"124\":1}}],[\"权限\",{\"1\":{\"36\":1,\"122\":1}}],[\"否则\",{\"1\":{\"36\":1,\"37\":1,\"96\":1}}],[\"目标\",{\"1\":{\"96\":3}}],[\"目录\",{\"1\":{\"36\":2,\"109\":1}}],[\"目前\",{\"1\":{\"35\":1,\"116\":1}}],[\"连接\",{\"0\":{\"116\":1},\"1\":{\"35\":1,\"116\":1,\"122\":1,\"123\":1}}],[\"并\",{\"1\":{\"35\":1,\"36\":1,\"60\":2,\"75\":1,\"84\":1,\"104\":1,\"124\":1}}],[\"退出\",{\"1\":{\"35\":1,\"36\":1}}],[\"rdt\",{\"1\":{\"122\":1}}],[\"raw\",{\"1\":{\"96\":3}}],[\"random\",{\"1\":{\"60\":1,\"68\":1}}],[\"rand\",{\"1\":{\"60\":3}}],[\"rchild\",{\"1\":{\"96\":5}}],[\"right\",{\"1\":{\"96\":15}}],[\"rs\",{\"1\":{\"96\":1,\"107\":1,\"111\":1}}],[\"rsp\",{\"1\":{\"64\":1}}],[\"rustfmt\",{\"1\":{\"109\":1}}],[\"rustup\",{\"1\":{\"109\":3}}],[\"rustcn\",{\"1\":{\"107\":1}}],[\"rust\",{\"0\":{\"95\":1,\"108\":1,\"109\":1,\"131\":1},\"1\":{\"95\":2,\"104\":1,\"105\":1,\"107\":1,\"109\":6}}],[\"running\",{\"1\":{\"124\":1}}],[\"run\",{\"1\":{\"36\":1,\"118\":2}}],[\"rbp\",{\"1\":{\"64\":4}}],[\"r\",{\"1\":{\"49\":11,\"60\":5,\"96\":9,\"122\":1}}],[\"rotr\",{\"1\":{\"60\":1}}],[\"rotl\",{\"1\":{\"60\":2}}],[\"role\",{\"1\":{\"35\":2}}],[\"roles\",{\"1\":{\"35\":2}}],[\"root\",{\"1\":{\"35\":2,\"96\":17,\"122\":1}}],[\"redhat\",{\"1\":{\"122\":1}}],[\"reddit\",{\"1\":{\"122\":1}}],[\"reload\",{\"1\":{\"118\":1}}],[\"relative\",{\"1\":{\"101\":3}}],[\"releases\",{\"1\":{\"21\":1}}],[\"repeat\",{\"1\":{\"96\":1}}],[\"replace\",{\"1\":{\"96\":4}}],[\"removing\",{\"1\":{\"96\":1}}],[\"remove\",{\"1\":{\"96\":5}}],[\"receive\",{\"1\":{\"94\":4}}],[\"request\",{\"1\":{\"94\":10,\"118\":1}}],[\"require\",{\"1\":{\"21\":3}}],[\"ret\",{\"1\":{\"64\":1}}],[\"returns\",{\"1\":{\"105\":2}}],[\"return\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"49\":3,\"59\":2,\"60\":9,\"64\":1,\"67\":5,\"75\":2,\"84\":1,\"96\":4}}],[\"resolv\",{\"1\":{\"118\":1}}],[\"res\",{\"1\":{\"101\":2}}],[\"researchgate\",{\"1\":{\"68\":1}}],[\"reset\",{\"1\":{\"18\":1}}],[\"result\",{\"0\":{\"101\":1,\"102\":1},\"1\":{\"59\":4,\"101\":1,\"102\":7,\"103\":4}}],[\"restart\",{\"1\":{\"35\":1,\"118\":1}}],[\"ref\",{\"0\":{\"29\":1,\"38\":1,\"62\":1,\"68\":1,\"107\":1,\"111\":1,\"117\":1},\"1\":{\"105\":1,\"106\":1,\"107\":1}}],[\"rebuild\",{\"1\":{\"21\":1}}],[\"registry\",{\"1\":{\"31\":2,\"36\":2,\"118\":1}}],[\"regedit\",{\"1\":{\"16\":1}}],[\"regular\",{\"1\":{\"10\":1}}],[\"数据\",{\"1\":{\"96\":4,\"104\":1}}],[\"数据库\",{\"1\":{\"35\":1,\"36\":1}}],[\"数据库管理员\",{\"1\":{\"35\":1}}],[\"数组\",{\"1\":{\"81\":2}}],[\"数字\",{\"1\":{\"77\":1}}],[\"数列\",{\"0\":{\"65\":1}}],[\"数\",{\"1\":{\"57\":2,\"96\":1}}],[\"数量\",{\"1\":{\"27\":1,\"75\":1,\"77\":1,\"96\":1}}],[\"密码文件\",{\"1\":{\"122\":2}}],[\"密码\",{\"1\":{\"35\":1,\"36\":1,\"122\":2}}],[\"配置\",{\"0\":{\"113\":1},\"1\":{\"35\":1,\"36\":4,\"109\":1,\"112\":1,\"114\":1,\"118\":1,\"124\":1}}],[\"状态\",{\"1\":{\"35\":1,\"75\":1,\"124\":2}}],[\"来到\",{\"1\":{\"124\":1}}],[\"来\",{\"1\":{\"35\":1,\"59\":1,\"61\":1,\"96\":1}}],[\"服务器\",{\"1\":{\"36\":1}}],[\"服务\",{\"1\":{\"35\":1,\"118\":1}}],[\"&\",{\"0\":{\"34\":2},\"1\":{\"45\":1,\"49\":2,\"59\":2,\"60\":6,\"75\":14,\"96\":16,\"101\":1,\"105\":8}}],[\"另\",{\"1\":{\"33\":1,\"59\":1,\"116\":1}}],[\"环境\",{\"0\":{\"32\":1},\"1\":{\"37\":1}}],[\"上午\",{\"1\":{\"124\":1}}],[\"上移\",{\"1\":{\"96\":2}}],[\"上下左右\",{\"1\":{\"70\":1}}],[\"上下文\",{\"1\":{\"8\":1,\"9\":1}}],[\"上述\",{\"1\":{\"61\":1}}],[\"上\",{\"1\":{\"31\":1,\"59\":1,\"75\":1,\"84\":1,\"90\":1,\"96\":5,\"109\":1}}],[\"频繁\",{\"1\":{\"31\":1}}],[\"特点\",{\"1\":{\"95\":1}}],[\"特定\",{\"1\":{\"92\":1,\"110\":1}}],[\"特性\",{\"0\":{\"63\":1},\"1\":{\"89\":1,\"95\":1,\"109\":1}}],[\"特化\",{\"1\":{\"61\":1}}],[\"特别\",{\"1\":{\"60\":1}}],[\"特地\",{\"1\":{\"31\":1}}],[\"特殊\",{\"1\":{\"5\":1,\"124\":1}}],[\"过度\",{\"1\":{\"60\":1,\"67\":1}}],[\"过\",{\"1\":{\"59\":1}}],[\"过高\",{\"1\":{\"31\":1}}],[\"过程\",{\"1\":{\"30\":2,\"36\":1,\"42\":1,\"112\":1}}],[\"采用\",{\"1\":{\"31\":1,\"67\":1,\"93\":1,\"94\":1}}],[\"高性能\",{\"1\":{\"95\":1}}],[\"高于\",{\"1\":{\"94\":1}}],[\"高\",{\"1\":{\"31\":1,\"59\":1}}],[\"高级\",{\"0\":{\"63\":1},\"1\":{\"9\":1}}],[\"支持\",{\"1\":{\"31\":1,\"92\":1,\"106\":1,\"113\":1}}],[\"二\",{\"1\":{\"31\":1}}],[\"而\",{\"1\":{\"31\":3,\"93\":1,\"94\":1,\"95\":1,\"122\":1}}],[\"而且\",{\"1\":{\"16\":1,\"96\":1,\"122\":1}}],[\"旧\",{\"1\":{\"31\":1}}],[\"仍然\",{\"1\":{\"31\":1}}],[\"部署\",{\"1\":{\"31\":2}}],[\"已知\",{\"1\":{\"116\":1}}],[\"已\",{\"1\":{\"31\":2,\"109\":1}}],[\"已经\",{\"1\":{\"15\":1,\"16\":1,\"22\":1,\"30\":1,\"96\":1,\"124\":1}}],[\"镜像\",{\"1\":{\"31\":2,\"118\":1}}],[\"镜像文件\",{\"0\":{\"24\":1},\"1\":{\"27\":1}}],[\"淘宝\",{\"1\":{\"31\":2}}],[\"里\",{\"1\":{\"31\":1,\"122\":2}}],[\"8.8.8.8\",{\"1\":{\"118\":1}}],[\"8\",{\"1\":{\"57\":1,\"60\":2,\"67\":1,\"75\":1,\"124\":1}}],[\"85\",{\"1\":{\"31\":1,\"38\":1}}],[\"89\",{\"1\":{\"31\":1,\"38\":1}}],[\"%\",{\"1\":{\"31\":6,\"38\":6,\"41\":1,\"57\":2,\"59\":1,\"60\":1}}],[\"#\",{\"0\":{\"103\":1},\"1\":{\"31\":1,\"35\":6,\"38\":1,\"40\":2,\"41\":2,\"42\":3,\"45\":1,\"49\":1,\"56\":1,\"57\":1,\"59\":1,\"60\":4,\"64\":1,\"65\":1,\"66\":1,\"67\":2,\"75\":1,\"81\":1,\"84\":1,\"96\":1,\"102\":1,\"103\":1,\"111\":1,\"124\":1}}],[\"相同\",{\"1\":{\"122\":1}}],[\"相当\",{\"1\":{\"95\":1}}],[\"相互\",{\"1\":{\"83\":1}}],[\"相乘\",{\"1\":{\"81\":2}}],[\"相关\",{\"0\":{\"31\":1,\"100\":1},\"1\":{\"36\":2,\"124\":1}}],[\"相对\",{\"1\":{\"11\":1}}],[\"坑时\",{\"1\":{\"95\":1}}],[\"坑\",{\"0\":{\"119\":1},\"1\":{\"30\":1}}],[\"踩\",{\"0\":{\"119\":1},\"1\":{\"30\":1}}],[\"容易\",{\"1\":{\"30\":1,\"104\":2}}],[\"容量\",{\"1\":{\"27\":1,\"114\":1}}],[\"维护者\",{\"1\":{\"90\":1}}],[\"维护\",{\"1\":{\"30\":1}}],[\"停止\",{\"1\":{\"30\":1}}],[\"系统文件\",{\"1\":{\"122\":1}}],[\"系统\",{\"0\":{\"86\":1},\"1\":{\"28\":1}}],[\"接触\",{\"1\":{\"112\":1}}],[\"接口\",{\"1\":{\"93\":1}}],[\"接近\",{\"1\":{\"42\":1}}],[\"接下来\",{\"1\":{\"28\":1,\"71\":1}}],[\"接着\",{\"1\":{\"16\":1,\"26\":1}}],[\"走\",{\"1\":{\"28\":1,\"70\":1,\"71\":1,\"75\":3}}],[\"苹果\",{\"1\":{\"28\":1}}],[\"加\",{\"1\":{\"118\":1}}],[\"加密\",{\"1\":{\"61\":1,\"67\":1}}],[\"加密算法\",{\"0\":{\"61\":1},\"1\":{\"61\":1,\"67\":2}}],[\"加入\",{\"1\":{\"27\":1}}],[\"加上\",{\"1\":{\"21\":1}}],[\"挂载\",{\"1\":{\"27\":1,\"113\":1,\"115\":1}}],[\"虚拟\",{\"1\":{\"27\":1}}],[\"虚拟机\",{\"0\":{\"23\":1,\"27\":1,\"28\":1},\"1\":{\"15\":1,\"27\":6}}],[\"磁盘\",{\"1\":{\"27\":3}}],[\"桥接\",{\"1\":{\"27\":1}}],[\"网站\",{\"1\":{\"31\":2}}],[\"网络\",{\"1\":{\"27\":1}}],[\"网上\",{\"1\":{\"25\":1}}],[\"默认\",{\"1\":{\"109\":2,\"114\":3,\"118\":2,\"122\":1}}],[\"默认值\",{\"1\":{\"27\":3}}],[\"默认设置\",{\"1\":{\"27\":1}}],[\"内容\",{\"1\":{\"124\":1}}],[\"内\",{\"1\":{\"65\":1,\"110\":2}}],[\"内存\",{\"0\":{\"56\":1},\"1\":{\"27\":1,\"56\":1,\"95\":1}}],[\"内核\",{\"1\":{\"27\":1}}],[\"情况\",{\"1\":{\"27\":1,\"60\":1,\"104\":1,\"124\":2}}],[\"存储\",{\"1\":{\"81\":1}}],[\"存档\",{\"1\":{\"31\":1}}],[\"存放\",{\"1\":{\"27\":3}}],[\"存在\",{\"1\":{\"21\":1,\"31\":1,\"42\":1,\"75\":1,\"77\":1,\"94\":1,\"96\":2}}],[\"操作系统\",{\"1\":{\"27\":1}}],[\"映像\",{\"1\":{\"27\":1}}],[\"稍后\",{\"1\":{\"27\":1}}],[\"兼容性\",{\"1\":{\"27\":1}}],[\"新\",{\"1\":{\"96\":1}}],[\"新增\",{\"1\":{\"96\":1}}],[\"新开\",{\"1\":{\"27\":1}}],[\"新建\",{\"1\":{\"27\":1,\"109\":2}}],[\"新版\",{\"1\":{\"15\":1}}],[\"创建\",{\"0\":{\"27\":1},\"1\":{\"27\":2,\"35\":3,\"96\":1}}],[\"忘关\",{\"1\":{\"26\":1}}],[\"关键字\",{\"0\":{\"110\":1},\"1\":{\"110\":1}}],[\"关键\",{\"1\":{\"95\":1}}],[\"关系\",{\"1\":{\"83\":1}}],[\"关心\",{\"1\":{\"60\":1}}],[\"关闭\",{\"1\":{\"26\":1,\"124\":2}}],[\"关了\",{\"1\":{\"26\":1}}],[\"关机\",{\"1\":{\"16\":1}}],[\"先去\",{\"1\":{\"124\":1}}],[\"先前\",{\"1\":{\"114\":1}}],[\"先导\",{\"1\":{\"114\":1}}],[\"先\",{\"1\":{\"26\":1}}],[\"仓库\",{\"1\":{\"26\":1,\"36\":1}}],[\"u32\",{\"1\":{\"105\":3}}],[\"url\",{\"1\":{\"94\":4}}],[\"util\",{\"1\":{\"87\":1}}],[\"uint32\",{\"1\":{\"60\":11}}],[\"u\",{\"1\":{\"56\":4}}],[\"unregister\",{\"1\":{\"114\":1}}],[\"unreachable\",{\"1\":{\"96\":1}}],[\"unwrap\",{\"1\":{\"101\":1,\"105\":4,\"106\":1}}],[\"unsafe\",{\"0\":{\"96\":1},\"1\":{\"96\":10,\"105\":1,\"107\":1}}],[\"unsigned\",{\"1\":{\"59\":9}}],[\"un2\",{\"1\":{\"57\":2}}],[\"un1\",{\"1\":{\"57\":2}}],[\"union\",{\"0\":{\"55\":1},\"1\":{\"56\":2,\"57\":5}}],[\"unlocker\",{\"0\":{\"26\":1}}],[\"usize\",{\"1\":{\"96\":3}}],[\"using\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"49\":1,\"60\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"75\":1,\"81\":1,\"84\":1}}],[\"usr\",{\"1\":{\"36\":2}}],[\"user\",{\"1\":{\"35\":2,\"36\":2,\"114\":3}}],[\"use\",{\"1\":{\"21\":1,\"35\":2,\"105\":4,\"106\":2}}],[\"ubuntu2004\",{\"1\":{\"114\":1}}],[\"ubuntu\",{\"0\":{\"33\":1},\"1\":{\"31\":1,\"32\":1,\"38\":1,\"114\":6}}],[\"wont\",{\"1\":{\"124\":1}}],[\"working\",{\"1\":{\"122\":1}}],[\"workstation\",{\"1\":{\"25\":1,\"27\":1}}],[\"world\",{\"1\":{\"60\":1,\"67\":2,\"118\":2}}],[\"why\",{\"1\":{\"122\":1}}],[\"while\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"75\":1,\"81\":1,\"84\":1,\"96\":1,\"118\":2}}],[\"wsl\",{\"0\":{\"112\":1,\"116\":1,\"118\":1,\"119\":1,\"124\":1,\"132\":1},\"1\":{\"112\":1,\"113\":2,\"114\":16,\"115\":3,\"116\":1,\"118\":1,\"120\":1,\"122\":1,\"123\":1,\"124\":5}}],[\"wsl2\",{\"0\":{\"33\":1},\"1\":{\"31\":1,\"32\":1,\"37\":1,\"124\":1}}],[\"waiting\",{\"1\":{\"118\":1}}],[\"wall\",{\"1\":{\"75\":5}}],[\"warning\",{\"1\":{\"31\":1}}],[\"www\",{\"1\":{\"68\":2,\"117\":1,\"122\":1}}],[\"with\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"49\":1,\"75\":1,\"81\":1,\"84\":1,\"96\":6}}],[\"winkex\",{\"1\":{\"122\":1}}],[\"win32\",{\"1\":{\"21\":1}}],[\"win11\",{\"1\":{\"16\":1}}],[\"winpcap\",{\"1\":{\"15\":1}}],[\"win\",{\"1\":{\"15\":1,\"26\":1,\"121\":1,\"123\":2}}],[\"windows\",{\"0\":{\"14\":1},\"1\":{\"16\":1,\"109\":2,\"112\":1,\"113\":1}}],[\"weixin\",{\"1\":{\"38\":1}}],[\"行号\",{\"1\":{\"94\":1}}],[\"行\",{\"1\":{\"25\":1,\"71\":1}}],[\"说明\",{\"1\":{\"96\":1}}],[\"说\",{\"1\":{\"25\":1,\"122\":1}}],[\"宿主机\",{\"1\":{\"23\":1}}],[\"前者\",{\"1\":{\"96\":2}}],[\"前\",{\"1\":{\"75\":2,\"81\":1}}],[\"前面\",{\"1\":{\"23\":1,\"118\":1}}],[\"前置\",{\"0\":{\"15\":1}}],[\"写法\",{\"1\":{\"94\":2}}],[\"写\",{\"1\":{\"23\":1,\"104\":1,\"109\":1}}],[\"辣\",{\"1\":{\"22\":1}}],[\"依赖\",{\"1\":{\"22\":1,\"58\":1,\"93\":1}}],[\"删除\",{\"1\":{\"22\":1,\"96\":1,\"114\":1,\"122\":1}}],[\"缓存\",{\"1\":{\"22\":1}}],[\"yes\",{\"1\":{\"72\":1,\"74\":1,\"75\":1}}],[\"y\",{\"1\":{\"59\":1,\"75\":4,\"84\":3,\"103\":2}}],[\"ymfe\",{\"1\":{\"36\":3}}],[\"yapi123\",{\"1\":{\"35\":1,\"36\":1}}],[\"yapiadmin\",{\"1\":{\"35\":1,\"36\":1}}],[\"yapi\",{\"0\":{\"30\":1,\"36\":1},\"1\":{\"30\":1,\"31\":6,\"35\":4,\"36\":7,\"38\":3}}],[\"yarn\",{\"1\":{\"22\":4}}],[\"your\",{\"1\":{\"18\":1}}],[\"you\",{\"1\":{\"18\":1}}],[\"清理\",{\"1\":{\"22\":1}}],[\"第五节\",{\"1\":{\"124\":1}}],[\"第三个\",{\"1\":{\"75\":1}}],[\"第三步\",{\"1\":{\"22\":1}}],[\"第一行\",{\"1\":{\"71\":1,\"109\":1}}],[\"第一步\",{\"1\":{\"22\":1}}],[\"第\",{\"1\":{\"39\":1,\"70\":2,\"81\":2,\"114\":1}}],[\"第二步\",{\"1\":{\"22\":1}}],[\"第二章\",{\"0\":{\"3\":1}}],[\"tutorials\",{\"1\":{\"113\":1}}],[\"tys\",{\"1\":{\"110\":1}}],[\"typedef\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"49\":1,\"84\":1}}],[\"thread\",{\"1\":{\"105\":1}}],[\"the\",{\"0\":{\"69\":1,\"76\":1},\"1\":{\"96\":1,\"105\":6}}],[\"test\",{\"1\":{\"102\":2}}],[\"tempter\",{\"0\":{\"69\":1}}],[\"template\",{\"1\":{\"59\":4,\"60\":4,\"65\":3,\"67\":2,\"68\":1}}],[\"transpose\",{\"0\":{\"103\":1},\"1\":{\"103\":1}}],[\"tree\",{\"1\":{\"96\":13}}],[\"true\",{\"1\":{\"21\":2,\"36\":1,\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"75\":1,\"96\":7}}],[\"toml\",{\"1\":{\"109\":1}}],[\"toolchain\",{\"1\":{\"109\":3}}],[\"to\",{\"1\":{\"101\":3,\"105\":5}}],[\"tojson\",{\"1\":{\"94\":6}}],[\"todo\",{\"1\":{\"46\":1,\"47\":1,\"48\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1}}],[\"tt\",{\"1\":{\"84\":3}}],[\"tar\",{\"1\":{\"114\":3}}],[\"tables\",{\"0\":{\"82\":1}}],[\"tag\",{\"1\":{\"75\":5}}],[\"taobao\",{\"1\":{\"31\":1}}],[\"t\",{\"1\":{\"60\":17,\"67\":3,\"70\":2,\"71\":2,\"75\":12,\"103\":2}}],[\"tigervnc\",{\"1\":{\"122\":1,\"123\":3}}],[\"time\",{\"1\":{\"59\":8,\"60\":1}}],[\"timeout\",{\"1\":{\"36\":1,\"118\":1}}],[\"tie\",{\"1\":{\"40\":2,\"41\":2,\"42\":2,\"45\":2,\"49\":2,\"75\":2,\"81\":2,\"84\":2}}],[\"ts\",{\"0\":{\"22\":1}}],[\"点击\",{\"1\":{\"27\":1}}],[\"点\",{\"0\":{\"22\":1}}],[\"入口\",{\"0\":{\"22\":1}}],[\"库中\",{\"1\":{\"105\":1}}],[\"库\",{\"0\":{\"22\":1,\"85\":1},\"1\":{\"58\":1,\"65\":1,\"87\":1,\"95\":1,\"105\":1}}],[\"隐式\",{\"0\":{\"22\":1}}],[\"该父\",{\"1\":{\"96\":4}}],[\"该项\",{\"1\":{\"96\":1}}],[\"该\",{\"0\":{\"22\":1},\"1\":{\"27\":1,\"71\":1,\"96\":2}}],[\"程序员\",{\"1\":{\"65\":1}}],[\"程序\",{\"0\":{\"22\":1},\"1\":{\"31\":1,\"65\":1,\"94\":1}}],[\"程序设计\",{\"1\":{\"9\":1}}],[\"类型转换\",{\"0\":{\"101\":1,\"102\":1}}],[\"类型\",{\"0\":{\"22\":1,\"101\":1,\"102\":1},\"1\":{\"27\":4}}],[\"类型定义\",{\"0\":{\"22\":1}}],[\"类似\",{\"1\":{\"16\":1,\"31\":1,\"116\":1}}],[\"找到\",{\"1\":{\"26\":1,\"27\":1,\"96\":10,\"122\":1,\"124\":1}}],[\"找个\",{\"1\":{\"25\":1,\"113\":1}}],[\"找\",{\"0\":{\"22\":1},\"1\":{\"122\":1}}],[\"daemon\",{\"1\":{\"118\":2}}],[\"data\",{\"1\":{\"96\":35}}],[\"database\",{\"1\":{\"36\":1}}],[\"dfg\",{\"1\":{\"111\":1}}],[\"dfs\",{\"1\":{\"75\":5}}],[\"does\",{\"1\":{\"122\":1}}],[\"docker\",{\"0\":{\"118\":1},\"1\":{\"118\":8}}],[\"docs\",{\"1\":{\"109\":1}}],[\"double\",{\"1\":{\"66\":2}}],[\"drop\",{\"1\":{\"96\":3}}],[\"dword\",{\"1\":{\"64\":1}}],[\"d3601597248bed423daf1a7cf7bd9533\",{\"1\":{\"62\":1,\"68\":1}}],[\"divisor\",{\"1\":{\"102\":3}}],[\"dividend\",{\"1\":{\"102\":2}}],[\"divide\",{\"1\":{\"102\":4}}],[\"display\",{\"1\":{\"96\":5}}],[\"dis\",{\"1\":{\"66\":1}}],[\"digittoint\",{\"1\":{\"59\":7}}],[\"dirname\",{\"1\":{\"21\":1}}],[\"d\",{\"1\":{\"57\":2,\"71\":1,\"73\":1,\"75\":1,\"115\":1,\"118\":1}}],[\"dbowner\",{\"1\":{\"35\":1}}],[\"db\",{\"1\":{\"35\":4,\"36\":1}}],[\"default\",{\"1\":{\"109\":2,\"114\":3}}],[\"define\",{\"1\":{\"60\":2,\"67\":1}}],[\"derive\",{\"1\":{\"96\":1,\"103\":1}}],[\"decrypt\",{\"1\":{\"60\":4,\"67\":4}}],[\"details\",{\"1\":{\"38\":1}}],[\"dependencies\",{\"1\":{\"105\":1}}],[\"dependency\",{\"1\":{\"31\":1}}],[\"deploy\",{\"1\":{\"38\":1}}],[\"depth\",{\"1\":{\"36\":1}}],[\"devblogs\",{\"1\":{\"113\":1}}],[\"devops\",{\"1\":{\"31\":1,\"38\":1}}],[\"deviceguard\",{\"1\":{\"16\":1}}],[\"denied\",{\"1\":{\"26\":1}}],[\"debug\",{\"1\":{\"21\":2,\"93\":2,\"94\":7,\"96\":2,\"103\":1}}],[\"jianshu\",{\"1\":{\"117\":1}}],[\"jcl\",{\"1\":{\"92\":1}}],[\"jack\",{\"1\":{\"106\":1}}],[\"jar\",{\"1\":{\"92\":1}}],[\"jakarta\",{\"1\":{\"92\":1}}],[\"java\",{\"0\":{\"85\":1,\"130\":1},\"1\":{\"87\":2,\"93\":1}}],[\"just\",{\"1\":{\"105\":2}}],[\"jul\",{\"0\":{\"87\":1},\"1\":{\"92\":1}}],[\"juejin\",{\"1\":{\"38\":1}}],[\"j\",{\"1\":{\"40\":4,\"41\":3,\"42\":4,\"45\":7,\"49\":4,\"75\":9,\"81\":12}}],[\"join\",{\"1\":{\"21\":1}}],[\"json\",{\"1\":{\"36\":6,\"118\":1}}],[\"js\",{\"1\":{\"21\":1,\"36\":1}}],[\"?\",{\"1\":{\"21\":1,\"59\":1,\"64\":1,\"69\":1,\"75\":1,\"76\":1,\"82\":1,\"101\":1,\"122\":1}}],[\"icu9ks\",{\"1\":{\"122\":1}}],[\"ip\",{\"1\":{\"122\":1}}],[\"import\",{\"1\":{\"114\":2}}],[\"implementation\",{\"1\":{\"90\":1}}],[\"impl\",{\"1\":{\"60\":3,\"96\":3}}],[\"ir\",{\"1\":{\"110\":3,\"111\":1}}],[\"i32\",{\"1\":{\"96\":11,\"103\":2}}],[\"id\",{\"1\":{\"93\":4}}],[\"is\",{\"1\":{\"96\":27,\"105\":4}}],[\"isdebugenabled\",{\"1\":{\"93\":1,\"94\":1}}],[\"iso\",{\"0\":{\"24\":1},\"1\":{\"27\":1}}],[\"iii\",{\"0\":{\"76\":1}}],[\"ignatius\",{\"0\":{\"76\":1}}],[\"it\",{\"1\":{\"45\":2,\"105\":2,\"124\":1}}],[\"ios\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"49\":1,\"75\":1,\"81\":1,\"84\":1}}],[\"iostream\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"59\":1,\"60\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1}}],[\"io\",{\"1\":{\"31\":1,\"38\":2,\"107\":1,\"118\":1}}],[\"i\",{\"1\":{\"27\":1,\"40\":12,\"41\":7,\"42\":12,\"45\":4,\"49\":12,\"56\":2,\"57\":2,\"60\":21,\"67\":13,\"75\":14,\"81\":10,\"84\":13}}],[\"if\",{\"1\":{\"21\":1,\"40\":2,\"41\":3,\"42\":2,\"45\":2,\"49\":4,\"56\":1,\"75\":9,\"84\":2,\"93\":1,\"94\":1,\"96\":27,\"102\":1}}],[\"init\",{\"1\":{\"105\":1}}],[\"initializes\",{\"1\":{\"105\":2}}],[\"indent\",{\"1\":{\"96\":7}}],[\"index\",{\"1\":{\"31\":1,\"38\":1,\"60\":6,\"67\":4}}],[\"inorder\",{\"1\":{\"96\":1}}],[\"input\",{\"0\":{\"71\":1,\"73\":1,\"78\":1,\"79\":1}}],[\"in\",{\"1\":{\"60\":9,\"110\":2}}],[\"inline\",{\"1\":{\"60\":6,\"67\":2}}],[\"into\",{\"1\":{\"96\":2}}],[\"int\",{\"1\":{\"40\":8,\"41\":8,\"42\":8,\"45\":5,\"49\":13,\"56\":2,\"57\":3,\"59\":11,\"60\":3,\"64\":3,\"65\":5,\"66\":1,\"67\":1,\"75\":13,\"81\":8,\"84\":10}}],[\"include\",{\"1\":{\"40\":2,\"41\":2,\"42\":3,\"45\":1,\"49\":1,\"56\":1,\"57\":1,\"59\":1,\"60\":2,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"75\":1,\"81\":1,\"84\":1}}],[\"insert\",{\"1\":{\"96\":5,\"105\":6}}],[\"inside\",{\"1\":{\"31\":1}}],[\"install\",{\"1\":{\"21\":1,\"22\":1,\"26\":1,\"34\":2,\"35\":1,\"36\":2,\"38\":1,\"120\":1,\"121\":1}}],[\"inherit\",{\"1\":{\"21\":1}}],[\"info\",{\"1\":{\"18\":1}}],[\"]\",{\"1\":{\"21\":1,\"35\":2,\"40\":10,\"41\":3,\"42\":7,\"45\":4,\"49\":16,\"57\":2,\"59\":7,\"60\":13,\"64\":1,\"67\":5,\"75\":24,\"81\":9,\"84\":8,\"96\":2,\"102\":1,\"103\":1,\"105\":1,\"109\":2,\"118\":1}}],[\"[\",{\"1\":{\"21\":1,\"35\":2,\"40\":10,\"41\":3,\"42\":7,\"45\":4,\"49\":16,\"57\":2,\"59\":7,\"60\":13,\"64\":1,\"67\":5,\"75\":24,\"81\":9,\"84\":8,\"96\":2,\"102\":1,\"103\":1,\"105\":1,\"109\":2,\"118\":1}}],[\";\",{\"1\":{\"21\":8,\"40\":24,\"41\":20,\"42\":24,\"45\":17,\"49\":30,\"56\":6,\"57\":8,\"59\":19,\"60\":30,\"64\":3,\"65\":8,\"66\":3,\"67\":14,\"75\":38,\"77\":5,\"81\":21,\"84\":24,\"93\":2,\"94\":6,\"96\":43,\"101\":3,\"102\":6,\"103\":4,\"105\":18,\"106\":6}}],[\"'\",{\"0\":{\"97\":1},\"1\":{\"21\":24,\"31\":2,\"40\":2,\"41\":2,\"42\":2,\"45\":2,\"49\":2,\"59\":2,\"60\":2,\"67\":2,\"75\":16,\"81\":2,\"84\":2,\"105\":3}}],[\"包\",{\"1\":{\"21\":1,\"31\":1,\"36\":1,\"92\":1}}],[\"包含\",{\"0\":{\"22\":1},\"1\":{\"4\":2,\"5\":1,\"71\":2,\"78\":1}}],[\"owned\",{\"1\":{\"101\":1}}],[\"or\",{\"1\":{\"101\":2,\"105\":1}}],[\"org\",{\"1\":{\"21\":1,\"31\":1,\"36\":1,\"59\":1,\"107\":1}}],[\"ok\",{\"1\":{\"101\":3,\"102\":6,\"103\":2}}],[\"opening\",{\"1\":{\"122\":1}}],[\"operator\",{\"1\":{\"60\":1,\"66\":1}}],[\"option\",{\"0\":{\"101\":1,\"102\":1,\"103\":1},\"1\":{\"96\":1,\"102\":6,\"103\":4}}],[\"o1\",{\"1\":{\"67\":1}}],[\"obfuscated1\",{\"1\":{\"67\":2}}],[\"obf\",{\"1\":{\"60\":3}}],[\"output\",{\"0\":{\"72\":1,\"74\":1,\"80\":1}}],[\"out\",{\"1\":{\"60\":5}}],[\"o0\",{\"1\":{\"59\":1}}],[\"of\",{\"0\":{\"69\":1},\"1\":{\"31\":1,\"96\":4}}],[\"off\",{\"1\":{\"16\":3}}],[\"o\",{\"1\":{\"27\":1,\"40\":1,\"41\":1,\"42\":1,\"44\":40}}],[\"oncelock\",{\"1\":{\"105\":4}}],[\"on\",{\"1\":{\"21\":1,\"124\":1}}],[\"os\",{\"1\":{\"21\":3}}],[\"禁止\",{\"1\":{\"21\":1,\"104\":1}}],[\"安全性\",{\"1\":{\"95\":1,\"104\":1}}],[\"安全\",{\"1\":{\"37\":1,\"96\":1}}],[\"安全漏洞\",{\"1\":{\"21\":1}}],[\"安装程序\",{\"1\":{\"36\":1}}],[\"安装\",{\"0\":{\"23\":1,\"30\":1,\"32\":1,\"36\":1,\"120\":1,\"121\":1},\"1\":{\"15\":2,\"16\":1,\"27\":2,\"28\":2,\"30\":2,\"31\":1,\"36\":1,\"37\":2,\"109\":1,\"114\":3}}],[\"进一步\",{\"1\":{\"67\":1}}],[\"进入\",{\"1\":{\"28\":1,\"35\":1,\"75\":1,\"122\":1,\"124\":1}}],[\"进度条\",{\"1\":{\"28\":2}}],[\"进程\",{\"1\":{\"21\":1}}],[\"进行\",{\"1\":{\"4\":1,\"92\":1}}],[\"子\",{\"1\":{\"21\":1,\"96\":6}}],[\"子树\",{\"1\":{\"11\":1,\"12\":1,\"13\":1,\"96\":1}}],[\"”\",{\"0\":{\"21\":1,\"22\":1},\"1\":{\"27\":1,\"28\":1,\"90\":2,\"122\":1,\"124\":1}}],[\"“\",{\"0\":{\"21\":1,\"22\":1},\"1\":{\"27\":1,\"28\":1,\"90\":2,\"122\":1,\"124\":1}}],[\"设计\",{\"1\":{\"90\":1}}],[\"设置\",{\"1\":{\"20\":1,\"27\":6}}],[\"设备\",{\"1\":{\"16\":2,\"122\":1}}],[\"其他\",{\"1\":{\"93\":1,\"114\":1}}],[\"其中\",{\"1\":{\"59\":1,\"83\":1,\"118\":1}}],[\"其\",{\"1\":{\"20\":1,\"95\":1}}],[\"其实\",{\"1\":{\"16\":1}}],[\"切换\",{\"0\":{\"20\":1},\"1\":{\"20\":3,\"31\":1,\"35\":2,\"92\":1,\"109\":2}}],[\"备忘录\",{\"0\":{\"19\":1,\"112\":1}}],[\"please\",{\"1\":{\"122\":1}}],[\"platform\",{\"1\":{\"21\":1}}],[\"pku\",{\"1\":{\"111\":1}}],[\"pc\",{\"1\":{\"109\":2}}],[\"pid\",{\"1\":{\"69\":1,\"76\":1,\"82\":1}}],[\"php\",{\"1\":{\"69\":1,\"76\":1,\"82\":1}}],[\"ptr\",{\"1\":{\"64\":1,\"96\":10}}],[\"pty\",{\"1\":{\"21\":1}}],[\"println\",{\"1\":{\"105\":4,\"106\":1}}],[\"printf\",{\"1\":{\"56\":2,\"57\":2}}],[\"princess\",{\"0\":{\"76\":1}}],[\"private\",{\"1\":{\"59\":1,\"60\":2,\"67\":2}}],[\"pri\",{\"1\":{\"41\":3}}],[\"prime\",{\"1\":{\"40\":3,\"41\":4,\"42\":3}}],[\"projects\",{\"1\":{\"123\":1}}],[\"proxy\",{\"1\":{\"118\":4}}],[\"profile\",{\"1\":{\"109\":1}}],[\"problem\",{\"0\":{\"98\":1}}],[\"production\",{\"1\":{\"36\":1}}],[\"property\",{\"1\":{\"31\":1}}],[\"pro\",{\"1\":{\"25\":1}}],[\"process\",{\"1\":{\"21\":3,\"94\":2}}],[\"p\",{\"1\":{\"38\":1,\"117\":1}}],[\"pop\",{\"1\":{\"64\":1}}],[\"posts\",{\"0\":{\"126\":1}}],[\"post\",{\"1\":{\"38\":1}}],[\"port\",{\"1\":{\"36\":3}}],[\"pwd\",{\"1\":{\"35\":2}}],[\"permission\",{\"1\":{\"26\":1}}],[\"pub\",{\"0\":{\"110\":1},\"1\":{\"96\":9,\"110\":5}}],[\"publication\",{\"1\":{\"68\":1}}],[\"public\",{\"1\":{\"59\":1,\"110\":2}}],[\"push\",{\"1\":{\"21\":1,\"41\":1,\"64\":1,\"96\":3,\"106\":1}}],[\"pull\",{\"1\":{\"18\":1}}],[\"partialeq\",{\"1\":{\"103\":1}}],[\"parent\",{\"1\":{\"96\":26}}],[\"panic\",{\"1\":{\"96\":1}}],[\"pass\",{\"1\":{\"36\":2}}],[\"passwd\",{\"1\":{\"20\":1}}],[\"password\",{\"1\":{\"20\":1,\"122\":1}}],[\"pathbuf\",{\"1\":{\"101\":1}}],[\"path\",{\"1\":{\"21\":3,\"101\":5}}],[\"ps\",{\"1\":{\"15\":1}}],[\"覆盖\",{\"1\":{\"18\":1}}],[\"\\\"\",{\"0\":{\"22\":2},\"1\":{\"18\":2,\"27\":2,\"35\":16,\"36\":58,\"56\":4,\"57\":4,\"60\":12,\"66\":2,\"67\":8,\"75\":10,\"93\":6,\"94\":12,\"96\":9,\"101\":2,\"102\":2,\"105\":30,\"106\":6,\"109\":16,\"118\":6}}],[\"种子\",{\"1\":{\"61\":1}}],[\"种\",{\"1\":{\"18\":1}}],[\"nightly\",{\"1\":{\"109\":2}}],[\"new\",{\"1\":{\"96\":8,\"105\":3,\"106\":1}}],[\"net\",{\"1\":{\"38\":1,\"68\":1,\"118\":1,\"123\":1}}],[\"null\",{\"1\":{\"96\":39}}],[\"number\",{\"1\":{\"68\":1}}],[\"ny\",{\"1\":{\"75\":7}}],[\"nx\",{\"1\":{\"75\":7}}],[\"nxt\",{\"1\":{\"75\":3}}],[\"nlogn\",{\"1\":{\"44\":8}}],[\"nlog\",{\"1\":{\"44\":3}}],[\"nameserver\",{\"1\":{\"118\":1}}],[\"names\",{\"1\":{\"106\":2}}],[\"namespace\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"49\":1,\"59\":1,\"60\":2,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"75\":1,\"81\":1,\"84\":1}}],[\"name\",{\"1\":{\"93\":4,\"101\":2}}],[\"nat\",{\"1\":{\"16\":1,\"27\":1}}],[\"n\",{\"1\":{\"39\":1,\"40\":9,\"41\":8,\"42\":9,\"44\":25,\"45\":4,\"49\":9,\"57\":2,\"59\":9,\"60\":8,\"64\":4,\"65\":3,\"67\":1,\"70\":1,\"71\":3,\"75\":14,\"77\":1,\"78\":2,\"81\":4,\"83\":1,\"84\":7,\"96\":2}}],[\"nvm\",{\"1\":{\"31\":1}}],[\"npmmirror\",{\"1\":{\"31\":1,\"36\":1}}],[\"npm\",{\"0\":{\"34\":1},\"1\":{\"31\":1,\"32\":1,\"34\":1,\"36\":2}}],[\"no\",{\"1\":{\"72\":1,\"74\":1,\"75\":7,\"118\":1}}],[\"none\",{\"1\":{\"96\":2,\"102\":3}}],[\"non\",{\"1\":{\"31\":1}}],[\"nodesucc\",{\"1\":{\"96\":3}}],[\"node\",{\"1\":{\"21\":3,\"22\":1,\"31\":3,\"36\":1,\"96\":116}}],[\"nodejs\",{\"0\":{\"21\":1,\"34\":1},\"1\":{\"21\":1,\"32\":1,\"34\":1}}],[\"not\",{\"1\":{\"18\":1,\"122\":1,\"125\":1}}],[\":\",{\"0\":{\"21\":1,\"22\":1,\"40\":1,\"41\":1,\"42\":1},\"1\":{\"18\":1,\"21\":6,\"31\":5,\"35\":10,\"36\":24,\"38\":6,\"40\":2,\"41\":3,\"42\":2,\"45\":4,\"49\":2,\"59\":11,\"60\":13,\"62\":2,\"64\":2,\"65\":6,\"67\":7,\"68\":4,\"69\":1,\"75\":3,\"76\":1,\"81\":2,\"82\":1,\"84\":2,\"93\":4,\"94\":6,\"96\":88,\"99\":2,\"101\":3,\"102\":8,\"103\":2,\"105\":23,\"106\":11,\"107\":3,\"110\":8,\"111\":1,\"113\":2,\"114\":3,\"117\":1,\"118\":7,\"122\":2,\"123\":1,\"124\":1}}],[\"报错\",{\"0\":{\"21\":1,\"22\":1},\"1\":{\"18\":1,\"21\":1,\"22\":1,\"31\":1,\"118\":1}}],[\"遇到\",{\"1\":{\"18\":1,\"26\":1,\"95\":1,\"122\":1}}],[\"试图\",{\"1\":{\"18\":1,\"122\":1}}],[\"mnt\",{\"1\":{\"115\":1}}],[\"microsoft\",{\"1\":{\"113\":2}}],[\"minic\",{\"1\":{\"111\":1}}],[\"miri\",{\"1\":{\"109\":1}}],[\"mid\",{\"1\":{\"49\":7}}],[\"md\",{\"1\":{\"107\":1}}],[\"myth\",{\"1\":{\"106\":1}}],[\"mutex\",{\"1\":{\"106\":3}}],[\"mut\",{\"1\":{\"96\":36,\"105\":2,\"106\":1}}],[\"mul\",{\"1\":{\"41\":3}}],[\"mp\",{\"1\":{\"75\":9}}],[\"ms\",{\"1\":{\"75\":2}}],[\"metaprograms\",{\"1\":{\"68\":1}}],[\"metastr\",{\"1\":{\"62\":1}}],[\"metastring1\",{\"1\":{\"67\":3}}],[\"metastring\",{\"1\":{\"60\":3}}],[\"metarandom\",{\"1\":{\"59\":4}}],[\"metarandomgenerator\",{\"1\":{\"59\":4}}],[\"memcpy\",{\"1\":{\"49\":1}}],[\"me\",{\"1\":{\"38\":1,\"122\":1}}],[\"merge\",{\"0\":{\"18\":1},\"1\":{\"18\":3,\"49\":4}}],[\"master\",{\"1\":{\"111\":1}}],[\"many\",{\"0\":{\"82\":1}}],[\"make\",{\"1\":{\"60\":2,\"67\":1}}],[\"max\",{\"1\":{\"59\":1}}],[\"main\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"49\":1,\"56\":1,\"57\":1,\"59\":1,\"60\":1,\"64\":2,\"65\":1,\"66\":1,\"67\":1,\"75\":1,\"81\":1,\"84\":1,\"96\":1,\"105\":2,\"106\":1}}],[\"mail\",{\"1\":{\"36\":1}}],[\"mac\",{\"0\":{\"28\":1}}],[\"macos\",{\"0\":{\"23\":1,\"26\":1}}],[\"machine\",{\"1\":{\"16\":1}}],[\"mkdir\",{\"1\":{\"36\":1}}],[\"mod\",{\"1\":{\"110\":1}}],[\"module\",{\"1\":{\"31\":1}}],[\"modules\",{\"1\":{\"22\":1}}],[\"more\",{\"1\":{\"105\":1}}],[\"mov\",{\"1\":{\"64\":3}}],[\"mongod\",{\"1\":{\"35\":1}}],[\"mongodb\",{\"0\":{\"35\":1},\"1\":{\"32\":1,\"35\":8}}],[\"mongo\",{\"1\":{\"35\":1}}],[\"mb\",{\"1\":{\"27\":1}}],[\"m\",{\"1\":{\"18\":1,\"36\":2,\"44\":4,\"59\":7,\"70\":1,\"71\":3,\"75\":7,\"84\":3,\"105\":10}}],[\"命令行\",{\"1\":{\"31\":1}}],[\"命令\",{\"0\":{\"17\":1},\"1\":{\"36\":1,\"122\":1}}],[\"记事本\",{\"1\":{\"27\":1}}],[\"记录\",{\"0\":{\"17\":1,\"108\":1,\"119\":1},\"1\":{\"30\":1,\"90\":2,\"96\":1,\"104\":1,\"112\":1,\"124\":1}}],[\"记为\",{\"1\":{\"6\":1}}],[\"~\",{\"1\":{\"16\":1,\"22\":1,\"115\":1}}],[\"愉快\",{\"1\":{\"16\":1}}],[\"分离\",{\"1\":{\"90\":1}}],[\"分布\",{\"1\":{\"60\":1}}],[\"分支\",{\"1\":{\"18\":3}}],[\"分别\",{\"1\":{\"16\":1,\"71\":1,\"118\":1}}],[\"分析树\",{\"1\":{\"13\":1}}],[\"三项\",{\"1\":{\"16\":1}}],[\"三个\",{\"1\":{\"16\":1,\"71\":2}}],[\"07\",{\"1\":{\"109\":1}}],[\"01\",{\"1\":{\"62\":1}}],[\"010\",{\"1\":{\"60\":3}}],[\"030\",{\"1\":{\"60\":1}}],[\"020\",{\"1\":{\"60\":2}}],[\"0.0\",{\"1\":{\"102\":2}}],[\"0.82\",{\"1\":{\"42\":1}}],[\"0.75\",{\"1\":{\"41\":1}}],[\"04\",{\"1\":{\"38\":3}}],[\"0\",{\"1\":{\"16\":2,\"27\":1,\"40\":5,\"41\":4,\"42\":5,\"45\":5,\"49\":3,\"59\":7,\"60\":24,\"64\":1,\"65\":2,\"67\":5,\"71\":2,\"73\":3,\"75\":10,\"81\":7,\"84\":3,\"96\":3,\"105\":6}}],[\"修改\",{\"0\":{\"106\":1},\"1\":{\"16\":1,\"27\":1,\"35\":1,\"36\":2,\"93\":1,\"104\":1,\"118\":1}}],[\"均匀\",{\"1\":{\"60\":1}}],[\"均\",{\"1\":{\"16\":1}}],[\"把\",{\"1\":{\"16\":1,\"26\":2,\"27\":1,\"36\":1}}],[\"然后\",{\"1\":{\"16\":1,\"20\":1,\"22\":1,\"36\":1,\"81\":1,\"96\":3,\"118\":1,\"123\":1,\"124\":1}}],[\"路\",{\"1\":{\"75\":1}}],[\"路径\",{\"1\":{\"16\":1,\"27\":1,\"114\":3}}],[\"路由器\",{\"1\":{\"16\":3}}],[\"\\\\\",{\"1\":{\"16\":5,\"40\":1,\"41\":1,\"42\":1,\"57\":2,\"60\":2,\"67\":1,\"75\":4,\"81\":1,\"84\":1,\"96\":2,\"105\":8,\"114\":6}}],[\"于是\",{\"1\":{\"75\":1}}],[\"于\",{\"1\":{\"16\":1,\"65\":1}}],[\"于子\",{\"1\":{\"11\":1}}],[\"跳\",{\"1\":{\"16\":1}}],[\"跳出\",{\"1\":{\"16\":1}}],[\"能够\",{\"1\":{\"90\":1}}],[\"能否\",{\"1\":{\"72\":1}}],[\"能\",{\"1\":{\"16\":2,\"28\":1,\"75\":1,\"110\":2,\"124\":1}}],[\"注册表\",{\"1\":{\"16\":1}}],[\"注意事项\",{\"0\":{\"94\":1}}],[\"注意\",{\"1\":{\"16\":1,\"26\":1,\"40\":1,\"60\":2,\"64\":1,\"67\":1}}],[\"打开\",{\"1\":{\"16\":1,\"27\":2,\"28\":1,\"71\":1}}],[\"家庭版\",{\"1\":{\"16\":1}}],[\"重用\",{\"1\":{\"90\":1}}],[\"重复\",{\"1\":{\"41\":1,\"75\":1}}],[\"重新\",{\"1\":{\"22\":1,\"26\":1,\"92\":1,\"93\":1}}],[\"重新启动\",{\"1\":{\"16\":1,\"35\":1}}],[\"重启\",{\"1\":{\"16\":3,\"118\":1,\"124\":2}}],[\"再次\",{\"1\":{\"122\":1}}],[\"再\",{\"1\":{\"16\":2,\"23\":1,\"81\":1,\"96\":1,\"118\":1,\"124\":1}}],[\"后台\",{\"1\":{\"124\":1}}],[\"后面\",{\"1\":{\"124\":1}}],[\"后续\",{\"0\":{\"105\":1}}],[\"后者\",{\"1\":{\"96\":2}}],[\"后缀\",{\"0\":{\"66\":1},\"1\":{\"60\":1,\"67\":1}}],[\"后果自负\",{\"1\":{\"37\":1}}],[\"后会\",{\"1\":{\"28\":1}}],[\"后\",{\"1\":{\"16\":2,\"35\":1,\"36\":2,\"114\":1,\"122\":1,\"123\":1,\"124\":3}}],[\"执行\",{\"1\":{\"16\":1,\"21\":1,\"65\":2,\"94\":2,\"118\":1,\"123\":1}}],[\"值\",{\"1\":{\"16\":2,\"61\":1,\"67\":1}}],[\"项目\",{\"1\":{\"30\":1,\"92\":1,\"109\":3,\"110\":1}}],[\"项\",{\"1\":{\"16\":3,\"96\":3,\"114\":1}}],[\"how\",{\"0\":{\"82\":1}}],[\"host\",{\"1\":{\"36\":1}}],[\"hdu\",{\"1\":{\"69\":1,\"76\":1,\"82\":1}}],[\"hdoj\",{\"0\":{\"69\":1,\"76\":1,\"82\":1,\"129\":1}}],[\"hi\",{\"1\":{\"59\":3}}],[\"h\",{\"1\":{\"45\":1,\"49\":1,\"56\":1,\"57\":1,\"60\":3,\"75\":1,\"81\":1,\"84\":1}}],[\"html\",{\"1\":{\"31\":1,\"38\":1,\"107\":1}}],[\"https\",{\"1\":{\"21\":1,\"31\":3,\"36\":3,\"38\":6,\"62\":2,\"68\":4,\"105\":1,\"107\":3,\"111\":1,\"113\":2,\"117\":1,\"118\":2,\"122\":2,\"123\":1,\"124\":1}}],[\"http\",{\"1\":{\"16\":1,\"36\":1,\"69\":1,\"76\":1,\"82\":1,\"118\":4}}],[\"help\",{\"1\":{\"122\":1}}],[\"helper\",{\"1\":{\"60\":3,\"67\":2,\"124\":1}}],[\"hello\",{\"1\":{\"60\":1,\"67\":2,\"110\":1,\"118\":2}}],[\"hellosean1025\",{\"1\":{\"31\":1,\"38\":1}}],[\"headers\",{\"1\":{\"118\":1}}],[\"head\",{\"1\":{\"18\":1}}],[\"hashmap\",{\"1\":{\"105\":19,\"110\":2}}],[\"hash\",{\"0\":{\"60\":1},\"1\":{\"60\":8}}],[\"hard\",{\"1\":{\"18\":1}}],[\"have\",{\"1\":{\"18\":1}}],[\"hkey\",{\"1\":{\"16\":1}}],[\"hypervisorlaunchtype\",{\"1\":{\"16\":2}}],[\"crate\",{\"1\":{\"110\":3,\"124\":3}}],[\"crates\",{\"1\":{\"107\":2}}],[\"createuser\",{\"1\":{\"35\":2}}],[\"ceki\",{\"1\":{\"93\":1}}],[\"c1\",{\"1\":{\"81\":6}}],[\"c2\",{\"1\":{\"81\":5}}],[\"cstdint\",{\"1\":{\"60\":1}}],[\"csdn\",{\"1\":{\"38\":1}}],[\"channel\",{\"1\":{\"109\":1}}],[\"char\",{\"1\":{\"56\":1,\"57\":1,\"59\":2,\"60\":16,\"67\":10,\"75\":1}}],[\"child\",{\"1\":{\"21\":1,\"96\":5}}],[\"c\",{\"0\":{\"55\":1},\"1\":{\"56\":2,\"57\":2,\"59\":2,\"60\":4,\"67\":5,\"68\":1,\"114\":1}}],[\"c++\",{\"0\":{\"58\":1,\"63\":1,\"67\":1},\"1\":{\"45\":1,\"49\":1,\"58\":2,\"59\":2,\"62\":1,\"65\":2,\"75\":1,\"81\":1,\"84\":1,\"104\":1}}],[\"cin\",{\"1\":{\"40\":3,\"41\":3,\"42\":3,\"45\":3,\"49\":3,\"75\":3,\"81\":2,\"84\":4}}],[\"circular\",{\"1\":{\"31\":1}}],[\"cnt\",{\"1\":{\"40\":2,\"42\":2,\"84\":3}}],[\"cn\",{\"1\":{\"38\":1,\"69\":1,\"76\":1,\"82\":1,\"113\":1}}],[\"cpp\",{\"0\":{\"128\":1}}],[\"cp\",{\"1\":{\"36\":1}}],[\"cpu\",{\"1\":{\"23\":1}}],[\"cd\",{\"1\":{\"36\":3}}],[\"canceled\",{\"1\":{\"118\":1}}],[\"caller\",{\"1\":{\"94\":1}}],[\"cast\",{\"1\":{\"60\":2,\"67\":1}}],[\"cat\",{\"1\":{\"31\":1}}],[\"cache\",{\"1\":{\"22\":1}}],[\"cacheddrtmauthindex\",{\"1\":{\"16\":1}}],[\"client\",{\"1\":{\"118\":1}}],[\"clippy\",{\"1\":{\"109\":1}}],[\"clone\",{\"1\":{\"26\":1,\"36\":3}}],[\"clean\",{\"1\":{\"22\":1}}],[\"cwd\",{\"1\":{\"21\":1}}],[\"collections\",{\"1\":{\"105\":2}}],[\"column\",{\"1\":{\"60\":2}}],[\"core\",{\"1\":{\"90\":1}}],[\"count\",{\"1\":{\"96\":7}}],[\"counter\",{\"1\":{\"59\":2,\"60\":1}}],[\"course\",{\"1\":{\"96\":1,\"107\":1}}],[\"cout\",{\"1\":{\"40\":2,\"41\":2,\"42\":2,\"45\":2,\"49\":2,\"60\":2,\"67\":1,\"75\":5,\"81\":2,\"84\":2}}],[\"components\",{\"1\":{\"109\":1}}],[\"computed\",{\"1\":{\"105\":2}}],[\"comments\",{\"1\":{\"122\":1}}],[\"commandline\",{\"1\":{\"113\":1}}],[\"commons\",{\"1\":{\"92\":1}}],[\"common\",{\"0\":{\"92\":1},\"1\":{\"92\":1,\"93\":1}}],[\"commit\",{\"1\":{\"18\":2}}],[\"com\",{\"1\":{\"31\":1,\"36\":7,\"38\":1,\"62\":1,\"68\":3,\"105\":1,\"107\":1,\"111\":1,\"113\":2,\"117\":1,\"122\":2,\"124\":1}}],[\"cookie\",{\"0\":{\"22\":2}}],[\"code\",{\"1\":{\"21\":2}}],[\"conf\",{\"1\":{\"118\":2}}],[\"configuring\",{\"1\":{\"113\":1}}],[\"config\",{\"1\":{\"36\":6,\"114\":3}}],[\"connection\",{\"1\":{\"118\":1}}],[\"constexpr\",{\"0\":{\"64\":1},\"1\":{\"49\":1,\"59\":11,\"60\":13,\"64\":2,\"65\":4,\"67\":4}}],[\"const\",{\"1\":{\"21\":5,\"40\":1,\"41\":1,\"42\":1,\"59\":2,\"60\":12,\"67\":8,\"75\":1,\"84\":1,\"96\":1}}],[\"concluded\",{\"1\":{\"18\":1}}],[\"continue\",{\"1\":{\"40\":1,\"42\":1,\"75\":3}}],[\"control\",{\"1\":{\"16\":1}}],[\"controlset001\",{\"1\":{\"16\":1}}],[\"context\",{\"1\":{\"8\":1,\"9\":1}}],[\"cmd\",{\"1\":{\"16\":2,\"21\":1,\"26\":1,\"109\":1}}],[\"身份\",{\"1\":{\"16\":1,\"26\":1}}],[\"下未\",{\"1\":{\"124\":1}}],[\"下降\",{\"1\":{\"90\":1}}],[\"下\",{\"1\":{\"36\":1,\"60\":2,\"65\":1,\"75\":1,\"104\":1,\"122\":3,\"124\":1}}],[\"下面\",{\"1\":{\"27\":1,\"56\":1,\"122\":1}}],[\"下来\",{\"1\":{\"26\":1}}],[\"下去\",{\"1\":{\"16\":2}}],[\"下载安装\",{\"1\":{\"31\":1}}],[\"下载\",{\"0\":{\"24\":1,\"25\":1},\"1\":{\"15\":2,\"22\":1,\"24\":1,\"26\":1,\"27\":1,\"36\":1}}],[\"电脑\",{\"1\":{\"16\":2}}],[\"照着\",{\"1\":{\"16\":1,\"124\":1}}],[\"帮助\",{\"1\":{\"16\":1,\"65\":1,\"122\":1}}],[\"根据\",{\"1\":{\"16\":1,\"59\":1}}],[\"请\",{\"1\":{\"16\":1,\"36\":3,\"37\":1}}],[\"绕路\",{\"1\":{\"75\":1}}],[\"绕\",{\"1\":{\"16\":1}}],[\"发现\",{\"1\":{\"16\":1,\"22\":1,\"122\":2,\"124\":2}}],[\"时开\",{\"1\":{\"70\":1}}],[\"时会\",{\"1\":{\"59\":1,\"92\":1,\"106\":1}}],[\"时候\",{\"1\":{\"57\":1}}],[\"时间\",{\"1\":{\"40\":1,\"41\":2,\"44\":1,\"65\":1,\"71\":1,\"75\":1}}],[\"时\",{\"0\":{\"58\":1,\"67\":1,\"105\":1,\"106\":1},\"1\":{\"16\":1,\"18\":1,\"58\":1,\"59\":1,\"65\":1,\"75\":1,\"90\":1,\"93\":2,\"112\":1,\"114\":1,\"122\":1}}],[\"做好\",{\"1\":{\"37\":1}}],[\"做\",{\"1\":{\"16\":1,\"94\":1,\"112\":1,\"124\":1}}],[\"做出\",{\"1\":{\"15\":1}}],[\"笔者\",{\"1\":{\"16\":1,\"37\":1,\"122\":1}}],[\"笔记本\",{\"1\":{\"37\":1,\"124\":1}}],[\"笔记\",{\"0\":{\"2\":1,\"95\":1}}],[\"也许\",{\"1\":{\"96\":1}}],[\"也\",{\"1\":{\"16\":2,\"75\":2,\"88\":1,\"90\":1,\"92\":1,\"94\":3,\"95\":1,\"104\":1,\"105\":1,\"122\":2}}],[\"fbcdccf3e8178a9039329562c0de0fd01a3372fb\",{\"1\":{\"107\":1}}],[\"functypemapcell\",{\"1\":{\"110\":1}}],[\"function\",{\"1\":{\"21\":1}}],[\"func\",{\"1\":{\"110\":1}}],[\"further\",{\"1\":{\"105\":2}}],[\"f64\",{\"1\":{\"102\":7}}],[\"found\",{\"1\":{\"125\":1}}],[\"foo\",{\"1\":{\"101\":1,\"105\":2}}],[\"format\",{\"1\":{\"96\":1,\"101\":1}}],[\"for\",{\"1\":{\"40\":3,\"41\":2,\"42\":3,\"45\":4,\"49\":4,\"60\":2,\"67\":1,\"68\":1,\"75\":3,\"81\":5,\"84\":3,\"93\":1,\"96\":1,\"101\":1,\"105\":4,\"112\":1,\"118\":1}}],[\"fn\",{\"1\":{\"96\":20,\"101\":1,\"102\":2,\"105\":3,\"106\":1,\"110\":1}}],[\"first\",{\"1\":{\"105\":2}}],[\"filter\",{\"1\":{\"89\":1}}],[\"file\",{\"1\":{\"60\":4,\"101\":1,\"122\":1}}],[\"find\",{\"1\":{\"84\":4,\"96\":7}}],[\"fibonacci\",{\"1\":{\"65\":6}}],[\"fromnode\",{\"1\":{\"96\":8}}],[\"from\",{\"1\":{\"36\":1,\"96\":1,\"101\":1,\"102\":1,\"106\":1}}],[\"free\",{\"1\":{\"9\":1}}],[\"fa\",{\"1\":{\"84\":8}}],[\"facade\",{\"0\":{\"91\":1},\"1\":{\"90\":1,\"93\":1}}],[\"fac\",{\"1\":{\"64\":3}}],[\"false\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"45\":2,\"49\":1,\"75\":2,\"81\":1,\"84\":1,\"96\":5}}],[\"fatal\",{\"1\":{\"18\":1}}],[\"failed\",{\"0\":{\"18\":1},\"1\":{\"18\":1,\"101\":1,\"122\":1}}],[\"fw\",{\"1\":{\"16\":1}}],[\"为了\",{\"1\":{\"31\":1,\"93\":1,\"106\":1}}],[\"为\",{\"0\":{\"101\":1,\"102\":1},\"1\":{\"16\":4,\"20\":1,\"31\":1,\"36\":1,\"75\":1,\"96\":1,\"102\":1,\"103\":1,\"109\":1,\"114\":1,\"118\":2}}],[\"为准\",{\"1\":{\"15\":1}}],[\"编码\",{\"1\":{\"59\":2}}],[\"编程\",{\"0\":{\"65\":1},\"1\":{\"58\":1,\"65\":2}}],[\"编辑\",{\"1\":{\"16\":1}}],[\"编辑器\",{\"1\":{\"16\":1}}],[\"编号\",{\"1\":{\"16\":1}}],[\"编译器\",{\"1\":{\"60\":1,\"67\":1}}],[\"编译\",{\"0\":{\"2\":1,\"58\":1,\"67\":1},\"1\":{\"36\":1,\"58\":1,\"59\":3,\"64\":1,\"65\":2,\"67\":2,\"92\":1,\"93\":1}}],[\"会\",{\"1\":{\"16\":2,\"18\":1,\"22\":1,\"26\":1,\"31\":1,\"36\":3,\"93\":1,\"94\":3,\"122\":2,\"124\":1}}],[\"会员\",{\"1\":{\"15\":1}}],[\"就是\",{\"1\":{\"95\":1,\"96\":3}}],[\"就算\",{\"1\":{\"75\":1}}],[\"就行\",{\"1\":{\"23\":1}}],[\"就\",{\"1\":{\"16\":2,\"22\":1,\"25\":1,\"28\":1,\"36\":1,\"92\":1,\"96\":1,\"124\":2}}],[\"尝试\",{\"1\":{\"16\":1,\"23\":1,\"31\":1,\"118\":2,\"122\":2}}],[\"似乎\",{\"1\":{\"16\":1}}],[\"顺利\",{\"1\":{\"118\":1}}],[\"顺便\",{\"1\":{\"16\":1}}],[\"顺序\",{\"1\":{\"15\":1}}],[\"还有\",{\"1\":{\"124\":1}}],[\"还是\",{\"1\":{\"16\":2,\"56\":1}}],[\"还\",{\"1\":{\"16\":2,\"42\":1,\"124\":1}}],[\"完后\",{\"1\":{\"124\":1}}],[\"完全\",{\"1\":{\"104\":1}}],[\"完全相同\",{\"1\":{\"15\":1}}],[\"完备\",{\"1\":{\"65\":1}}],[\"完成\",{\"1\":{\"16\":4,\"27\":1,\"28\":1,\"36\":1}}],[\"完\",{\"1\":{\"16\":2,\"28\":1}}],[\"地址\",{\"1\":{\"118\":1}}],[\"地说\",{\"1\":{\"90\":1}}],[\"地\",{\"1\":{\"16\":2,\"109\":1}}],[\"当天\",{\"1\":{\"124\":1}}],[\"当然\",{\"1\":{\"104\":1,\"106\":1}}],[\"当前\",{\"1\":{\"81\":1,\"94\":1,\"96\":2,\"114\":1}}],[\"当\",{\"1\":{\"16\":1,\"57\":1}}],[\"错误处理\",{\"0\":{\"100\":1}}],[\"错误\",{\"0\":{\"16\":1},\"1\":{\"16\":1,\"31\":1,\"95\":1}}],[\"赘述\",{\"1\":{\"15\":1,\"33\":1}}],[\"看到\",{\"1\":{\"28\":1}}],[\"看\",{\"1\":{\"15\":1,\"16\":2}}],[\"之后\",{\"1\":{\"26\":1,\"28\":1,\"75\":1,\"88\":1,\"105\":1,\"122\":1,\"124\":1}}],[\"之前\",{\"1\":{\"26\":1,\"75\":1,\"96\":1,\"112\":1,\"124\":1}}],[\"之间\",{\"1\":{\"15\":1}}],[\"之一\",{\"1\":{\"10\":1,\"71\":1}}],[\"遗憾\",{\"1\":{\"15\":1}}],[\"很多\",{\"1\":{\"118\":1}}],[\"很\",{\"1\":{\"15\":1,\"75\":2,\"104\":2}}],[\"了\",{\"1\":{\"15\":2,\"16\":2,\"21\":1,\"23\":1,\"26\":1,\"27\":1,\"36\":1,\"41\":2,\"60\":1,\"67\":2,\"71\":1,\"75\":3,\"88\":1,\"89\":1,\"90\":2,\"93\":2,\"95\":1,\"114\":1,\"118\":1,\"122\":2,\"124\":5}}],[\"肯定\",{\"1\":{\"15\":1}}],[\"那样\",{\"1\":{\"104\":1}}],[\"那\",{\"0\":{\"65\":1}}],[\"那请\",{\"1\":{\"16\":1}}],[\"那么\",{\"1\":{\"15\":1,\"96\":1}}],[\"那些\",{\"1\":{\"15\":1}}],[\"那棵\",{\"1\":{\"13\":1}}],[\"开放\",{\"1\":{\"123\":1}}],[\"开启\",{\"1\":{\"122\":1,\"124\":1}}],[\"开销\",{\"1\":{\"93\":1,\"94\":1}}],[\"开源\",{\"1\":{\"92\":1}}],[\"开始\",{\"1\":{\"75\":1,\"124\":2}}],[\"开始符号\",{\"1\":{\"4\":1}}],[\"开发者\",{\"1\":{\"93\":1}}],[\"开发\",{\"1\":{\"65\":1,\"89\":1,\"90\":1,\"93\":2,\"95\":1}}],[\"开机\",{\"1\":{\"16\":1}}],[\"开头\",{\"1\":{\"15\":1}}],[\"教程\",{\"0\":{\"30\":1},\"1\":{\"15\":2}}],[\"以上\",{\"1\":{\"60\":1,\"109\":1}}],[\"以及\",{\"1\":{\"28\":1,\"109\":1}}],[\"以\",{\"1\":{\"15\":1,\"16\":1,\"26\":1,\"71\":1}}],[\"以下内容\",{\"1\":{\"27\":1}}],[\"以下\",{\"1\":{\"10\":1,\"28\":1,\"31\":1,\"57\":1,\"71\":1,\"94\":1,\"104\":1}}],[\"我们\",{\"1\":{\"35\":1,\"59\":1,\"60\":1,\"61\":1,\"96\":2,\"122\":1}}],[\"我\",{\"1\":{\"15\":1,\"16\":2,\"24\":1,\"25\":1,\"27\":3,\"31\":1,\"33\":1,\"59\":1,\"116\":1,\"124\":3}}],[\"不了\",{\"1\":{\"124\":1}}],[\"不会\",{\"1\":{\"124\":1}}],[\"不上\",{\"1\":{\"122\":1}}],[\"不想\",{\"1\":{\"109\":1}}],[\"不受\",{\"1\":{\"104\":1}}],[\"不应\",{\"1\":{\"94\":1}}],[\"不需\",{\"1\":{\"94\":1}}],[\"不必要\",{\"1\":{\"93\":1}}],[\"不够\",{\"1\":{\"92\":1}}],[\"不大\",{\"1\":{\"75\":1}}],[\"不可避免\",{\"1\":{\"106\":1}}],[\"不可\",{\"1\":{\"75\":1}}],[\"不同\",{\"1\":{\"61\":1}}],[\"不是\",{\"1\":{\"40\":1,\"57\":1,\"75\":1,\"96\":1,\"104\":1}}],[\"不要\",{\"1\":{\"36\":1}}],[\"不然\",{\"1\":{\"26\":1}}],[\"不多作\",{\"1\":{\"124\":1}}],[\"不多\",{\"1\":{\"25\":1}}],[\"不到\",{\"0\":{\"22\":1},\"1\":{\"70\":1,\"122\":1}}],[\"不出意外\",{\"1\":{\"16\":1}}],[\"不能\",{\"1\":{\"16\":1,\"60\":1,\"67\":1,\"96\":1,\"102\":1}}],[\"不为\",{\"1\":{\"16\":1}}],[\"不开\",{\"1\":{\"16\":1}}],[\"不再\",{\"1\":{\"15\":1,\"33\":1,\"96\":1}}],[\"不行\",{\"1\":{\"15\":1}}],[\"不\",{\"1\":{\"15\":1,\"23\":1,\"31\":2,\"44\":4,\"58\":1,\"59\":1,\"60\":2,\"71\":1,\"75\":3,\"87\":1,\"94\":2,\"95\":2,\"104\":1,\"122\":2,\"124\":1}}],[\"不难\",{\"1\":{\"15\":1}}],[\"版本\",{\"0\":{\"59\":1,\"109\":1},\"1\":{\"15\":2,\"21\":1,\"31\":3,\"59\":1,\"109\":8}}],[\"等等\",{\"1\":{\"94\":1,\"95\":1,\"118\":1}}],[\"等候\",{\"1\":{\"36\":1}}],[\"等待\",{\"1\":{\"28\":1,\"122\":1}}],[\"等\",{\"1\":{\"15\":1,\"67\":1,\"89\":1,\"90\":1,\"93\":1,\"95\":1,\"99\":1,\"104\":1}}],[\"等价\",{\"0\":{\"7\":1},\"1\":{\"7\":2}}],[\"要\",{\"1\":{\"15\":1,\"20\":2,\"42\":1,\"70\":1,\"114\":1}}],[\"要求\",{\"1\":{\"9\":1}}],[\"估计\",{\"1\":{\"15\":1,\"124\":1}}],[\"没电\",{\"1\":{\"124\":1}}],[\"没想到\",{\"1\":{\"124\":1}}],[\"没有\",{\"1\":{\"37\":1,\"94\":1,\"96\":7,\"118\":1,\"122\":2}}],[\"没\",{\"1\":{\"15\":1,\"96\":2}}],[\"盘\",{\"1\":{\"15\":1,\"114\":2}}],[\"百度网\",{\"1\":{\"15\":1}}],[\"到达\",{\"1\":{\"70\":1}}],[\"到\",{\"1\":{\"15\":1,\"16\":1,\"27\":1,\"35\":2,\"36\":1,\"57\":1,\"75\":2,\"81\":1,\"109\":1,\"110\":1,\"112\":1,\"114\":2,\"124\":1}}],[\"都行\",{\"1\":{\"27\":1,\"113\":1}}],[\"都\",{\"1\":{\"15\":2,\"16\":1,\"61\":1,\"94\":1,\"96\":3,\"112\":1,\"118\":1,\"122\":1,\"124\":1}}],[\"文章\",{\"1\":{\"33\":1,\"59\":1,\"116\":1}}],[\"文档\",{\"0\":{\"31\":1},\"1\":{\"31\":1}}],[\"文件夹\",{\"1\":{\"22\":1,\"115\":1,\"122\":1}}],[\"文件\",{\"0\":{\"22\":2},\"1\":{\"21\":1,\"27\":3,\"36\":1,\"109\":2,\"114\":1,\"122\":1,\"124\":1}}],[\"文件名\",{\"1\":{\"15\":1}}],[\"文法\",{\"0\":{\"3\":1,\"7\":1},\"1\":{\"4\":2,\"6\":1,\"7\":4,\"8\":1,\"9\":1,\"10\":3}}],[\"复杂度\",{\"1\":{\"40\":1,\"41\":2,\"44\":2}}],[\"复制\",{\"1\":{\"15\":1,\"36\":1}}],[\"复习\",{\"0\":{\"2\":1}}],[\"好久\",{\"1\":{\"122\":1}}],[\"好\",{\"1\":{\"15\":1,\"27\":2,\"90\":1}}],[\"必须\",{\"1\":{\"15\":3,\"16\":2,\"70\":1,\"92\":1,\"96\":1}}],[\"你\",{\"1\":{\"15\":4,\"16\":5,\"22\":1,\"27\":1,\"36\":1,\"114\":1,\"118\":1,\"122\":1,\"123\":1}}],[\"首先\",{\"1\":{\"15\":1,\"16\":2,\"20\":1}}],[\"42\",{\"1\":{\"80\":1}}],[\"468\",{\"1\":{\"75\":1}}],[\"465\",{\"1\":{\"36\":1}}],[\"47679150\",{\"1\":{\"38\":1}}],[\"404\",{\"1\":{\"125\":1}}],[\"4096\",{\"1\":{\"27\":1}}],[\"40\",{\"0\":{\"16\":1},\"1\":{\"16\":1}}],[\"4\",{\"1\":{\"15\":1,\"27\":1,\"57\":2,\"59\":1,\"60\":2,\"64\":1,\"67\":1,\"73\":3,\"75\":2,\"77\":7,\"79\":1}}],[\"_\",{\"1\":{\"15\":3,\"16\":2,\"18\":1,\"21\":5,\"22\":1,\"36\":1,\"38\":1,\"40\":2,\"41\":6,\"42\":2,\"45\":2,\"49\":2,\"59\":12,\"60\":84,\"66\":2,\"67\":23,\"68\":7,\"75\":2,\"81\":2,\"84\":2,\"96\":91,\"101\":9,\"102\":11,\"103\":1,\"105\":7,\"106\":4,\"107\":1,\"109\":2,\"110\":1,\"118\":3,\"122\":7}}],[\"v2\",{\"1\":{\"118\":1}}],[\"variable\",{\"1\":{\"107\":1}}],[\"valuedata\",{\"1\":{\"110\":1}}],[\"values\",{\"1\":{\"110\":1}}],[\"value\",{\"1\":{\"59\":8,\"65\":6,\"105\":2,\"110\":1}}],[\"v\",{\"1\":{\"96\":3,\"106\":3,\"114\":1,\"124\":1}}],[\"volatile\",{\"1\":{\"60\":1,\"67\":1}}],[\"void\",{\"1\":{\"49\":1,\"75\":1}}],[\"vim\",{\"1\":{\"36\":1}}],[\"virtualbox\",{\"1\":{\"15\":4}}],[\"vec\",{\"1\":{\"96\":2}}],[\"vector\",{\"1\":{\"40\":2,\"41\":3,\"42\":3,\"45\":1}}],[\"vendors\",{\"1\":{\"36\":5}}],[\"version\",{\"1\":{\"27\":1,\"114\":2}}],[\"v3\",{\"1\":{\"32\":1}}],[\"vm\",{\"1\":{\"27\":1}}],[\"vmx\",{\"1\":{\"27\":1}}],[\"vmware\",{\"0\":{\"23\":1,\"25\":1},\"1\":{\"25\":1,\"26\":2,\"27\":1,\"112\":1}}],[\"vscode\",{\"0\":{\"22\":1}}],[\"vulnerability\",{\"1\":{\"21\":1}}],[\"vt\",{\"1\":{\"6\":1}}],[\"esm\",{\"1\":{\"122\":1}}],[\"etc\",{\"1\":{\"118\":3}}],[\"efficient\",{\"1\":{\"105\":1}}],[\"err\",{\"1\":{\"102\":3}}],[\"error\",{\"0\":{\"21\":1}}],[\"eq\",{\"1\":{\"96\":1,\"102\":2,\"103\":2}}],[\"ey\",{\"1\":{\"75\":6}}],[\"edu\",{\"1\":{\"69\":1,\"76\":1,\"82\":1}}],[\"eax\",{\"1\":{\"64\":1}}],[\"else\",{\"1\":{\"49\":1,\"56\":1,\"75\":2,\"96\":17,\"102\":1}}],[\"e\",{\"1\":{\"45\":2,\"103\":2,\"114\":3,\"115\":1}}],[\"e8\",{\"1\":{\"31\":1,\"38\":1,\"40\":1,\"41\":1,\"42\":1}}],[\"e5\",{\"1\":{\"31\":1,\"38\":1,\"49\":1}}],[\"entry\",{\"1\":{\"105\":4}}],[\"encrypt\",{\"1\":{\"60\":3,\"67\":3}}],[\"endian\",{\"1\":{\"56\":2}}],[\"enable\",{\"1\":{\"36\":1}}],[\"environment\",{\"1\":{\"118\":3}}],[\"env\",{\"1\":{\"21\":1}}],[\"en\",{\"1\":{\"21\":1}}],[\"ensp\",{\"0\":{\"14\":1},\"1\":{\"15\":2,\"16\":1}}],[\"einval\",{\"0\":{\"21\":1}}],[\"exceeded\",{\"1\":{\"118\":1}}],[\"export\",{\"1\":{\"114\":1}}],[\"exports\",{\"1\":{\"31\":1}}],[\"ex\",{\"1\":{\"75\":6}}],[\"example\",{\"1\":{\"36\":1}}],[\"existent\",{\"1\":{\"31\":1}}],[\"exists\",{\"1\":{\"18\":1}}],[\"exit\",{\"1\":{\"21\":2,\"35\":1}}],[\"exe\",{\"1\":{\"15\":3,\"114\":3}}],[\".\",{\"1\":{\"15\":2,\"16\":3,\"18\":1,\"21\":13,\"22\":1,\"26\":1,\"27\":2,\"31\":8,\"32\":1,\"35\":2,\"36\":17,\"38\":11,\"40\":2,\"41\":3,\"42\":2,\"45\":3,\"49\":3,\"56\":3,\"57\":1,\"59\":2,\"60\":28,\"62\":3,\"67\":25,\"68\":7,\"69\":4,\"71\":1,\"73\":19,\"75\":4,\"76\":4,\"81\":15,\"82\":4,\"84\":3,\"87\":2,\"93\":3,\"94\":7,\"96\":92,\"101\":5,\"102\":2,\"103\":1,\"105\":20,\"106\":3,\"107\":5,\"109\":1,\"111\":2,\"113\":4,\"114\":2,\"117\":2,\"118\":7,\"122\":4,\"123\":1,\"124\":1}}],[\"无需\",{\"1\":{\"93\":2}}],[\"无\",{\"1\":{\"90\":1,\"93\":1,\"95\":1}}],[\"无论如何\",{\"1\":{\"16\":1}}],[\"无法访问\",{\"1\":{\"31\":1}}],[\"无法\",{\"0\":{\"14\":1},\"1\":{\"16\":1,\"31\":2,\"59\":1,\"71\":1}}],[\"无关\",{\"1\":{\"9\":1}}],[\"在于\",{\"1\":{\"88\":1,\"95\":2}}],[\"在\",{\"0\":{\"14\":1,\"23\":1,\"118\":1,\"119\":1},\"1\":{\"15\":1,\"16\":2,\"21\":2,\"23\":1,\"27\":1,\"31\":1,\"36\":3,\"37\":2,\"59\":3,\"60\":3,\"64\":1,\"65\":3,\"67\":2,\"70\":2,\"75\":1,\"81\":1,\"88\":1,\"90\":2,\"92\":2,\"93\":2,\"94\":1,\"96\":10,\"104\":2,\"105\":1,\"109\":4,\"110\":3,\"112\":2,\"114\":1,\"118\":3,\"122\":2,\"123\":2,\"124\":2}}],[\"、\",{\"1\":{\"13\":2,\"16\":1,\"42\":1,\"67\":1,\"71\":1,\"92\":1,\"93\":2,\"94\":3,\"95\":4,\"99\":1,\"104\":1,\"110\":1,\"118\":4,\"122\":1}}],[\"至多\",{\"1\":{\"70\":1,\"75\":1}}],[\"至少\",{\"1\":{\"57\":1}}],[\"至此\",{\"1\":{\"27\":1}}],[\"至于\",{\"1\":{\"15\":1}}],[\"至\",{\"1\":{\"13\":1}}],[\"自启动\",{\"0\":{\"124\":1},\"1\":{\"124\":4}}],[\"自身\",{\"1\":{\"96\":1}}],[\"自动\",{\"1\":{\"93\":1,\"96\":1,\"113\":1,\"124\":1}}],[\"自定义\",{\"0\":{\"66\":1},\"1\":{\"27\":1,\"60\":1,\"67\":1}}],[\"自行\",{\"1\":{\"15\":1}}],[\"自\",{\"0\":{\"96\":1},\"1\":{\"13\":1,\"95\":1}}],[\"自左至\",{\"1\":{\"11\":1,\"12\":1}}],[\"最后\",{\"1\":{\"124\":1}}],[\"最终\",{\"0\":{\"123\":1},\"1\":{\"118\":1}}],[\"最近\",{\"1\":{\"112\":1}}],[\"最高\",{\"1\":{\"96\":1}}],[\"最少\",{\"1\":{\"83\":1}}],[\"最大\",{\"1\":{\"57\":4}}],[\"最坏\",{\"1\":{\"44\":1}}],[\"最好\",{\"1\":{\"44\":1}}],[\"最下\",{\"1\":{\"13\":1}}],[\"最\",{\"1\":{\"13\":2,\"27\":1,\"96\":2}}],[\"中序遍\",{\"1\":{\"96\":1}}],[\"中原\",{\"0\":{\"58\":1}}],[\"中\",{\"0\":{\"14\":1,\"21\":1,\"23\":1,\"55\":1,\"85\":1,\"108\":1,\"118\":1,\"119\":1},\"1\":{\"13\":1,\"16\":1,\"21\":2,\"30\":1,\"31\":1,\"37\":2,\"56\":1,\"58\":1,\"59\":3,\"67\":1,\"81\":1,\"93\":1,\"94\":2,\"95\":1,\"96\":3,\"104\":1,\"109\":2,\"118\":2,\"123\":1}}],[\"所在\",{\"1\":{\"109\":1}}],[\"所以\",{\"1\":{\"96\":3}}],[\"所\",{\"1\":{\"12\":1}}],[\"所有权\",{\"1\":{\"96\":1}}],[\"所有\",{\"1\":{\"6\":1,\"11\":1,\"12\":1,\"13\":1,\"70\":1,\"75\":1,\"96\":1,\"114\":1}}],[\"两项\",{\"1\":{\"81\":1}}],[\"两个\",{\"1\":{\"16\":1,\"31\":1,\"75\":1}}],[\"两代\",{\"1\":{\"12\":1,\"13\":1}}],[\"两种\",{\"1\":{\"10\":1}}],[\"有父\",{\"1\":{\"96\":1}}],[\"有用\",{\"1\":{\"96\":1}}],[\"有时候\",{\"1\":{\"18\":1}}],[\"有\",{\"1\":{\"12\":1,\"18\":1,\"36\":1,\"39\":1,\"75\":1,\"96\":1,\"104\":1,\"106\":1,\"122\":1,\"124\":1}}],[\"有关\",{\"0\":{\"17\":1},\"1\":{\"8\":1}}],[\"仅\",{\"1\":{\"12\":1,\"58\":1,\"70\":1,\"110\":1}}],[\"直接\",{\"0\":{\"12\":1},\"1\":{\"13\":2,\"18\":1,\"21\":1,\"23\":1,\"26\":1,\"31\":1,\"36\":1,\"37\":1,\"75\":3,\"84\":1,\"105\":1,\"109\":1,\"122\":1,\"123\":1}}],[\"形成\",{\"1\":{\"11\":1,\"12\":1}}],[\"形式语言\",{\"0\":{\"3\":1}}],[\"形式\",{\"0\":{\"3\":1},\"1\":{\"10\":1,\"96\":2}}],[\"叶子\",{\"1\":{\"11\":1,\"12\":1,\"13\":1}}],[\"左子\",{\"1\":{\"96\":6}}],[\"左右\",{\"1\":{\"96\":1,\"124\":1}}],[\"左\",{\"1\":{\"10\":1,\"13\":3}}],[\"左边\",{\"1\":{\"9\":1,\"96\":1,\"114\":1}}],[\"右子\",{\"1\":{\"96\":6}}],[\"右键\",{\"1\":{\"26\":1,\"27\":2}}],[\"右\",{\"1\":{\"10\":1,\"11\":1,\"12\":1,\"13\":1}}],[\"/\",{\"1\":{\"10\":4,\"16\":1,\"21\":7,\"27\":1,\"31\":10,\"36\":33,\"38\":30,\"45\":1,\"49\":3,\"57\":12,\"59\":10,\"60\":18,\"62\":12,\"67\":6,\"68\":18,\"69\":3,\"75\":1,\"76\":3,\"81\":1,\"82\":3,\"84\":1,\"94\":20,\"96\":54,\"102\":1,\"105\":13,\"107\":17,\"110\":6,\"111\":9,\"113\":12,\"115\":5,\"117\":4,\"118\":21,\"122\":12,\"123\":4,\"124\":6}}],[\"对象\",{\"1\":{\"90\":3}}],[\"对齐\",{\"1\":{\"57\":3}}],[\"对\",{\"1\":{\"41\":1,\"61\":1,\"75\":1}}],[\"对于\",{\"1\":{\"10\":1,\"72\":1,\"77\":2,\"109\":1}}],[\"对应\",{\"1\":{\"7\":1,\"21\":1,\"109\":1}}],[\"378525362\",{\"1\":{\"68\":1}}],[\"31\",{\"1\":{\"59\":1}}],[\"36000\",{\"1\":{\"59\":1}}],[\"3600\",{\"1\":{\"59\":1}}],[\"3383\",{\"1\":{\"39\":1}}],[\"3000\",{\"1\":{\"36\":2}}],[\"3.\",{\"1\":{\"15\":1}}],[\"3\",{\"0\":{\"10\":1,\"42\":1},\"1\":{\"42\":1,\"59\":1,\"73\":1,\"77\":1,\"124\":1}}],[\"bbs\",{\"1\":{\"110\":1}}],[\"blob\",{\"1\":{\"107\":1,\"111\":1}}],[\"blog\",{\"1\":{\"21\":1,\"38\":1,\"62\":2}}],[\"boot\",{\"1\":{\"124\":1}}],[\"bool\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"75\":1,\"96\":4}}],[\"box\",{\"1\":{\"96\":6,\"99\":1}}],[\"bone\",{\"0\":{\"69\":1}}],[\"buffer\",{\"1\":{\"60\":6,\"67\":6}}],[\"bios\",{\"1\":{\"124\":1}}],[\"big\",{\"1\":{\"56\":1}}],[\"bits\",{\"1\":{\"45\":1,\"49\":1,\"75\":1,\"81\":1,\"84\":1}}],[\"bitset\",{\"0\":{\"42\":1},\"1\":{\"42\":4}}],[\"bin\",{\"1\":{\"36\":1}}],[\"break\",{\"1\":{\"41\":2,\"45\":1,\"96\":1}}],[\"bcdedit\",{\"1\":{\"16\":2}}],[\"bs\",{\"1\":{\"9\":1}}],[\"b\",{\"1\":{\"9\":2,\"49\":5,\"57\":4,\"113\":1}}],[\"basicblockdata\",{\"1\":{\"110\":1}}],[\"basicblock\",{\"1\":{\"110\":1}}],[\"bashonubuntuonwindows\",{\"1\":{\"122\":1}}],[\"bash\",{\"0\":{\"20\":1},\"1\":{\"123\":1}}],[\"baz\",{\"1\":{\"105\":2}}],[\"bar\",{\"1\":{\"105\":2}}],[\"back\",{\"1\":{\"41\":1}}],[\"baa\",{\"1\":{\"9\":1}}],[\"ba\",{\"1\":{\"9\":1,\"10\":1}}],[\"awaitin\",{\"1\":{\"118\":1}}],[\"a2d16029dc2\",{\"1\":{\"117\":1}}],[\"allen\",{\"1\":{\"106\":1}}],[\"alternative\",{\"1\":{\"105\":1}}],[\"algos\",{\"1\":{\"107\":1}}],[\"algo\",{\"0\":{\"127\":1},\"1\":{\"96\":1}}],[\"always\",{\"1\":{\"60\":6,\"67\":2,\"124\":1}}],[\"access\",{\"1\":{\"105\":4,\"122\":1}}],[\"accessing\",{\"1\":{\"31\":1}}],[\"ac\",{\"1\":{\"75\":1}}],[\"acm\",{\"1\":{\"69\":1,\"76\":1,\"82\":1}}],[\"analyzer\",{\"1\":{\"109\":1}}],[\"any\",{\"1\":{\"105\":2}}],[\"and\",{\"0\":{\"76\":1},\"1\":{\"105\":1,\"124\":1}}],[\"andrivet\",{\"1\":{\"68\":1}}],[\"answer\",{\"1\":{\"68\":1}}],[\"advance\",{\"1\":{\"107\":1}}],[\"advobfuscator\",{\"1\":{\"68\":1}}],[\"adminaccount\",{\"1\":{\"36\":1}}],[\"admin123\",{\"1\":{\"35\":1}}],[\"admin\",{\"1\":{\"35\":3,\"36\":2}}],[\"ai\",{\"1\":{\"60\":1}}],[\"attribute\",{\"1\":{\"60\":6,\"67\":2}}],[\"automatically\",{\"1\":{\"113\":1}}],[\"auto\",{\"1\":{\"45\":2,\"60\":3,\"64\":1,\"65\":1,\"66\":1,\"67\":2}}],[\"auth\",{\"1\":{\"36\":1}}],[\"authsource\",{\"1\":{\"36\":1}}],[\"apache\",{\"1\":{\"92\":1}}],[\"api\",{\"1\":{\"90\":1,\"95\":1}}],[\"apps\",{\"1\":{\"113\":1}}],[\"app\",{\"1\":{\"36\":1}}],[\"apt\",{\"1\":{\"34\":2,\"35\":1,\"121\":1}}],[\"april\",{\"1\":{\"21\":1}}],[\"a3\",{\"1\":{\"31\":1,\"38\":1}}],[\"ae\",{\"1\":{\"31\":1,\"38\":1}}],[\"amd\",{\"1\":{\"23\":1}}],[\"armoury\",{\"1\":{\"124\":3}}],[\"arr\",{\"1\":{\"45\":7}}],[\"article\",{\"1\":{\"38\":1}}],[\"arp\",{\"1\":{\"16\":1}}],[\"ar\",{\"0\":{\"16\":1},\"1\":{\"16\":4}}],[\"assert\",{\"1\":{\"96\":2,\"102\":2,\"103\":1}}],[\"as\",{\"1\":{\"9\":1}}],[\"a\",{\"1\":{\"9\":2,\"10\":6,\"49\":13,\"59\":3}}],[\"abs\",{\"1\":{\"75\":5,\"101\":3}}],[\"abb\",{\"1\":{\"9\":1}}],[\"ab\",{\"1\":{\"9\":1,\"10\":1}}],[\"|\",{\"1\":{\"9\":5,\"49\":2,\"75\":6,\"96\":4,\"105\":2}}],[\"-\",{\"0\":{\"69\":1,\"76\":1,\"82\":1,\"92\":1,\"119\":1,\"120\":1,\"124\":1},\"1\":{\"9\":3,\"10\":4,\"15\":3,\"16\":2,\"18\":3,\"21\":8,\"26\":1,\"31\":1,\"34\":2,\"36\":7,\"38\":5,\"40\":2,\"41\":3,\"42\":2,\"45\":3,\"49\":1,\"56\":2,\"59\":6,\"60\":2,\"62\":1,\"64\":2,\"65\":2,\"67\":2,\"75\":11,\"84\":2,\"90\":2,\"92\":1,\"93\":1,\"94\":2,\"96\":17,\"101\":1,\"102\":1,\"105\":9,\"107\":4,\"109\":16,\"111\":1,\"113\":4,\"114\":29,\"115\":3,\"116\":1,\"118\":4,\"120\":3,\"121\":2,\"122\":7,\"123\":3,\"124\":18}}],[\"例如\",{\"1\":{\"9\":1,\"77\":1,\"93\":1,\"109\":2}}],[\"描述\",{\"1\":{\"9\":1}}],[\"使用\",{\"0\":{\"14\":1,\"26\":1,\"60\":1,\"96\":1,\"109\":1,\"118\":1,\"119\":1},\"1\":{\"9\":1,\"16\":1,\"20\":1,\"27\":5,\"31\":3,\"35\":1,\"58\":1,\"59\":1,\"60\":2,\"67\":5,\"88\":1,\"95\":1,\"96\":5,\"99\":1,\"101\":1,\"102\":1,\"104\":1,\"105\":3,\"109\":4,\"118\":1,\"123\":1,\"124\":2}}],[\"语法结构\",{\"1\":{\"9\":1}}],[\"语言\",{\"0\":{\"6\":1,\"55\":1},\"1\":{\"6\":1,\"7\":2,\"9\":1,\"95\":1}}],[\"个字符\",{\"1\":{\"71\":1}}],[\"个人\",{\"1\":{\"37\":1}}],[\"个\",{\"1\":{\"9\":1,\"27\":2,\"36\":1,\"39\":1,\"81\":2,\"83\":1,\"124\":1}}],[\"式\",{\"1\":{\"9\":1,\"10\":1}}],[\"2.0\",{\"1\":{\"102\":1}}],[\"259005783\",{\"1\":{\"68\":1}}],[\"28\",{\"1\":{\"62\":1}}],[\"225\",{\"1\":{\"59\":1}}],[\"2147483647\",{\"1\":{\"59\":1}}],[\"21.\",{\"1\":{\"21\":1}}],[\"27017\",{\"1\":{\"36\":1}}],[\"2022\",{\"1\":{\"62\":1}}],[\"2024\",{\"1\":{\"21\":1,\"109\":1}}],[\"20\",{\"1\":{\"38\":1,\"59\":2,\"65\":1,\"79\":1}}],[\"2019\",{\"1\":{\"38\":1}}],[\"20.04.\",{\"1\":{\"114\":2}}],[\"20.04\",{\"0\":{\"33\":1},\"1\":{\"31\":1,\"32\":1,\"114\":4}}],[\"20.\",{\"1\":{\"21\":1}}],[\"2\",{\"0\":{\"9\":1,\"41\":1},\"1\":{\"9\":1,\"10\":1,\"18\":1,\"21\":1,\"40\":3,\"41\":2,\"42\":3,\"44\":9,\"57\":1,\"59\":1,\"65\":1,\"75\":3,\"77\":3,\"81\":1,\"96\":2,\"105\":2,\"114\":3,\"117\":1}}],[\"型文法\",{\"0\":{\"8\":1,\"9\":1,\"10\":1},\"1\":{\"9\":1}}],[\"16807\",{\"1\":{\"59\":3}}],[\"16\",{\"1\":{\"57\":1,\"59\":4}}],[\"163.\",{\"1\":{\"36\":3}}],[\"1.\",{\"1\":{\"118\":1}}],[\"1.76.0\",{\"1\":{\"109\":2}}],[\"1.72.0\",{\"1\":{\"109\":1}}],[\"1.70\",{\"1\":{\"105\":1}}],[\"1.5.0\",{\"1\":{\"105\":1}}],[\"1.2\",{\"1\":{\"66\":1}}],[\"1.44\",{\"1\":{\"40\":1}}],[\"1.3.00.100\",{\"1\":{\"15\":1}}],[\"1213\",{\"0\":{\"82\":1},\"1\":{\"82\":1}}],[\"125\",{\"1\":{\"81\":2}}],[\"120\",{\"1\":{\"64\":1,\"78\":1,\"81\":5}}],[\"120000\",{\"1\":{\"36\":1}}],[\"123\",{\"1\":{\"60\":2,\"67\":2}}],[\"127.0.0.1\",{\"1\":{\"36\":2,\"118\":4}}],[\"10.0\",{\"1\":{\"102\":2}}],[\"10.19.0\",{\"1\":{\"32\":1}}],[\"1005\",{\"1\":{\"84\":1}}],[\"10000\",{\"1\":{\"40\":1,\"42\":1}}],[\"1028\",{\"0\":{\"76\":1},\"1\":{\"76\":1}}],[\"109\",{\"1\":{\"75\":1}}],[\"1010\",{\"0\":{\"69\":1},\"1\":{\"69\":1}}],[\"1072878269\",{\"1\":{\"68\":1}}],[\"107918607\",{\"1\":{\"38\":1}}],[\"10\",{\"1\":{\"36\":1,\"59\":1,\"79\":1}}],[\"140\",{\"1\":{\"36\":1}}],[\"1746987\",{\"1\":{\"124\":2}}],[\"1746617\",{\"1\":{\"124\":1}}],[\"17\",{\"1\":{\"25\":1}}],[\"18.\",{\"1\":{\"21\":1}}],[\"139111\",{\"1\":{\"15\":1}}],[\"114514\",{\"1\":{\"59\":1}}],[\"11836\",{\"1\":{\"31\":1}}],[\"11\",{\"0\":{\"14\":1},\"1\":{\"16\":1,\"109\":1}}],[\"1\",{\"0\":{\"8\":1,\"40\":1},\"1\":{\"9\":1,\"10\":1,\"15\":1,\"16\":2,\"27\":1,\"36\":1,\"40\":7,\"41\":2,\"42\":4,\"44\":5,\"45\":3,\"49\":13,\"56\":2,\"57\":3,\"59\":4,\"60\":3,\"64\":3,\"65\":3,\"67\":2,\"70\":1,\"71\":1,\"75\":12,\"77\":7,\"78\":1,\"81\":5,\"84\":3,\"96\":2,\"105\":6}}],[\"这一硬\",{\"1\":{\"59\":1}}],[\"这个\",{\"1\":{\"24\":1,\"25\":1,\"75\":1,\"96\":1,\"122\":1}}],[\"这是\",{\"1\":{\"21\":1,\"95\":1,\"106\":1}}],[\"这条\",{\"1\":{\"16\":1}}],[\"这样\",{\"1\":{\"16\":1,\"18\":1,\"75\":1,\"92\":1,\"104\":1}}],[\"这里\",{\"1\":{\"15\":1,\"16\":2,\"27\":2,\"30\":1,\"40\":1,\"60\":1,\"64\":1,\"67\":2,\"96\":1,\"114\":1,\"122\":1,\"123\":1}}],[\"这些\",{\"1\":{\"15\":2,\"31\":1,\"60\":1,\"94\":1}}],[\"这\",{\"1\":{\"7\":1,\"60\":1,\"124\":1}}],[\"它会\",{\"1\":{\"96\":1}}],[\"它\",{\"1\":{\"7\":1,\"12\":1,\"35\":1,\"70\":1,\"92\":1,\"96\":3}}],[\"产生\",{\"1\":{\"7\":1,\"9\":1,\"10\":1,\"37\":1,\"90\":1}}],[\"由于\",{\"1\":{\"21\":1,\"42\":1,\"59\":1}}],[\"由\",{\"1\":{\"7\":1,\"31\":1,\"71\":1,\"78\":1,\"89\":1,\"90\":1,\"93\":1}}],[\"可行\",{\"1\":{\"59\":1,\"75\":1}}],[\"可\",{\"1\":{\"36\":1,\"71\":1,\"110\":1}}],[\"可视化\",{\"1\":{\"31\":1}}],[\"可视\",{\"1\":{\"27\":1}}],[\"可能\",{\"1\":{\"7\":1,\"16\":2}}],[\"可以\",{\"1\":{\"4\":1,\"33\":1,\"35\":1,\"36\":3,\"42\":1,\"56\":1,\"58\":1,\"61\":2,\"65\":2,\"67\":1,\"70\":1,\"75\":1,\"93\":1,\"96\":2,\"105\":1,\"109\":2,\"116\":1,\"122\":2}}],[\"但是\",{\"1\":{\"15\":1,\"60\":1,\"67\":1,\"96\":1,\"122\":3}}],[\"但\",{\"1\":{\"7\":1,\"16\":2,\"59\":2,\"61\":1,\"75\":1,\"87\":1,\"92\":1,\"95\":1,\"109\":1}}],[\"一张\",{\"1\":{\"124\":1}}],[\"一上午\",{\"1\":{\"124\":1}}],[\"一般\",{\"1\":{\"124\":1}}],[\"一番\",{\"1\":{\"122\":1}}],[\"一直\",{\"1\":{\"112\":1,\"124\":1}}],[\"一项\",{\"1\":{\"96\":1}}],[\"一起\",{\"1\":{\"92\":1}}],[\"一些\",{\"0\":{\"108\":1},\"1\":{\"90\":1,\"95\":1}}],[\"一桌\",{\"1\":{\"83\":1}}],[\"一致\",{\"1\":{\"75\":1}}],[\"一发\",{\"1\":{\"75\":1}}],[\"一层\",{\"1\":{\"75\":1}}],[\"一道\",{\"1\":{\"75\":1}}],[\"一堵\",{\"1\":{\"71\":1}}],[\"一次\",{\"1\":{\"70\":1,\"75\":1,\"124\":1}}],[\"一格\",{\"1\":{\"70\":1}}],[\"一瞬间\",{\"1\":{\"70\":1}}],[\"一篇\",{\"1\":{\"33\":1,\"59\":1,\"116\":1}}],[\"一连串\",{\"1\":{\"31\":1}}],[\"一\",{\"1\":{\"31\":1,\"60\":1,\"75\":1,\"109\":1,\"124\":1}}],[\"一下\",{\"1\":{\"30\":1,\"96\":1}}],[\"一行\",{\"1\":{\"27\":1}}],[\"一样\",{\"1\":{\"16\":1}}],[\"一步步\",{\"1\":{\"16\":1}}],[\"一切正常\",{\"1\":{\"16\":1}}],[\"一会儿\",{\"1\":{\"15\":1}}],[\"一棵\",{\"1\":{\"11\":1,\"12\":1}}],[\"一个\",{\"1\":{\"7\":3,\"11\":1,\"13\":1,\"16\":2,\"28\":1,\"30\":1,\"35\":1,\"39\":1,\"41\":1,\"59\":2,\"61\":1,\"70\":1,\"75\":1,\"77\":1,\"78\":1,\"92\":1,\"96\":2,\"104\":1,\"109\":1,\"122\":2}}],[\"一种\",{\"1\":{\"5\":1,\"65\":1}}],[\"}\",{\"1\":{\"6\":1,\"21\":3,\"35\":4,\"36\":5,\"40\":5,\"41\":6,\"42\":5,\"45\":4,\"49\":5,\"56\":4,\"57\":3,\"59\":6,\"60\":19,\"64\":2,\"65\":4,\"66\":1,\"67\":9,\"75\":12,\"81\":6,\"84\":5,\"93\":3,\"94\":4,\"96\":80,\"101\":2,\"102\":4,\"105\":10,\"106\":3,\"110\":2}}],[\"​\",{\"1\":{\"6\":1,\"40\":1,\"60\":1}}],[\"∈\",{\"1\":{\"6\":1}}],[\"且\",{\"1\":{\"6\":1,\"70\":1,\"92\":1,\"93\":1,\"96\":3,\"110\":1}}],[\"∗\",{\"1\":{\"6\":2,\"75\":1}}],[\"∣\",{\"1\":{\"6\":1}}],[\"xanadu13\",{\"1\":{\"114\":2}}],[\"xa3a53275\",{\"1\":{\"60\":1}}],[\"x6\",{\"1\":{\"81\":1}}],[\"x6d411a6a\",{\"1\":{\"60\":1}}],[\"x4\",{\"1\":{\"81\":1}}],[\"x4b1d6b30\",{\"1\":{\"60\":1}}],[\"x2\",{\"1\":{\"81\":2}}],[\"xor\",{\"1\":{\"61\":1,\"67\":2}}],[\"x86\",{\"1\":{\"109\":2}}],[\"x8dc97987\",{\"1\":{\"60\":1}}],[\"x84adf386\",{\"1\":{\"60\":1}}],[\"xf\",{\"1\":{\"60\":4}}],[\"xffff\",{\"1\":{\"59\":1}}],[\"xcbd41fed\",{\"1\":{\"60\":1}}],[\"xccc10ff9\",{\"1\":{\"60\":1}}],[\"x17110e76\",{\"1\":{\"60\":1}}],[\"x16d16793\",{\"1\":{\"60\":1}}],[\"xd\",{\"1\":{\"73\":1}}],[\"xd7153d80\",{\"1\":{\"60\":1}}],[\"xdf15236c\",{\"1\":{\"60\":1}}],[\"x0ed24a6a\",{\"1\":{\"60\":1}}],[\"x3\",{\"1\":{\"81\":1}}],[\"x36e86773\",{\"1\":{\"60\":1}}],[\"x3a697614\",{\"1\":{\"60\":1}}],[\"xecf491de\",{\"1\":{\"60\":1}}],[\"xe0fe08e4\",{\"1\":{\"60\":1}}],[\"xb92fae55\",{\"1\":{\"60\":1}}],[\"x7fff\",{\"1\":{\"59\":1}}],[\"x55\",{\"1\":{\"59\":1,\"67\":2}}],[\"x\",{\"1\":{\"6\":3,\"15\":4,\"21\":3,\"40\":5,\"41\":3,\"42\":3,\"59\":1,\"64\":2,\"65\":1,\"71\":1,\"73\":4,\"75\":8,\"81\":2,\"84\":9,\"103\":2}}],[\"{\",{\"1\":{\"6\":1,\"21\":3,\"35\":4,\"36\":5,\"40\":5,\"41\":6,\"42\":5,\"45\":4,\"49\":5,\"56\":4,\"57\":3,\"59\":6,\"60\":19,\"64\":2,\"65\":4,\"66\":1,\"67\":9,\"75\":12,\"81\":6,\"84\":5,\"93\":3,\"94\":4,\"96\":80,\"101\":2,\"102\":4,\"105\":10,\"106\":3,\"110\":2}}],[\",\",{\"1\":{\"6\":1,\"9\":3,\"10\":2,\"13\":2,\"15\":5,\"16\":9,\"18\":4,\"20\":3,\"21\":11,\"22\":5,\"26\":2,\"27\":25,\"28\":3,\"31\":7,\"32\":3,\"35\":10,\"36\":19,\"38\":5,\"39\":1,\"40\":6,\"41\":5,\"42\":6,\"44\":65,\"45\":2,\"49\":14,\"56\":1,\"57\":5,\"59\":8,\"60\":33,\"62\":1,\"64\":5,\"65\":1,\"67\":6,\"68\":3,\"71\":7,\"75\":30,\"77\":1,\"81\":3,\"84\":5,\"90\":1,\"93\":10,\"94\":9,\"95\":4,\"96\":52,\"101\":3,\"102\":9,\"103\":8,\"104\":1,\"105\":18,\"106\":5,\"107\":2,\"109\":15,\"110\":7,\"113\":2,\"114\":15,\"115\":3,\"118\":12,\"122\":8,\"123\":2,\"124\":8}}],[\"即使\",{\"1\":{\"94\":3}}],[\"即可\",{\"1\":{\"15\":1,\"16\":1,\"20\":1,\"26\":2,\"67\":1,\"75\":1,\"109\":3,\"123\":1}}],[\"即\",{\"1\":{\"6\":1,\"90\":1}}],[\")\",{\"0\":{\"103\":1},\"1\":{\"6\":2,\"10\":2,\"18\":1,\"21\":11,\"31\":1,\"35\":2,\"40\":12,\"41\":13,\"42\":12,\"44\":40,\"45\":12,\"49\":23,\"56\":4,\"57\":5,\"59\":12,\"60\":67,\"64\":5,\"65\":1,\"66\":2,\"67\":28,\"71\":1,\"75\":31,\"78\":1,\"81\":14,\"84\":14,\"93\":4,\"94\":14,\"96\":134,\"101\":9,\"102\":12,\"103\":7,\"105\":27,\"106\":7,\"110\":4,\"112\":1,\"118\":1,\"123\":1}}],[\"(\",{\"0\":{\"103\":1},\"1\":{\"6\":2,\"10\":2,\"18\":1,\"21\":11,\"31\":1,\"35\":2,\"40\":12,\"41\":13,\"42\":12,\"44\":40,\"45\":12,\"49\":23,\"56\":4,\"57\":5,\"59\":12,\"60\":67,\"64\":5,\"65\":1,\"66\":2,\"67\":28,\"71\":1,\"75\":31,\"78\":1,\"81\":14,\"84\":14,\"93\":4,\"94\":14,\"96\":134,\"101\":9,\"102\":12,\"103\":7,\"105\":27,\"106\":7,\"110\":4,\"112\":1,\"118\":1,\"123\":1}}],[\"ln\",{\"1\":{\"115\":1}}],[\"l15\",{\"1\":{\"111\":1}}],[\"lazy\",{\"1\":{\"105\":6,\"106\":3,\"107\":1}}],[\"lchild\",{\"1\":{\"96\":5}}],[\"learn\",{\"1\":{\"113\":1}}],[\"leak\",{\"1\":{\"99\":2}}],[\"let\",{\"1\":{\"96\":12,\"101\":3,\"102\":4,\"103\":2,\"105\":2,\"106\":1}}],[\"leftmost\",{\"1\":{\"96\":4}}],[\"left\",{\"1\":{\"96\":17}}],[\"list\",{\"1\":{\"114\":1,\"124\":1}}],[\"life\",{\"1\":{\"62\":1}}],[\"line\",{\"1\":{\"60\":2}}],[\"linux\",{\"0\":{\"19\":1,\"119\":1,\"120\":1,\"124\":1},\"1\":{\"112\":1,\"114\":1,\"115\":1,\"116\":1,\"120\":1,\"122\":3,\"123\":1,\"124\":4}}],[\"little\",{\"1\":{\"56\":1}}],[\"ll\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"49\":1,\"84\":1}}],[\"loop\",{\"1\":{\"96\":1}}],[\"lo\",{\"1\":{\"59\":2}}],[\"logger\",{\"1\":{\"89\":1,\"93\":3,\"94\":7}}],[\"logging\",{\"0\":{\"92\":1},\"1\":{\"87\":1,\"92\":2,\"93\":2}}],[\"logback\",{\"0\":{\"89\":1},\"1\":{\"88\":1,\"90\":2,\"93\":2}}],[\"log4j2\",{\"0\":{\"90\":1},\"1\":{\"88\":1,\"90\":2,\"94\":4}}],[\"log4j\",{\"0\":{\"88\":1},\"1\":{\"88\":2,\"89\":1,\"90\":3,\"92\":1,\"93\":2}}],[\"logn\",{\"1\":{\"44\":1}}],[\"loglogn\",{\"1\":{\"40\":1}}],[\"long\",{\"1\":{\"40\":2,\"41\":2,\"42\":2,\"49\":2,\"66\":2,\"84\":2}}],[\"longdada\",{\"1\":{\"38\":1}}],[\"lock\",{\"1\":{\"22\":1,\"106\":1}}],[\"localhost\",{\"1\":{\"36\":1,\"118\":1}}],[\"local\",{\"1\":{\"16\":1,\"36\":1,\"105\":1}}],[\"l\",{\"1\":{\"6\":2,\"49\":13}}],[\"，\",{\"0\":{\"28\":1,\"105\":1},\"1\":{\"6\":3,\"7\":3,\"8\":1,\"9\":2,\"10\":2,\"12\":1,\"15\":9,\"16\":22,\"18\":2,\"21\":1,\"23\":2,\"25\":2,\"26\":4,\"27\":6,\"28\":1,\"30\":2,\"31\":7,\"33\":1,\"35\":2,\"36\":8,\"37\":3,\"39\":2,\"40\":1,\"41\":1,\"42\":2,\"56\":1,\"57\":1,\"58\":2,\"59\":5,\"60\":5,\"61\":1,\"64\":1,\"65\":2,\"67\":5,\"70\":4,\"71\":3,\"72\":1,\"75\":16,\"77\":2,\"78\":1,\"81\":3,\"83\":2,\"84\":1,\"87\":1,\"88\":2,\"89\":3,\"90\":9,\"92\":5,\"93\":11,\"94\":9,\"95\":5,\"96\":31,\"104\":6,\"105\":1,\"106\":2,\"109\":8,\"110\":1,\"112\":3,\"113\":1,\"114\":2,\"116\":1,\"118\":4,\"122\":12,\"123\":2,\"124\":18}}],[\"集合\",{\"1\":{\"6\":1}}],[\"组成\",{\"1\":{\"6\":1,\"71\":1,\"78\":1}}],[\"出于\",{\"1\":{\"104\":1}}],[\"出来\",{\"1\":{\"88\":1}}],[\"出口\",{\"1\":{\"70\":1,\"71\":1}}],[\"出现\",{\"1\":{\"31\":1,\"36\":1,\"104\":1}}],[\"出\",{\"1\":{\"6\":1,\"114\":1}}],[\"出发\",{\"1\":{\"4\":1}}],[\"gui\",{\"1\":{\"113\":2}}],[\"gulcu\",{\"1\":{\"93\":1}}],[\"graph\",{\"1\":{\"110\":1}}],[\"grammar\",{\"1\":{\"8\":1,\"9\":1,\"10\":1}}],[\"gnu\",{\"1\":{\"109\":2}}],[\"globalvaluemapcell\",{\"1\":{\"110\":1}}],[\"globals\",{\"1\":{\"110\":1}}],[\"global\",{\"1\":{\"107\":1}}],[\"gc\",{\"1\":{\"95\":1}}],[\"gcc\",{\"1\":{\"59\":1}}],[\"generator\",{\"1\":{\"68\":1}}],[\"get\",{\"1\":{\"34\":2,\"101\":1,\"105\":5,\"118\":1}}],[\"gist\",{\"1\":{\"62\":1,\"68\":1}}],[\"github\",{\"1\":{\"31\":1,\"36\":2,\"38\":2,\"62\":1,\"68\":2,\"107\":1,\"111\":1}}],[\"git\",{\"0\":{\"17\":1,\"18\":1},\"1\":{\"18\":4,\"26\":1,\"36\":4}}],[\"godbolt\",{\"1\":{\"59\":1}}],[\"google\",{\"1\":{\"15\":1,\"122\":1,\"124\":1}}],[\"gyp\",{\"1\":{\"21\":2}}],[\"gypprocess\",{\"1\":{\"21\":2}}],[\"gypargs\",{\"1\":{\"21\":3}}],[\"g\",{\"1\":{\"6\":3,\"40\":7,\"41\":3,\"42\":6,\"81\":1,\"124\":1}}],[\"是否\",{\"1\":{\"93\":1}}],[\"是因为\",{\"0\":{\"22\":1}}],[\"是\",{\"1\":{\"5\":1,\"7\":1,\"10\":1,\"15\":2,\"16\":2,\"23\":1,\"24\":1,\"25\":1,\"27\":2,\"35\":1,\"56\":2,\"57\":1,\"59\":1,\"60\":1,\"61\":1,\"64\":1,\"65\":2,\"71\":1,\"75\":3,\"92\":1,\"94\":1,\"96\":3,\"112\":1,\"114\":1,\"122\":2,\"124\":2}}],[\"只想\",{\"1\":{\"109\":1}}],[\"只读\",{\"0\":{\"105\":1}}],[\"只能\",{\"1\":{\"10\":1,\"31\":1,\"60\":1,\"67\":1}}],[\"只有\",{\"1\":{\"9\":1,\"13\":1,\"96\":2}}],[\"只\",{\"1\":{\"5\":1,\"42\":1,\"93\":1}}],[\"句柄\",{\"0\":{\"13\":1},\"1\":{\"13\":2}}],[\"句子\",{\"0\":{\"5\":1},\"1\":{\"5\":2,\"6\":1}}],[\"句型\",{\"0\":{\"4\":1},\"1\":{\"4\":1,\"5\":2,\"13\":1}}],[\"非\",{\"1\":{\"4\":1,\"9\":1,\"122\":1}}],[\"又\",{\"1\":{\"4\":1,\"31\":1}}],[\"既\",{\"1\":{\"4\":1}}],[\"。\",{\"0\":{\"22\":1},\"1\":{\"4\":2,\"5\":2,\"7\":1,\"9\":1,\"11\":1,\"13\":2,\"15\":4,\"16\":5,\"18\":1,\"21\":1,\"26\":3,\"28\":2,\"30\":1,\"31\":3,\"36\":4,\"37\":2,\"39\":1,\"58\":1,\"59\":3,\"60\":1,\"61\":1,\"65\":3,\"67\":2,\"70\":3,\"71\":4,\"72\":1,\"75\":5,\"77\":1,\"78\":2,\"81\":1,\"83\":2,\"87\":1,\"88\":1,\"89\":1,\"90\":3,\"92\":4,\"93\":4,\"94\":1,\"95\":2,\"104\":2,\"106\":1,\"109\":4,\"110\":1,\"112\":1,\"118\":2,\"122\":4,\"123\":2,\"124\":6}}],[\"）\",{\"0\":{\"41\":1,\"91\":1},\"1\":{\"4\":1,\"15\":1,\"16\":3,\"36\":1,\"59\":1,\"70\":1,\"75\":1,\"90\":2,\"92\":1,\"93\":1,\"95\":1,\"113\":1,\"124\":2}}],[\"α\",{\"1\":{\"4\":1}}],[\">\",{\"1\":{\"4\":1,\"6\":1,\"9\":3,\"10\":4,\"16\":2,\"40\":9,\"41\":11,\"42\":12,\"45\":8,\"49\":13,\"56\":1,\"57\":1,\"59\":13,\"60\":19,\"64\":1,\"65\":9,\"66\":1,\"67\":7,\"75\":13,\"81\":3,\"84\":11,\"94\":2,\"96\":19,\"101\":2,\"102\":6,\"103\":8,\"105\":5,\"106\":1,\"110\":2,\"114\":5}}],[\"*\",{\"1\":{\"4\":1,\"36\":11,\"40\":1,\"41\":1,\"42\":1,\"49\":1,\"57\":4,\"59\":7,\"60\":8,\"64\":1,\"67\":5,\"75\":1,\"96\":54,\"114\":1}}],[\"=\",{\"1\":{\"4\":2,\"6\":2,\"21\":8,\"27\":1,\"36\":1,\"40\":13,\"41\":7,\"42\":11,\"45\":4,\"49\":20,\"56\":3,\"59\":15,\"60\":15,\"64\":2,\"65\":4,\"66\":1,\"67\":7,\"69\":1,\"75\":39,\"76\":1,\"77\":5,\"81\":16,\"82\":1,\"84\":14,\"96\":35,\"101\":3,\"102\":6,\"103\":2,\"105\":5,\"106\":2,\"109\":3,\"118\":6,\"122\":1}}],[\" \",{\"0\":{\"14\":1,\"18\":2,\"21\":2,\"22\":3,\"26\":1,\"33\":2,\"34\":2,\"40\":2,\"41\":2,\"42\":2,\"69\":4,\"73\":1,\"74\":1,\"76\":5,\"79\":1,\"80\":1,\"82\":3,\"95\":1,\"124\":1},\"1\":{\"4\":2,\"6\":3,\"8\":2,\"9\":20,\"10\":20,\"15\":4,\"16\":6,\"18\":20,\"20\":3,\"21\":51,\"22\":3,\"25\":3,\"26\":2,\"27\":3,\"30\":1,\"31\":14,\"32\":4,\"34\":5,\"35\":56,\"36\":94,\"39\":6,\"40\":100,\"41\":92,\"42\":100,\"45\":77,\"49\":125,\"56\":26,\"57\":38,\"58\":1,\"59\":195,\"60\":288,\"64\":45,\"65\":56,\"66\":17,\"67\":118,\"70\":5,\"71\":7,\"73\":15,\"74\":1,\"75\":102,\"77\":28,\"78\":2,\"79\":2,\"80\":2,\"81\":36,\"84\":52,\"88\":4,\"89\":1,\"90\":1,\"92\":10,\"93\":31,\"94\":55,\"96\":664,\"101\":27,\"102\":55,\"103\":20,\"105\":137,\"106\":26,\"109\":18,\"110\":28,\"112\":3,\"114\":26,\"115\":5,\"116\":1,\"118\":26,\"120\":2,\"121\":3,\"122\":8,\"123\":2,\"124\":5,\"125\":2}}],[\"src\",{\"1\":{\"107\":1,\"109\":1,\"111\":1}}],[\"simple\",{\"1\":{\"93\":1}}],[\"size\",{\"0\":{\"57\":1},\"1\":{\"60\":6,\"67\":3}}],[\"sizeof\",{\"1\":{\"49\":1,\"57\":2,\"60\":7,\"67\":6}}],[\"slf4j\",{\"0\":{\"93\":1},\"1\":{\"90\":1,\"93\":3,\"94\":2}}],[\"sx\",{\"1\":{\"75\":7}}],[\"sample\",{\"0\":{\"73\":1,\"74\":1,\"79\":1,\"80\":1}}],[\"swap\",{\"1\":{\"45\":1,\"49\":1}}],[\"sourceforge\",{\"1\":{\"123\":1}}],[\"sound\",{\"1\":{\"122\":1}}],[\"someerr\",{\"1\":{\"103\":3}}],[\"some\",{\"1\":{\"96\":1,\"102\":3,\"103\":2}}],[\"sorted\",{\"1\":{\"45\":3}}],[\"solutions\",{\"1\":{\"122\":1}}],[\"solution\",{\"0\":{\"40\":1,\"41\":1,\"42\":1,\"75\":1,\"81\":1,\"84\":1,\"99\":1}}],[\"sy\",{\"1\":{\"75\":7}}],[\"sync\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"49\":1,\"75\":1,\"81\":1,\"84\":1,\"105\":1,\"106\":1}}],[\"systemctl\",{\"1\":{\"35\":4,\"118\":2}}],[\"systemd\",{\"1\":{\"35\":1,\"118\":1}}],[\"system\",{\"1\":{\"16\":1,\"118\":1}}],[\"share\",{\"1\":{\"115\":2}}],[\"shawchen08\",{\"1\":{\"38\":1}}],[\"show\",{\"1\":{\"109\":1}}],[\"showproblem\",{\"1\":{\"69\":1,\"76\":1,\"82\":1}}],[\"short\",{\"1\":{\"57\":1}}],[\"shell\",{\"1\":{\"21\":2,\"35\":1}}],[\"smtp\",{\"1\":{\"36\":1}}],[\"smc\",{\"1\":{\"27\":1}}],[\"step\",{\"1\":{\"75\":5}}],[\"string\",{\"1\":{\"90\":1,\"96\":2,\"101\":2,\"102\":4,\"106\":2}}],[\"strict\",{\"1\":{\"21\":1}}],[\"str\",{\"1\":{\"60\":16,\"67\":9,\"96\":5,\"101\":2,\"105\":3,\"106\":1}}],[\"struct\",{\"1\":{\"59\":3,\"60\":1,\"65\":3,\"67\":1,\"96\":2,\"103\":1,\"110\":1}}],[\"std\",{\"1\":{\"40\":1,\"41\":1,\"42\":1,\"45\":2,\"49\":2,\"58\":1,\"59\":1,\"60\":6,\"64\":1,\"65\":1,\"66\":1,\"67\":3,\"75\":2,\"81\":2,\"84\":2,\"96\":10,\"105\":3,\"106\":1}}],[\"stdio\",{\"1\":{\"21\":1,\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"49\":1,\"56\":1,\"57\":1,\"75\":1,\"81\":1,\"84\":1}}],[\"stackoverflow\",{\"1\":{\"105\":1}}],[\"stacktrace\",{\"1\":{\"94\":1}}],[\"static\",{\"0\":{\"97\":1},\"1\":{\"59\":10,\"60\":1,\"65\":3,\"105\":11,\"106\":4,\"107\":1}}],[\"status\",{\"1\":{\"35\":1}}],[\"starts\",{\"1\":{\"124\":1}}],[\"start\",{\"1\":{\"35\":1,\"94\":2}}],[\"stop\",{\"1\":{\"35\":1,\"124\":1}}],[\"scripts\",{\"1\":{\"21\":1}}],[\"spawn\",{\"0\":{\"21\":1},\"1\":{\"21\":3}}],[\"superuser\",{\"1\":{\"124\":1}}],[\"subsystem\",{\"1\":{\"112\":1}}],[\"submit\",{\"1\":{\"40\":1,\"41\":1,\"42\":1}}],[\"sunface\",{\"1\":{\"106\":1}}],[\"sunocean\",{\"1\":{\"62\":1}}],[\"succ\",{\"1\":{\"96\":4}}],[\"successor\",{\"1\":{\"96\":5}}],[\"su\",{\"1\":{\"20\":2}}],[\"sudo\",{\"1\":{\"20\":1,\"35\":5,\"36\":3,\"118\":3,\"121\":1,\"122\":2}}],[\"self\",{\"1\":{\"96\":39,\"107\":1}}],[\"sequence\",{\"1\":{\"60\":3,\"67\":2}}],[\"seq\",{\"1\":{\"60\":5,\"67\":2}}],[\"seed\",{\"1\":{\"59\":2,\"60\":5}}],[\"server\",{\"1\":{\"36\":2,\"123\":2}}],[\"servername\",{\"1\":{\"36\":1}}],[\"service\",{\"1\":{\"35\":1,\"118\":2}}],[\"security\",{\"1\":{\"21\":1}}],[\"set\",{\"1\":{\"16\":1}}],[\"setup\",{\"1\":{\"15\":1}}],[\"sensitive\",{\"1\":{\"8\":1}}],[\"s\",{\"1\":{\"4\":1,\"6\":1,\"9\":1,\"40\":1,\"41\":1,\"42\":1,\"59\":3,\"71\":1,\"73\":2,\"75\":1,\"96\":4,\"115\":1}}],[\"（\",{\"0\":{\"41\":1,\"91\":1},\"1\":{\"4\":1,\"15\":1,\"16\":3,\"36\":1,\"59\":1,\"70\":1,\"75\":1,\"90\":2,\"92\":1,\"93\":1,\"95\":1,\"113\":1,\"124\":2}}],[\"或者\",{\"1\":{\"16\":1,\"26\":1,\"27\":1,\"36\":1,\"113\":1}}],[\"或\",{\"1\":{\"4\":1,\"10\":2,\"72\":1,\"93\":2}}],[\"的话\",{\"1\":{\"15\":1,\"16\":2,\"124\":1}}],[\"的\",{\"0\":{\"14\":1,\"17\":1,\"22\":2,\"55\":1,\"67\":1,\"85\":1,\"108\":1,\"109\":1},\"1\":{\"4\":3,\"5\":2,\"6\":2,\"7\":1,\"11\":2,\"12\":3,\"13\":4,\"15\":5,\"16\":9,\"18\":1,\"20\":2,\"21\":2,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":5,\"30\":1,\"31\":5,\"33\":1,\"35\":2,\"36\":3,\"37\":3,\"39\":1,\"40\":1,\"42\":2,\"56\":3,\"57\":7,\"58\":2,\"59\":6,\"60\":3,\"61\":1,\"64\":3,\"65\":5,\"67\":1,\"70\":2,\"71\":7,\"75\":9,\"83\":1,\"84\":1,\"88\":2,\"89\":3,\"90\":4,\"92\":3,\"93\":5,\"94\":2,\"95\":8,\"96\":25,\"104\":5,\"105\":2,\"106\":2,\"109\":2,\"110\":1,\"112\":1,\"113\":1,\"114\":6,\"116\":2,\"118\":3,\"122\":6,\"123\":3,\"124\":6}}],[\"从\",{\"1\":{\"4\":1,\"96\":2,\"114\":1}}],[\"和\",{\"0\":{\"3\":1,\"96\":1},\"1\":{\"15\":2,\"16\":1,\"22\":1,\"27\":1,\"35\":1,\"36\":1,\"71\":2,\"81\":1,\"88\":1,\"90\":4,\"92\":1,\"118\":1,\"122\":1}}],[\"：\",{\"0\":{\"3\":1,\"22\":1},\"1\":{\"6\":1,\"9\":1,\"10\":1,\"15\":1,\"16\":4,\"18\":3,\"20\":2,\"21\":2,\"22\":3,\"23\":1,\"24\":1,\"27\":3,\"28\":3,\"31\":3,\"35\":2,\"39\":2,\"40\":2,\"41\":2,\"42\":1,\"56\":1,\"57\":1,\"59\":2,\"60\":1,\"61\":1,\"64\":1,\"69\":1,\"71\":5,\"75\":1,\"76\":1,\"77\":1,\"81\":1,\"82\":1,\"84\":1,\"93\":2,\"94\":2,\"95\":2,\"96\":1,\"99\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":3,\"109\":2,\"113\":2,\"114\":3,\"115\":2,\"116\":1,\"118\":3,\"122\":5,\"123\":1,\"124\":2}}],[\"！\",{\"0\":{\"28\":1},\"1\":{\"1\":1,\"118\":1}}],[\"页面\",{\"1\":{\"28\":1}}],[\"页\",{\"0\":{\"1\":1}}],[\"介绍\",{\"0\":{\"1\":1},\"1\":{\"113\":1}}],[\"博客\",{\"0\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,tt(t,r,n)]):e==="search"?self.postMessage([e,o,Z(t,r,n)]):self.postMessage({suggestions:[e,o,tt(t,r,n)],results:[e,o,Z(t,r,n)]})};
//# sourceMappingURL=index.js.map
