import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as n,o as e}from"./app-_sB4isO9.js";const t="/assets/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/%E7%9F%AD%E8%AF%AD%E3%80%81%E7%9B%B4%E6%8E%A5%E7%9F%AD%E8%AF%AD%E3%80%81%E5%8F%A5%E6%9F%84.jpg",l={};function p(r,s){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="编译原理期末复习笔记" tabindex="-1"><a class="header-anchor" href="#编译原理期末复习笔记"><span>编译原理期末复习笔记</span></a></h1><h2 id="第二章-形式文法和形式语言" tabindex="-1"><a class="header-anchor" href="#第二章-形式文法和形式语言"><span>第二章：形式文法和形式语言</span></a></h2><h3 id="句型" tabindex="-1"><a class="header-anchor" href="#句型"><span>句型</span></a></h3><p>从文法的开始符号出发进行零步或多于零步的推导得到的文法符号串（S =*=&gt; α）。句型可以既包含终结符号又包含非终结符号。</p><h3 id="句子" tabindex="-1"><a class="header-anchor" href="#句子"><span>句子</span></a></h3><p>只包含终结符号的句型称为句子。句子是一种特殊的句型。</p><h3 id="语言" tabindex="-1"><a class="header-anchor" href="#语言"><span>语言</span></a></h3><p>文法 G 推导出的所有<strong>句子</strong>组成的集合，称为语言，记为 L(G)，即：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>S</mi><mo>=</mo><mo>∗</mo><mo>&gt;</mo><mi>x</mi><mtext>且</mtext><mi>x</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mo>∗</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">L(G)=\\{x | S =*&gt; x \\text{且} x∈V_T*\\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mord text"><span class="mord cjk_fallback">且</span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∗</span><span class="mclose">}</span></span></span></span></p><h3 id="等价文法" tabindex="-1"><a class="header-anchor" href="#等价文法"><span>等价文法</span></a></h3><p><strong>一个文法对应一个语言，但一个语言可能由若干个文法产生它</strong>，这若干个文法是等价的，称为等价文法。</p><h3 id="_1型文法" tabindex="-1"><a class="header-anchor" href="#_1型文法"><span>1型文法</span></a></h3><blockquote><p>上下文有关文法，Context Sensitive Grammar</p></blockquote><h3 id="_2型文法" tabindex="-1"><a class="header-anchor" href="#_2型文法"><span>2型文法</span></a></h3><blockquote><p>上下文无关文法，Context Free Grammar</p></blockquote><p>要求<strong>产生式左边只有1个非终结符号</strong>，高级程序设计语言大部分语法结构使用2型文法描述。</p><p>例如：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">S </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> aB </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bA</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">A </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> aS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bAA</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">B </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> aBB</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3型文法" tabindex="-1"><a class="header-anchor" href="#_3型文法"><span>3型文法</span></a></h3><blockquote><p>正规文法，Regular Grammar</p></blockquote><p>对于每个产生式，只能是以下两种形式之一：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) A </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a 或 A </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> aB</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 右线性文法</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) A </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a 或 A </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ba</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 左线性文法</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="短语" tabindex="-1"><a class="header-anchor" href="#短语"><span>短语</span></a></h3><p>一棵子树的所有叶子自左至右排列起来形成一个相对于子树根的短语。</p><h3 id="直接短语" tabindex="-1"><a class="header-anchor" href="#直接短语"><span>直接短语</span></a></h3><p>仅有父子两代的一棵子树，它的所有叶子自左至右排列起来所形成的符号串</p><h3 id="句柄" tabindex="-1"><a class="header-anchor" href="#句柄"><span>句柄</span></a></h3><blockquote><p>一个句型的分析树中最左最下那棵只有父子两代的子树的所有叶子的自左至右排列。</p></blockquote><p>最左直接短语称为句柄。</p><figure><img src="`+t+'" alt="短语、直接短语、句柄" tabindex="0" loading="lazy"><figcaption>短语、直接短语、句柄</figcaption></figure>',30)]))}const c=a(l,[["render",p],["__file","compiler_principle.html.vue"]]),o=JSON.parse(`{"path":"/posts/compiler_principle.html","title":"编译原理期末复习笔记","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-01-06T00:00:00.000Z","category":["Compiler Principle"],"description":"编译原理期末复习笔记 第二章：形式文法和形式语言 句型 从文法的开始符号出发进行零步或多于零步的推导得到的文法符号串（S =*=> α）。句型可以既包含终结符号又包含非终结符号。 句子 只包含终结符号的句型称为句子。句子是一种特殊的句型。 语言 文法 G 推导出的所有句子组成的集合，称为语言，记为 L(G)，即： L(G)={x∣S=∗>x且x∈VT​...","head":[["meta",{"property":"og:url","content":"https://iXanadu13.github.io/posts/compiler_principle.html"}],["meta",{"property":"og:site_name","content":"Xanadu13's Blog"}],["meta",{"property":"og:title","content":"编译原理期末复习笔记"}],["meta",{"property":"og:description","content":"编译原理期末复习笔记 第二章：形式文法和形式语言 句型 从文法的开始符号出发进行零步或多于零步的推导得到的文法符号串（S =*=> α）。句型可以既包含终结符号又包含非终结符号。 句子 只包含终结符号的句型称为句子。句子是一种特殊的句型。 语言 文法 G 推导出的所有句子组成的集合，称为语言，记为 L(G)，即： L(G)={x∣S=∗>x且x∈VT​..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://iXanadu13.github.io/assets/images/编译原理期末复习/短语、直接短语、句柄.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-06T11:42:19.000Z"}],["meta",{"property":"article:published_time","content":"2025-01-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-06T11:42:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"编译原理期末复习笔记\\",\\"image\\":[\\"https://iXanadu13.github.io/assets/images/编译原理期末复习/短语、直接短语、句柄.jpg\\"],\\"datePublished\\":\\"2025-01-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-06T11:42:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Xanadu13\\",\\"url\\":\\"https://github.com/iXanadu13\\"}]}"]]},"headers":[{"level":2,"title":"第二章：形式文法和形式语言","slug":"第二章-形式文法和形式语言","link":"#第二章-形式文法和形式语言","children":[{"level":3,"title":"句型","slug":"句型","link":"#句型","children":[]},{"level":3,"title":"句子","slug":"句子","link":"#句子","children":[]},{"level":3,"title":"语言","slug":"语言","link":"#语言","children":[]},{"level":3,"title":"等价文法","slug":"等价文法","link":"#等价文法","children":[]},{"level":3,"title":"1型文法","slug":"_1型文法","link":"#_1型文法","children":[]},{"level":3,"title":"2型文法","slug":"_2型文法","link":"#_2型文法","children":[]},{"level":3,"title":"3型文法","slug":"_3型文法","link":"#_3型文法","children":[]},{"level":3,"title":"短语","slug":"短语","link":"#短语","children":[]},{"level":3,"title":"直接短语","slug":"直接短语","link":"#直接短语","children":[]},{"level":3,"title":"句柄","slug":"句柄","link":"#句柄","children":[]}]}],"git":{"createdTime":1736163739000,"updatedTime":1736163739000,"contributors":[{"name":"Xanadu13","email":"xanadu13@qq.com","commits":1}]},"readingTime":{"minutes":1.57,"words":470},"filePathRelative":"posts/compiler_principle.md","localizedDate":"2025年1月6日","excerpt":"\\n<h2>第二章：形式文法和形式语言</h2>\\n<h3>句型</h3>\\n<p>从文法的开始符号出发进行零步或多于零步的推导得到的文法符号串（S =*=&gt; α）。句型可以既包含终结符号又包含非终结符号。</p>\\n<h3>句子</h3>\\n<p>只包含终结符号的句型称为句子。句子是一种特殊的句型。</p>\\n<h3>语言</h3>\\n<p>文法 G 推导出的所有<strong>句子</strong>组成的集合，称为语言，记为 L(G)，即：</p>\\n<p><span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>L</mi><mo stretchy=\\"false\\">(</mo><mi>G</mi><mo stretchy=\\"false\\">)</mo><mo>=</mo><mo stretchy=\\"false\\">{</mo><mi>x</mi><mi mathvariant=\\"normal\\">∣</mi><mi>S</mi><mo>=</mo><mo>∗</mo><mo>&gt;</mo><mi>x</mi><mtext>且</mtext><mi>x</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mo>∗</mo><mo stretchy=\\"false\\">}</mo></mrow><annotation encoding=\\"application/x-tex\\">L(G)=\\\\{x | S =*&gt; x \\\\text{且} x∈V_T*\\\\}</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\">L</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\">G</span><span class=\\"mclose\\">)</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">=</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mopen\\">{</span><span class=\\"mord mathnormal\\">x</span><span class=\\"mord\\">∣</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.05764em;\\">S</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">=</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.5782em;vertical-align:-0.0391em;\\"></span><span class=\\"mord\\">∗</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">&gt;</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.7224em;vertical-align:-0.0391em;\\"></span><span class=\\"mord mathnormal\\">x</span><span class=\\"mord text\\"><span class=\\"mord cjk_fallback\\">且</span></span><span class=\\"mord mathnormal\\">x</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">∈</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord\\"><span class=\\"mord mathnormal\\" style=\\"margin-right:0.22222em;\\">V</span><span class=\\"msupsub\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.3283em;\\"><span style=\\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mathnormal mtight\\" style=\\"margin-right:0.13889em;\\">T</span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.15em;\\"><span></span></span></span></span></span></span><span class=\\"mord\\">∗</span><span class=\\"mclose\\">}</span></span></span></span></p>","autoDesc":true}`);export{c as comp,o as data};
